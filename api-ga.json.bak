{
  "info": {
		"description": "Intent API (GA)",
        "title": "Cisco DNA Center Platform v. 1.2.6 (GA)",
        "version": "1.2.6"
		},
    "swagger": "2.0",
    "tags": [],
    "schemes": [],
    "paths": {
        "/dna/intent/api/v1/discovery/count": {
            "get": {
                "operationId": "getCountOfAllDiscoveryJobs",
                "tags": [
                    "Network Discovery"
                ],
                "summary": "Get count of all discovery jobs",
                "description": "Returns the count of all available discovery jobs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/CountResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/onboarding/pnp-device/{id}": {
            "put": {
                "operationId": "updateDevice",
                "tags": [
                    "PnP"
                ],
                "summary": "Update Device",
                "description": "Updates device details specified by device id in PnP database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Device"
                        },
                        "in": "body"
                    },
                    {
                        "name": "Content-Type",
                        "description": "Request body content type",
                        "default": "application/json",
                        "required": true,
                        "type": "string",
                        "in": "header"
                    },
                    {
                        "name": "id",
                        "description": "id",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/UpdateDeviceResponse"
                        }
                    },
                    "201": {
                        "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
                    },
                    "202": {
                        "description": "The request was accepted for processing, but the processing has not been completed."
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            },
            "get": {
                "operationId": "getDeviceById",
                "tags": [
                    "PnP"
                ],
                "summary": "Get Device by Id",
                "description": "Returns device details specified by device id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "id",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/GetDeviceByIdResponse"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            },
            "delete": {
                "operationId": "deleteDeviceByIdFromPnP",
                "tags": [
                    "PnP"
                ],
                "summary": "Delete Device by Id from PnP",
                "description": "Deletes specified device from PnP database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "id",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/DeleteDeviceByIdFromPnPResponse"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/global-credential/snmpv2-write-community": {
            "put": {
                "operationId": "updateSNMPWriteCommunity",
                "tags": [
                    "Network Discovery"
                ],
                "summary": "Update SNMP write community",
                "description": "Updates global SNMP write community",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SNMPvWriteCommunityDTO"
                        },
                        "in": "body"
                    },
                    {
                        "name": "Content-Type",
                        "description": "Request body content type",
                        "default": "application/json",
                        "required": true,
                        "type": "string",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/TaskIdResult"
                        }
                    },
                    "201": {
                        "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
                    },
                    "202": {
                        "description": "The request was accepted for processing, but the processing has not been completed."
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            },
            "post": {
                "operationId": "createSNMPWriteCommunity",
                "tags": [
                    "Network Discovery"
                ],
                "summary": "Create SNMP write community",
                "description": "Adds global SNMP write community",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SNMPvWriteCommunityDTO"
                        },
                        "in": "body"
                    },
                    {
                        "name": "Content-Type",
                        "description": "Request body content type",
                        "default": "application/json",
                        "required": true,
                        "type": "string",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/TaskIdResult"
                        }
                    },
                    "201": {
                        "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
                    },
                    "202": {
                        "description": "The request was accepted for processing, but the processing has not been completed."
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/template-programmer/template": {
            "get": {
                "operationId": "getsTheTemplatesAvailable",
                "tags": [
                    "Template Programmer"
                ],
                "summary": "Gets the templates available",
                "description": "List the templates available",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "projectId",
                        "description": "projectId",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "softwareType",
                        "description": "softwareType",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "softwareVersion",
                        "description": "softwareVersion",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "productFamily",
                        "description": "productFamily",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "productSeries",
                        "description": "productSeries",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "productType",
                        "description": "productType",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "filterConflictingTemplates",
                        "description": "filterConflictingTemplates",
                        "required": false,
                        "type": "boolean",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/CollectionTemplateInfo"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            },
            "put": {
                "operationId": "updateTemplate",
                "tags": [
                    "Template Programmer"
                ],
                "summary": "Update Template",
                "description": "Updates an existing template",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TemplateDTO"
                        },
                        "in": "body"
                    },
                    {
                        "name": "Content-Type",
                        "description": "Request body content type",
                        "default": "application/json",
                        "required": true,
                        "type": "string",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/TaskIdResult"
                        }
                    },
                    "201": {
                        "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
                    },
                    "202": {
                        "description": "The request was accepted for processing, but the processing has not been completed."
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/template-programmer/project": {
            "post": {
                "operationId": "createProject",
                "tags": [
                    "Template Programmer"
                ],
                "summary": "Create Project",
                "description": "Creates a new project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProjectDTO"
                        },
                        "in": "body"
                    },
                    {
                        "name": "Content-Type",
                        "description": "Request body content type",
                        "default": "application/json",
                        "required": true,
                        "type": "string",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/TaskIdResult"
                        }
                    },
                    "201": {
                        "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
                    },
                    "202": {
                        "description": "The request was accepted for processing, but the processing has not been completed."
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            },
            "get": {
                "operationId": "getProjects",
                "tags": [
                    "Template Programmer"
                ],
                "summary": "Get Projects",
                "description": "Returns the projects in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "description": "Name of project to be searched",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/CollectionProjectDTO"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            },
            "put": {
                "operationId": "updateProject",
                "tags": [
                    "Template Programmer"
                ],
                "summary": "Update Project",
                "description": "Updates an existing project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProjectDTO"
                        },
                        "in": "body"
                    },
                    {
                        "name": "Content-Type",
                        "description": "Request body content type",
                        "default": "application/json",
                        "required": true,
                        "type": "string",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/TaskIdResult"
                        }
                    },
                    "201": {
                        "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
                    },
                    "202": {
                        "description": "The request was accepted for processing, but the processing has not been completed."
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/onboarding/pnp-device/sacct/{domain}/vacct/{name}/sync-result": {
            "get": {
                "operationId": "getSyncResultForVirtualAccount",
                "tags": [
                    "PnP"
                ],
                "summary": "Get Sync Result for Virtual Account",
                "description": "Returns the summary of devices synced from the given smart account & virtual account with PnP",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "domain",
                        "description": "Smart Account Domain",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    },
                    {
                        "name": "name",
                        "description": "Virtual Account Name",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/GetSyncResultForVirtualAccountResponse"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/onboarding/pnp-settings/savacct": {
            "post": {
                "operationId": "addVirtualAccount",
                "tags": [
                    "PnP"
                ],
                "summary": "Add Virtual Account",
                "description": "Registers a Smart Account, Virtual Account and the relevant server profile info with the PnP System & database. The devices present in the registered virtual account are synced with the PnP database as well. The response payload returns the new profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SAVAMapping"
                        },
                        "in": "body"
                    },
                    {
                        "name": "Content-Type",
                        "description": "Request body content type",
                        "default": "application/json",
                        "required": true,
                        "type": "string",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/AddVirtualAccountResponse"
                        }
                    },
                    "201": {
                        "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
                    },
                    "202": {
                        "description": "The request was accepted for processing, but the processing has not been completed."
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            },
            "put": {
                "operationId": "updatePnPServerProfile",
                "tags": [
                    "PnP"
                ],
                "summary": "Update PnP Server Profile",
                "description": "Updates the PnP Server profile in a registered Virtual Account in the PnP database. The response payload returns the updated smart & virtual account info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SAVAMapping"
                        },
                        "in": "body"
                    },
                    {
                        "name": "Content-Type",
                        "description": "Request body content type",
                        "default": "application/json",
                        "required": true,
                        "type": "string",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/UpdatePnPServerProfileResponse"
                        }
                    },
                    "201": {
                        "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
                    },
                    "202": {
                        "description": "The request was accepted for processing, but the processing has not been completed."
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/image/importation": {
            "get": {
                "operationId": "getSoftwareImageDetails",
                "tags": [
                    "SWIM"
                ],
                "summary": "Get software image details",
                "description": "Returns software image list based on a filter criteria. For example: \"filterbyName = cat3k%\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "imageUuid",
                        "description": "imageUuid",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "name",
                        "description": "name",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "family",
                        "description": "family",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "applicationType",
                        "description": "applicationType",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "imageIntegrityStatus",
                        "description": "imageIntegrityStatus - FAILURE, UNKNOWN, VERIFIED",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "version",
                        "description": "software Image Version",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "imageSeries",
                        "description": "image Series",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "imageName",
                        "description": "image Name",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "isTaggedGolden",
                        "description": "is Tagged Golden",
                        "required": false,
                        "type": "boolean",
                        "in": "query"
                    },
                    {
                        "name": "isCCORecommended",
                        "description": "is recommended from cisco.com",
                        "required": false,
                        "type": "boolean",
                        "in": "query"
                    },
                    {
                        "name": "isCCOLatest",
                        "description": "is latest from cisco.com",
                        "required": false,
                        "type": "boolean",
                        "in": "query"
                    },
                    {
                        "name": "createdTime",
                        "description": "time in milliseconds (epoch format)",
                        "required": false,
                        "type": "integer",
                        "in": "query"
                    },
                    {
                        "name": "imageSizeGreaterThan",
                        "description": "size in bytes",
                        "required": false,
                        "type": "integer",
                        "in": "query"
                    },
                    {
                        "name": "imageSizeLesserThan",
                        "description": "size in bytes",
                        "required": false,
                        "type": "integer",
                        "in": "query"
                    },
                    {
                        "name": "sortBy",
                        "description": "sort results by this field",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "sortOrder",
                        "description": "sort order - 'asc' or 'des'. Default is asc",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "limit",
                        "description": "limit",
                        "required": false,
                        "type": "integer",
                        "in": "query"
                    },
                    {
                        "name": "offset",
                        "description": "offset",
                        "required": false,
                        "type": "integer",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/ImageInfoListResponse"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/onboarding/pnp-device/unclaim": {
            "post": {
                "operationId": "un-ClaimDevice",
                "tags": [
                    "PnP"
                ],
                "summary": "Un-Claim Device",
                "description": "Un-Claims one of more devices with specified workflow",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UnclaimRequest"
                        },
                        "in": "body"
                    },
                    {
                        "name": "Content-Type",
                        "description": "Request body content type",
                        "default": "application/json",
                        "required": true,
                        "type": "string",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/UnClaimDeviceResponse"
                        }
                    },
                    "201": {
                        "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
                    },
                    "202": {
                        "description": "The request was accepted for processing, but the processing has not been completed."
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/network-device/module/{id}": {
            "get": {
                "operationId": "getModuleInfoById",
                "tags": [
                    "Devices"
                ],
                "summary": "Get Module Info by Id",
                "description": "Returns Module info by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "id",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/ModuleResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/network-device/{id}/vlan": {
            "get": {
                "operationId": "getDeviceInterfaceVLANs",
                "tags": [
                    "Devices"
                ],
                "summary": "Get Device Interface VLANs",
                "description": "Returns Device Interface VLANs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "deviceUUID",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    },
                    {
                        "name": "interfaceType",
                        "description": "Vlan assocaited with sub-interface",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/VlanListResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/global-credential/snmpv3": {
            "put": {
                "operationId": "updateSNMPv3Credentials",
                "tags": [
                    "Network Discovery"
                ],
                "summary": "Update SNMPv3 credentials",
                "description": "Updates global SNMPv3 credential",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SNMPvCredentialDTO"
                        },
                        "in": "body"
                    },
                    {
                        "name": "Content-Type",
                        "description": "Request body content type",
                        "default": "application/json",
                        "required": true,
                        "type": "string",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/TaskIdResult"
                        }
                    },
                    "201": {
                        "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
                    },
                    "202": {
                        "description": "The request was accepted for processing, but the processing has not been completed."
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            },
            "post": {
                "operationId": "createSNMPv3Credentials",
                "tags": [
                    "Network Discovery"
                ],
                "summary": "Create SNMPv3 credentials",
                "description": "Adds global SNMPv3 credentials",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SNMPvCredentialDTO"
                        },
                        "in": "body"
                    },
                    {
                        "name": "Content-Type",
                        "description": "Request body content type",
                        "default": "application/json",
                        "required": true,
                        "type": "string",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/TaskIdResult"
                        }
                    },
                    "201": {
                        "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
                    },
                    "202": {
                        "description": "The request was accepted for processing, but the processing has not been completed."
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/global-credential/netconf": {
            "post": {
                "operationId": "createNetconfCredentials",
                "tags": [
                    "Network Discovery"
                ],
                "summary": "Create Netconf credentials",
                "description": "Adds global netconf credentials",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetconfCredentialDTO"
                        },
                        "in": "body"
                    },
                    {
                        "name": "Content-Type",
                        "description": "Request body content type",
                        "default": "application/json",
                        "required": true,
                        "type": "string",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/TaskIdResult"
                        }
                    },
                    "201": {
                        "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
                    },
                    "202": {
                        "description": "The request was accepted for processing, but the processing has not been completed."
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            },
            "put": {
                "operationId": "updateNetconfCredentials",
                "tags": [
                    "Network Discovery"
                ],
                "summary": "Update Netconf credentials",
                "description": "Updates global netconf credentials",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetconfCredentialDTO"
                        },
                        "in": "body"
                    },
                    {
                        "name": "Content-Type",
                        "description": "Request body content type",
                        "default": "application/json",
                        "required": true,
                        "type": "string",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/TaskIdResult"
                        }
                    },
                    "201": {
                        "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
                    },
                    "202": {
                        "description": "The request was accepted for processing, but the processing has not been completed."
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/site-health": {
            "get": {
                "operationId": "getSiteHealth",
                "tags": [
                    "Sites"
                ],
                "summary": "Get Site Health",
                "description": "Returns Overall Health information for all sites",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "__runsync",
                        "description": "Enable this parameter to execute the API and return a response synchronously",
                        "default": true,
                        "required": true,
                        "type": "boolean",
                        "in": "header"
                    },
                    {
                        "name": "__timeout",
                        "description": "If __runsync is set to ‘true’, this defines the maximum time before which if the API completes its execution, then a synchronous response is returned. If the time taken for the API to complete the execution, exceeds this time, then an asynchronous response is returned with an execution id, that can be used to get the status and response associated with the API execution",
                        "default": 30,
                        "required": true,
                        "type": "number",
                        "in": "header"
                    },
                    {
                        "name": "__persistbapioutput",
                        "description": "Enable this parameter to ensure that the synchronous response of the API is made available as part of the logs and the execution status",
                        "default": true,
                        "required": true,
                        "type": "boolean",
                        "in": "header"
                    },
                    {
                        "name": "timestamp",
                        "description": "Epoch time(in milliseconds) when the Site Hierarchy data is required",
                        "default": "1542990102",
                        "required": true,
                        "type": "string",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/GetSiteHealthResponse"
                        }
                    },
                    "202": {
                        "description": "The request was accepted for processing, but the processing has not been completed."
                    }
                }
            }
        },
        "/dna/intent/api/v1/network-device/{id}": {
            "delete": {
                "operationId": "deleteDeviceById",
                "tags": [
                    "Devices"
                ],
                "summary": "Delete Device by Id",
                "description": "Deletes the network device for the given Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Device ID",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    },
                    {
                        "name": "isForceDelete",
                        "description": "isForceDelete",
                        "required": false,
                        "type": "boolean",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/TaskIdResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            },
            "get": {
                "operationId": "getDeviceByID",
                "tags": [
                    "Devices"
                ],
                "summary": "Get Device by ID",
                "description": "Returns the network device details for the given device ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Device ID",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/NetworkDeviceResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/network-device/collection-schedule/global": {
            "get": {
                "operationId": "getPollingIntervalForAllDevices",
                "tags": [
                    "Devices"
                ],
                "summary": "Get Polling Interval for all devices",
                "description": "Returns polling interval of all devices",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/CountResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/task/count": {
            "get": {
                "operationId": "getTaskCount",
                "tags": [
                    "Task"
                ],
                "summary": "Get task count",
                "description": "Returns Task count",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "startTime",
                        "description": "This is the epoch start time from which tasks need to be fetched",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "endTime",
                        "description": "This is the epoch end time upto which audit records need to be fetched",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "data",
                        "description": "Fetch tasks that contains this data",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "errorCode",
                        "description": "Fetch tasks that have this error code",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "serviceType",
                        "description": "Fetch tasks with this service type",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "username",
                        "description": "Fetch tasks with this username",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "progress",
                        "description": "Fetch tasks that contains this progress",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "isError",
                        "description": "Fetch tasks ended as success or failure. Valid values: true, false",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "failureReason",
                        "description": "Fetch tasks that contains this failure reason",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "parentId",
                        "description": "Fetch tasks that have this parent Id",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/CountResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/network-device": {
            "get": {
                "operationId": "getDeviceList",
                "tags": [
                    "Devices"
                ],
                "summary": "Get Device list",
                "description": "Returns the count of network devices based on the fitler critieria by management IP address, mac address, hostname and location name. If id param is provided, it will be returning the list of network-devices for the given id's and other request params will be ignored. In case of autocomplete request, returns the list of specified attributes.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "hostname",
                        "description": "hostname",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "managementIpAddress",
                        "description": "managementIpAddress",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "macAddress",
                        "description": "macAddress",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "locationName",
                        "description": "locationName",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "serialNumber",
                        "description": "serialNumber",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "location",
                        "description": "location",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "family",
                        "description": "family",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "description": "type",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "series",
                        "description": "series",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "collectionStatus",
                        "description": "collectionStatus",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "collectionInterval",
                        "description": "collectionInterval",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "notSyncedForMinutes",
                        "description": "notSyncedForMinutes",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "errorCode",
                        "description": "errorCode",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "errorDescription",
                        "description": "errorDescription",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "softwareVersion",
                        "description": "softwareVersion",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "softwareType",
                        "description": "softwareType",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "platformId",
                        "description": "platformId",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "role",
                        "description": "role",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "reachabilityStatus",
                        "description": "reachabilityStatus",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "upTime",
                        "description": "upTime",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "associatedWlcIp",
                        "description": "associatedWlcIp",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "license.name",
                        "description": "licenseName",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "license.type",
                        "description": "licenseType",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "license.status",
                        "description": "licenseStatus",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "module+name",
                        "description": "moduleName",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "module+equpimenttype",
                        "description": "moduleEqupimentType",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "module+servicestate",
                        "description": "moduleServiceState",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "module+vendorequipmenttype",
                        "description": "moduleVendorEquipmentType",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "module+partnumber",
                        "description": "modulePartNumber",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "module+operationstatecode",
                        "description": "moduleOperationStateCode",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "description": "Accepts comma separated id's and return list of network-devices for the given id's. If invalid or not-found id's are provided, null entry will be returned in the list.",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/NetworkDeviceListResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            },
            "post": {
                "operationId": "addDevice",
                "tags": [
                    "Devices"
                ],
                "summary": "Add Device",
                "description": "Adds the device with given credential",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InventoryDeviceInfo"
                        },
                        "in": "body"
                    },
                    {
                        "name": "Content-Type",
                        "description": "Request body content type",
                        "default": "application/json",
                        "required": true,
                        "type": "string",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/TaskIdResult"
                        }
                    },
                    "201": {
                        "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
                    },
                    "202": {
                        "description": "The request was accepted for processing, but the processing has not been completed."
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            },
            "put": {
                "operationId": "syncDevices",
                "tags": [
                    "Devices"
                ],
                "summary": "Sync Devices",
                "description": "Sync the devices provided as input",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InventoryDeviceInfo"
                        },
                        "in": "body"
                    },
                    {
                        "name": "Content-Type",
                        "description": "Request body content type",
                        "default": "application/json",
                        "required": true,
                        "type": "string",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/TaskIdResult"
                        }
                    },
                    "201": {
                        "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
                    },
                    "202": {
                        "description": "The request was accepted for processing, but the processing has not been completed."
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/onboarding/pnp-settings/vacct": {
            "delete": {
                "operationId": "deregisterVirtualAccount",
                "tags": [
                    "PnP"
                ],
                "summary": "Deregister Virtual Account",
                "description": "Deregisters the specified smart account & virtual account info and the associated device information from the PnP System & database. The devices associated with the deregistered virtual account are removed from the PnP database as well. The response payload contains the deregistered smart & virtual account information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "domain",
                        "description": "Smart Account Domain",
                        "required": true,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "name",
                        "description": "Virtual Account Name",
                        "required": true,
                        "type": "string",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/DeregisterVirtualAccountResponse"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/file/namespace": {
            "get": {
                "operationId": "getListOfAvailableNamespaces",
                "tags": [
                    "File"
                ],
                "summary": "Get list of available namespaces",
                "description": "Returns list of available namespaces",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/NameSpaceListResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/interface/network-device/{deviceId}/{startIndex}/{recordsToReturn}": {
            "get": {
                "operationId": "getDeviceInterfacesBySpecifiedRange",
                "tags": [
                    "Devices"
                ],
                "summary": "Get Device Interfaces by specified range",
                "description": "Returns the list of interfaces for the device for the specified range",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "deviceId",
                        "description": "Device ID",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    },
                    {
                        "name": "startIndex",
                        "description": "Start index",
                        "required": true,
                        "type": "integer",
                        "in": "path"
                    },
                    {
                        "name": "recordsToReturn",
                        "description": "Number of records to return",
                        "required": true,
                        "type": "integer",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/DeviceIfListResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/network-device-poller/cli/legit-reads": {
            "get": {
                "operationId": "getAllKeywordsOfCLIsAcceptedByCommandRunner",
                "tags": [
                    "Command Runner"
                ],
                "summary": "Get all keywords of CLIs accepted by command runner",
                "description": "Get valid keywords",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/LegitCliKeyResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/onboarding/pnp-workflow/{id}": {
            "put": {
                "operationId": "updateWorkflow",
                "tags": [
                    "PnP"
                ],
                "summary": "Update Workflow",
                "description": "Updates an existing workflow",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Workflow"
                        },
                        "in": "body"
                    },
                    {
                        "name": "Content-Type",
                        "description": "Request body content type",
                        "default": "application/json",
                        "required": true,
                        "type": "string",
                        "in": "header"
                    },
                    {
                        "name": "id",
                        "description": "id",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/UpdateWorkflowResponse"
                        }
                    },
                    "201": {
                        "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
                    },
                    "202": {
                        "description": "The request was accepted for processing, but the processing has not been completed."
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            },
            "get": {
                "operationId": "getWorkflowById",
                "tags": [
                    "PnP"
                ],
                "summary": "Get Workflow by Id",
                "description": "Returns a workflow specified by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "id",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/GetWorkflowByIdResponse"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            },
            "delete": {
                "operationId": "deleteWorkflowById",
                "tags": [
                    "PnP"
                ],
                "summary": "Delete Workflow By Id",
                "description": "Deletes a workflow specified by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "id",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/DeleteWorkflowByIdResponse"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/onboarding/pnp-device/import": {
            "post": {
                "operationId": "importDevicesInBulk",
                "tags": [
                    "PnP"
                ],
                "summary": "Import Devices in bulk",
                "description": "Add devices to PnP in bulk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Device"
                        },
                        "in": "body"
                    },
                    {
                        "name": "Content-Type",
                        "description": "Request body content type",
                        "default": "application/json",
                        "required": true,
                        "type": "string",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/ImportDevicesInBulkResponse"
                        }
                    },
                    "201": {
                        "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
                    },
                    "202": {
                        "description": "The request was accepted for processing, but the processing has not been completed."
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/discovery/{id}/summary": {
            "get": {
                "operationId": "getNetworkDevicesFromDiscovery",
                "tags": [
                    "Network Discovery"
                ],
                "summary": "Get network devices from Discovery",
                "description": "Returns the network devices from a discovery job based on given filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "id",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    },
                    {
                        "name": "taskId",
                        "description": "taskId",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "sortBy",
                        "description": "sortBy",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "sortOrder",
                        "description": "sortOrder",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "ipAddress",
                        "description": "ipAddress",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pingStatus",
                        "description": "pingStatus",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "snmpStatus",
                        "description": "snmpStatus",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cliStatus",
                        "description": "cliStatus",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "netconfStatus",
                        "description": "netconfStatus",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "httpStatus",
                        "description": "httpStatus",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/CountResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/interface/count": {
            "get": {
                "operationId": "getDeviceInterfaceCount",
                "tags": [
                    "Devices"
                ],
                "summary": "Get Device Interface Count",
                "description": "Returns the count of interfaces for all devices",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/CountResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/network-device/sync": {
            "put": {
                "operationId": "syncNetworkDevices",
                "tags": [
                    "Devices"
                ],
                "summary": "Sync Devices",
                "description": "Synchronizes the devices. If forceSync param is false (default) then the sync would run in normal priority thread. If forceSync param is true then the sync would run in high priority thread if available, else the sync will fail. Result can be seen in the child task of each device",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SyncDevicesRequest"
                        },
                        "in": "body"
                    },
                    {
                        "name": "Content-Type",
                        "description": "Request body content type",
                        "default": "application/json",
                        "required": true,
                        "type": "string",
                        "in": "header"
                    },
                    {
                        "name": "forceSync",
                        "description": "forceSync",
                        "required": false,
                        "type": "boolean",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/TaskIdResult"
                        }
                    },
                    "201": {
                        "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
                    },
                    "202": {
                        "description": "The request was accepted for processing, but the processing has not been completed."
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/site/{siteId}/device": {
            "post": {
                "operationId": "assignDeviceToSite",
                "tags": [
                    "Sites"
                ],
                "summary": "Assign Device To Site",
                "description": "API to assign a list of ENCS devices to a site.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AssignDeviceToSiteRequest"
                        },
                        "in": "body"
                    },
                    {
                        "name": "__runsync",
                        "description": "Enable this parameter to execute the API and return a response synchronously",
                        "default": false,
                        "required": true,
                        "type": "boolean",
                        "in": "header"
                    },
                    {
                        "name": "__persistbapioutput",
                        "description": "Persist bapi sync response",
                        "default": true,
                        "required": true,
                        "type": "boolean",
                        "in": "header"
                    },
                    {
                        "name": "siteId",
                        "description": "Site id to which the device is assigned",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/AssignDeviceToSiteResponse"
                        }
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    }
                }
            }
        },
        "/dna/intent/api/v1/global-credential/snmpv2-read-community": {
            "put": {
                "operationId": "updateSNMPReadCommunity",
                "tags": [
                    "Network Discovery"
                ],
                "summary": "Update SNMP read community",
                "description": "Updates global SNMP read community",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SNMPvReadCommunityDTO"
                        },
                        "in": "body"
                    },
                    {
                        "name": "Content-Type",
                        "description": "Request body content type",
                        "default": "application/json",
                        "required": true,
                        "type": "string",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/TaskIdResult"
                        }
                    },
                    "201": {
                        "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
                    },
                    "202": {
                        "description": "The request was accepted for processing, but the processing has not been completed."
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            },
            "post": {
                "operationId": "createSNMPReadCommunity",
                "tags": [
                    "Network Discovery"
                ],
                "summary": "Create SNMP read community",
                "description": "Adds global SNMP read community",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SNMPvReadCommunityDTO"
                        },
                        "in": "body"
                    },
                    {
                        "name": "Content-Type",
                        "description": "Request body content type",
                        "default": "application/json",
                        "required": true,
                        "type": "string",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/TaskIdResult"
                        }
                    },
                    "201": {
                        "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
                    },
                    "202": {
                        "description": "The request was accepted for processing, but the processing has not been completed."
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/network-device/count": {
            "get": {
                "operationId": "getDeviceCount",
                "tags": [
                    "Devices"
                ],
                "summary": "Get Device Count",
                "description": "Returns the count of network devices based on the filter criteria by management IP address, mac address, hostname and location name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/CountResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/file/namespace/{nameSpace}": {
            "get": {
                "operationId": "getListOfFiles",
                "tags": [
                    "File"
                ],
                "summary": "Get list of files",
                "description": "Returns list of files under a specific namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "nameSpace",
                        "description": "A listing of fileId's",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/FileObjectListResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/discovery/{startIndex}/{recordsToReturn}": {
            "get": {
                "operationId": "getDiscoveriesByRange",
                "tags": [
                    "Network Discovery"
                ],
                "summary": "Get Discoveries by range",
                "description": "Returns the discovery by specified range",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "startIndex",
                        "description": "Start index",
                        "required": true,
                        "type": "integer",
                        "in": "path"
                    },
                    {
                        "name": "recordsToReturn",
                        "description": "Number of records to return",
                        "required": true,
                        "type": "integer",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/DiscoveryNIOListResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/interface/network-device/{deviceId}/interface-name": {
            "get": {
                "operationId": "getInterfaceDetailsByDeviceIdAndInterfaceName",
                "tags": [
                    "Devices"
                ],
                "summary": "Get Interface details by device Id and interface name",
                "description": "Returns interface by specified device Id and interface name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "deviceId",
                        "description": "Device ID",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    },
                    {
                        "name": "name",
                        "description": "Interface name",
                        "required": true,
                        "type": "string",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/DeviceIfResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/image/importation/source/file": {
            "post": {
                "operationId": "importLocalSoftwareImage",
                "tags": [
                    "SWIM"
                ],
                "summary": "Import local software image",
                "description": "Fetches a software image from local file system and uploads to DNA Center. Supported software image files extensions are bin, img, tar, smu, pie, aes, iso, ova, tar_gz and qcow2",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Content-Type",
                        "description": "Request body content type",
                        "default": "application/json",
                        "required": true,
                        "type": "string",
                        "in": "header"
                    },
                    {
                        "name": "isThirdParty",
                        "description": "Third party Image check",
                        "required": false,
                        "type": "boolean",
                        "in": "query"
                    },
                    {
                        "name": "thirdPartyVendor",
                        "description": "Third Party Vendor",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "thirdPartyImageFamily",
                        "description": "Third Party image family",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "thirdPartyApplicationType",
                        "description": "Third Party Application Type",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/TaskIdResult"
                        }
                    },
                    "201": {
                        "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
                    },
                    "202": {
                        "description": "The request was accepted for processing, but the processing has not been completed."
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/discovery/{id}": {
            "delete": {
                "operationId": "deleteDiscoveryById",
                "tags": [
                    "Network Discovery"
                ],
                "summary": "Delete discovery by Id",
                "description": "Stops the discovery for the given ID and removes it",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Discovery ID",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/TaskIdResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            },
            "get": {
                "operationId": "getDiscoveryById",
                "tags": [
                    "Network Discovery"
                ],
                "summary": "Get Discovery by Id",
                "description": "Returns discovery by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Discovery ID",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/DiscoveryNIOResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/interface/network-device/{deviceId}/count": {
            "get": {
                "operationId": "getDeviceInterfaceCountByDeviceId",
                "tags": [
                    "Devices"
                ],
                "summary": "Get Device Interface count",
                "description": "Returns the interface count for the given device",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "deviceId",
                        "description": "Device ID",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/CountResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/onboarding/pnp-settings/sacct": {
            "get": {
                "operationId": "getSmartAccountList",
                "tags": [
                    "PnP"
                ],
                "summary": "Get Smart Account List",
                "description": "Returns the list of Smart Account domains",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/GetSmartAccountListResponse"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/discovery": {
            "post": {
                "operationId": "startDiscovery",
                "tags": [
                    "Network Discovery"
                ],
                "summary": "Start discovery",
                "description": "Initiates discovery with the given parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InventoryRequest"
                        },
                        "in": "body"
                    },
                    {
                        "name": "Content-Type",
                        "description": "Request body content type",
                        "default": "application/json",
                        "required": true,
                        "type": "string",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/TaskIdResult"
                        }
                    },
                    "201": {
                        "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
                    },
                    "202": {
                        "description": "The request was accepted for processing, but the processing has not been completed."
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            },
            "put": {
                "operationId": "updatesAnExistingDiscoveryBySpecifiedId",
                "tags": [
                    "Network Discovery"
                ],
                "summary": "Updates an existing discovery by specified Id",
                "description": "Stops or starts an existing discovery",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DiscoveryNIO"
                        },
                        "in": "body"
                    },
                    {
                        "name": "Content-Type",
                        "description": "Request body content type",
                        "default": "application/json",
                        "required": true,
                        "type": "string",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/TaskIdResult"
                        }
                    },
                    "201": {
                        "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
                    },
                    "202": {
                        "description": "The request was accepted for processing, but the processing has not been completed."
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            },
            "delete": {
                "operationId": "deleteAllDiscovery",
                "tags": [
                    "Network Discovery"
                ],
                "summary": "Delete all discovery",
                "description": "Stops all the discoveries and removes them",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/TaskIdResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/snmp-property": {
            "get": {
                "operationId": "getSNMPProperties",
                "tags": [
                    "Network Discovery"
                ],
                "summary": "Get SNMP properties",
                "description": "Returns SNMP properties",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/SystemPropertyListResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            },
            "post": {
                "operationId": "create/UpdateSNMPProperties",
                "tags": [
                    "Network Discovery"
                ],
                "summary": "Create/Update SNMP properties",
                "description": "Adds SNMP properties",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SystemPropertyNameAndIntValueDTO"
                        },
                        "in": "body"
                    },
                    {
                        "name": "Content-Type",
                        "description": "Request body content type",
                        "default": "application/json",
                        "required": true,
                        "type": "string",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/TaskIdResult"
                        }
                    },
                    "201": {
                        "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
                    },
                    "202": {
                        "description": "The request was accepted for processing, but the processing has not been completed."
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/interface/ospf": {
            "get": {
                "operationId": "getOSPFInterfaces",
                "tags": [
                    "Devices"
                ],
                "summary": "Get OSPF interfaces",
                "description": "Returns the interfaces that has OSPF enabled",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/DeviceIfListResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/global-credential/http-write": {
            "post": {
                "operationId": "createHTTPWriteCredentials",
                "tags": [
                    "Network Discovery"
                ],
                "summary": "Create HTTP write credentials",
                "description": "Adds global HTTP write credentials",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HTTPWriteCredentialDTO"
                        },
                        "in": "body"
                    },
                    {
                        "name": "Content-Type",
                        "description": "Request body content type",
                        "default": "application/json",
                        "required": true,
                        "type": "string",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/TaskIdResult"
                        }
                    },
                    "201": {
                        "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
                    },
                    "202": {
                        "description": "The request was accepted for processing, but the processing has not been completed."
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            },
            "put": {
                "operationId": "updateHTTPWriteCredentials",
                "tags": [
                    "Network Discovery"
                ],
                "summary": "Update HTTP write credentials",
                "description": "Updates global HTTP write credentials",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HTTPWriteCredentialDTO"
                        },
                        "in": "body"
                    },
                    {
                        "name": "Content-Type",
                        "description": "Request body content type",
                        "default": "application/json",
                        "required": true,
                        "type": "string",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/TaskIdResult"
                        }
                    },
                    "201": {
                        "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
                    },
                    "202": {
                        "description": "The request was accepted for processing, but the processing has not been completed."
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/template-programmer/template/deploy": {
            "post": {
                "operationId": "deployTemplate",
                "tags": [
                    "Template Programmer"
                ],
                "summary": "Deploy Template",
                "description": "Deploys a template",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TemplateDeploymentInfo"
                        },
                        "in": "body"
                    },
                    {
                        "name": "Content-Type",
                        "description": "Request body content type",
                        "default": "application/json",
                        "required": true,
                        "type": "string",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/TemplateDeploymentStatusDTO"
                        }
                    },
                    "201": {
                        "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
                    },
                    "202": {
                        "description": "The request was accepted for processing, but the processing has not been completed."
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/onboarding/pnp-workflow": {
            "post": {
                "operationId": "addAWorkflow",
                "tags": [
                    "PnP"
                ],
                "summary": "Add a Workflow",
                "description": "Adds a PnP Workflow along with the relevant tasks in the workflow into the PnP database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Workflow"
                        },
                        "in": "body"
                    },
                    {
                        "name": "Content-Type",
                        "description": "Request body content type",
                        "default": "application/json",
                        "required": true,
                        "type": "string",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/AddAWorkflowResponse"
                        }
                    },
                    "201": {
                        "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
                    },
                    "202": {
                        "description": "The request was accepted for processing, but the processing has not been completed."
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            },
            "get": {
                "operationId": "getWorkflows",
                "tags": [
                    "PnP"
                ],
                "summary": "Get Workflows",
                "description": "Returns the list of workflows based on filter criteria. If a limit is not specified, it will default to return 50 workflows. Pagination and sorting are also supported by this endpoint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "description": "Limits number of results",
                        "required": false,
                        "type": "integer",
                        "in": "query"
                    },
                    {
                        "name": "offset",
                        "description": "Index of first result",
                        "required": false,
                        "type": "integer",
                        "in": "query"
                    },
                    {
                        "name": "sort",
                        "description": "Comma seperated lost of fields to sort on",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "description": "Sort Order Ascending (asc) or Descending (des)",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "type",
                        "description": "Workflow Type",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "description": "Workflow Name",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/GetWorkflowsResponse"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/flow-analysis": {
            "get": {
                "operationId": "retrivesAllPreviousPathtracesSummary",
                "tags": [
                    "Path Trace"
                ],
                "summary": "Retrives all previous Pathtraces summary",
                "description": "Returns a summary of all flow analyses stored. Results can be filtered by specified parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "periodicRefresh",
                        "description": "Is analysis periodically refreshed?",
                        "required": false,
                        "type": "boolean",
                        "in": "query"
                    },
                    {
                        "name": "sourceIP",
                        "description": "Source IP address",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "destIP",
                        "description": "Destination IP adress",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "sourcePort",
                        "description": "Source port",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "destPort",
                        "description": "Destination port",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "gtCreateTime",
                        "description": "Analyses requested after this time",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "ltCreateTime",
                        "description": "Analyses requested before this time",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "protocol",
                        "description": "Protocol",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "status",
                        "description": "Status",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "taskId",
                        "description": "Task ID",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "lastUpdateTime",
                        "description": "Last update time",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "limit",
                        "description": "Number of resources returned",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "offset",
                        "description": "Start index of resources returned (1-based)",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "order",
                        "description": "Order by this field",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "sortBy",
                        "description": "Sort by this field",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/FlowAnalysisListOutput"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "No correspoding flow analysis result for requested Id"
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            },
            "post": {
                "operationId": "initiateANewPathtrace",
                "tags": [
                    "Path Trace"
                ],
                "summary": "Initiate a new Pathtrace",
                "description": "Initiates a new flow analysis with periodic refresh and stat collection options. Returns a request id and a task id to get results and follow progress.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FlowAnalysisRequest"
                        },
                        "in": "body"
                    },
                    {
                        "name": "Content-Type",
                        "description": "Request body content type",
                        "default": "application/json",
                        "required": true,
                        "type": "string",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/FlowAnalysisRequestResultOutput"
                        }
                    },
                    "201": {
                        "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
                    },
                    "202": {
                        "description": "The request was accepted for processing, but the processing has not been completed."
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/onboarding/pnp-settings": {
            "get": {
                "operationId": "getPnPGlobalSettings",
                "tags": [
                    "PnP"
                ],
                "summary": "Get PnP global settings",
                "description": "Returns global PnP settings of the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/GetPnPGlobalSettingsResponse"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            },
            "put": {
                "operationId": "updatePnPGlobalSettings",
                "tags": [
                    "PnP"
                ],
                "summary": "Update PnP global settings",
                "description": "Updates the user's list of global PnP settings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Settings"
                        },
                        "in": "body"
                    },
                    {
                        "name": "Content-Type",
                        "description": "Request body content type",
                        "default": "application/json",
                        "required": true,
                        "type": "string",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/UpdatePnPGlobalSettingsResponse"
                        }
                    },
                    "201": {
                        "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
                    },
                    "202": {
                        "description": "The request was accepted for processing, but the processing has not been completed."
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/global-credential/http-read": {
            "put": {
                "operationId": "updateHTTPReadCredential",
                "tags": [
                    "Network Discovery"
                ],
                "summary": "Update HTTP read credential",
                "description": "Updates global HTTP Read credential",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HTTPReadCredentialDTO"
                        },
                        "in": "body"
                    },
                    {
                        "name": "Content-Type",
                        "description": "Request body content type",
                        "default": "application/json",
                        "required": true,
                        "type": "string",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/TaskIdResult"
                        }
                    },
                    "201": {
                        "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
                    },
                    "202": {
                        "description": "The request was accepted for processing, but the processing has not been completed."
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            },
            "post": {
                "operationId": "createHTTPReadCredentials",
                "tags": [
                    "Network Discovery"
                ],
                "summary": "Create HTTP read credentials",
                "description": "Adds HTTP read credentials",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HTTPReadCredentialDTO"
                        },
                        "in": "body"
                    },
                    {
                        "name": "Content-Type",
                        "description": "Request body content type",
                        "default": "application/json",
                        "required": true,
                        "type": "string",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/TaskIdResult"
                        }
                    },
                    "201": {
                        "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
                    },
                    "202": {
                        "description": "The request was accepted for processing, but the processing has not been completed."
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/onboarding/pnp-workflow/count": {
            "get": {
                "operationId": "getWorkflowCount",
                "tags": [
                    "PnP"
                ],
                "summary": "Get Workflow Count",
                "description": "Returns the workflow count",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "description": "Workflow Name",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/GetWorkflowCountResponse"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/topology/vlan/vlan-names": {
            "get": {
                "operationId": "getVLANDetails",
                "tags": [
                    "Networks"
                ],
                "summary": "Get VLAN details",
                "description": "Returns the list of VLAN names",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/VlanNamesResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/template-programmer/template/{templateId}": {
            "get": {
                "operationId": "getTemplateDetails",
                "tags": [
                    "Template Programmer"
                ],
                "summary": "Get Template Details",
                "description": "Returns details of the specified template",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "templateId",
                        "description": "templateId",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    },
                    {
                        "name": "latestVersion",
                        "description": "latestVersion",
                        "required": false,
                        "type": "boolean",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/TemplateDTO"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            },
            "delete": {
                "operationId": "deleteTemplate",
                "tags": [
                    "Template Programmer"
                ],
                "summary": "Delete Template",
                "description": "Deletes an existing template",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "templateId",
                        "description": "templateId",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/TaskIdResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/network-device/{id}/brief": {
            "get": {
                "operationId": "getDeviceSummary",
                "tags": [
                    "Devices"
                ],
                "summary": "Get Device Summary",
                "description": "Returns brief summary of device info such as hostname, management IP address for the given device Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Device ID",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/NetworkDeviceBriefNIOResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/global-credential/{globalCredentialId}": {
            "put": {
                "operationId": "updateGlobalCredentials",
                "tags": [
                    "Network Discovery"
                ],
                "summary": "Update global credentials",
                "description": "Update global credential for network devices in site(s)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SitesInfoDTO"
                        },
                        "in": "body"
                    },
                    {
                        "name": "Content-Type",
                        "description": "Request body content type",
                        "default": "application/json",
                        "required": true,
                        "type": "string",
                        "in": "header"
                    },
                    {
                        "name": "globalCredentialId",
                        "description": "Global credential Uuid",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/TaskIdResult"
                        }
                    },
                    "201": {
                        "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
                    },
                    "202": {
                        "description": "The request was accepted for processing, but the processing has not been completed."
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            },
            "delete": {
                "operationId": "deleteGlobalCredentialsById",
                "tags": [
                    "Network Discovery"
                ],
                "summary": "Delete global credentials by Id",
                "description": "Deletes global credential for the given ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "globalCredentialId",
                        "description": "ID of global-credential",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/TaskIdResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/network-device/config/count": {
            "get": {
                "operationId": "getDeviceConfigCount",
                "tags": [
                    "Devices"
                ],
                "summary": "Get Device Config Count",
                "description": "Returns the count of device configs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/CountResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/interface/isis": {
            "get": {
                "operationId": "getISISInterfaces",
                "tags": [
                    "Devices"
                ],
                "summary": "Get ISIS interfaces",
                "description": "Returns the interfaces that has ISIS enabled",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/DeviceIfListResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/network-device/module/count": {
            "get": {
                "operationId": "getModuleCount",
                "tags": [
                    "Devices"
                ],
                "summary": "Get Module count",
                "description": "Returns Module Count",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "deviceId",
                        "description": "deviceId",
                        "required": true,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "nameList",
                        "description": "nameList",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "vendorEquipmentTypeList",
                        "description": "vendorEquipmentTypeList",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "partNumberList",
                        "description": "partNumberList",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "operationalStateCodeList",
                        "description": "operationalStateCodeList",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/CountResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/task/{taskId}": {
            "get": {
                "operationId": "getTaskById",
                "tags": [
                    "Task"
                ],
                "summary": "Get task by Id",
                "description": "Returns a task by specified id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "taskId",
                        "description": "UUID of the Task",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/TaskDTOResponse"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "No task corresponding to the id was found"
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/flow-analysis/{flowAnalysisId}": {
            "delete": {
                "operationId": "deletesPathtraceById",
                "tags": [
                    "Path Trace"
                ],
                "summary": "Deletes Pathtrace by Id",
                "description": "Deletes a flow analysis request by its id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "flowAnalysisId",
                        "description": "Flow analysis request id",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/TaskIdResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            },
            "get": {
                "operationId": "retrievesPreviousPathtrace",
                "tags": [
                    "Path Trace"
                ],
                "summary": "Retrieves previous Pathtrace",
                "description": "Returns result of a previously requested flow analysis by its Flow Analysis id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "flowAnalysisId",
                        "description": "Flow analysis request id",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/PathResponseResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "No correspoding flow analysis result for requested Id"
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/network-device/functional-capability/{id}": {
            "get": {
                "operationId": "getFunctionalCapabilityById",
                "tags": [
                    "Devices"
                ],
                "summary": "Get Functional Capability by Id",
                "description": "Returns functional capability with given Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Device ID",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/FunctionalCapabilityResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/discovery/{id}/network-device/count": {
            "get": {
                "operationId": "getDevicesDiscoveredById",
                "tags": [
                    "Network Discovery"
                ],
                "summary": "Get Devices discovered by Id",
                "description": "Returns the count of network devices discovered in the given discovery",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Discovery ID",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    },
                    {
                        "name": "taskId",
                        "description": "taskId",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/CountResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/network-device/{networkDeviceId}/config": {
            "get": {
                "operationId": "getDeviceConfigById",
                "tags": [
                    "Devices"
                ],
                "summary": "Get Device Config by Id",
                "description": "Returns the device config by specified device ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "networkDeviceId",
                        "description": "networkDeviceId",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/SuccessResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/discovery/{id}/job": {
            "get": {
                "operationId": "getListOfDiscoveriesByDiscoveryId",
                "tags": [
                    "Network Discovery"
                ],
                "summary": "Get list of discoveries by discovery Id",
                "description": "Returns the list of discovery jobs for the given id. The results can be optionally filtered based on IP",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Discovery ID",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    },
                    {
                        "name": "offset",
                        "description": "offset",
                        "required": false,
                        "type": "integer",
                        "in": "query"
                    },
                    {
                        "name": "limit",
                        "description": "limit",
                        "required": false,
                        "type": "integer",
                        "in": "query"
                    },
                    {
                        "name": "ipAddress",
                        "description": "ipAddress",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/DiscoveryJobNIOListResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/onboarding/pnp-device/reset": {
            "post": {
                "operationId": "resetDevice",
                "tags": [
                    "PnP"
                ],
                "summary": "Reset Device",
                "description": "Recovers a device from a Workflow Execution Error state",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ResetRequest"
                        },
                        "in": "body"
                    },
                    {
                        "name": "Content-Type",
                        "description": "Request body content type",
                        "default": "application/json",
                        "required": true,
                        "type": "string",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/ResetDeviceResponse"
                        }
                    },
                    "201": {
                        "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
                    },
                    "202": {
                        "description": "The request was accepted for processing, but the processing has not been completed."
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/image/distribution": {
            "post": {
                "operationId": "triggerSoftwareImageDistribution",
                "tags": [
                    "SWIM"
                ],
                "summary": "Trigger software image distribution",
                "description": "Distributes a software image on a given device. Software image must be imported successfully into DNA Center before it can be distributed",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DistributeDTO"
                        },
                        "in": "body"
                    },
                    {
                        "name": "Content-Type",
                        "description": "Request body content type",
                        "default": "application/json",
                        "required": true,
                        "type": "string",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/TaskIdResult"
                        }
                    },
                    "201": {
                        "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
                    },
                    "202": {
                        "description": "The request was accepted for processing, but the processing has not been completed."
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/global-credential/cli": {
            "post": {
                "operationId": "createCLICredentials",
                "tags": [
                    "Network Discovery"
                ],
                "summary": "Create CLI credentials",
                "description": "Adds global CLI credential",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CLICredentialDTO"
                        },
                        "in": "body"
                    },
                    {
                        "name": "Content-Type",
                        "description": "Request body content type",
                        "default": "application/json",
                        "required": true,
                        "type": "string",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/TaskIdResult"
                        }
                    },
                    "201": {
                        "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
                    },
                    "202": {
                        "description": "The request was accepted for processing, but the processing has not been completed."
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            },
            "put": {
                "operationId": "updateCLICredentials",
                "tags": [
                    "Network Discovery"
                ],
                "summary": "Update CLI credentials",
                "description": "Updates global CLI credentials",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CLICredentialDTO"
                        },
                        "in": "body"
                    },
                    {
                        "name": "Content-Type",
                        "description": "Request body content type",
                        "default": "application/json",
                        "required": true,
                        "type": "string",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/TaskIdResult"
                        }
                    },
                    "201": {
                        "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
                    },
                    "202": {
                        "description": "The request was accepted for processing, but the processing has not been completed."
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/interface/{id}": {
            "get": {
                "operationId": "getInterfaceById",
                "tags": [
                    "Devices"
                ],
                "summary": "Get Interface by Id",
                "description": "Returns the interface for the given interface ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Interface ID",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/DeviceIfResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/discovery/{id}/network-device/{startIndex}/{recordsToReturn}": {
            "get": {
                "operationId": "getDiscoveredDevicesByRange",
                "tags": [
                    "Network Discovery"
                ],
                "summary": "Get Discovered devices by range",
                "description": "Returns the network devices discovered for the given discovery and for the given range. The maximum number of records that can be retrieved is 500",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Discovery ID",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    },
                    {
                        "name": "startIndex",
                        "description": "Start index",
                        "required": true,
                        "type": "integer",
                        "in": "path"
                    },
                    {
                        "name": "recordsToReturn",
                        "description": "Number of records to return",
                        "required": true,
                        "type": "integer",
                        "in": "path"
                    },
                    {
                        "name": "taskId",
                        "description": "taskId",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/NetworkDeviceNIOListResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/topology/site-topology": {
            "get": {
                "operationId": "getSiteTopology",
                "tags": [
                    "Networks"
                ],
                "summary": "Get Site Topology",
                "description": "Returns site topology",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/SiteResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/image/importation/source/url": {
            "post": {
                "operationId": "importSoftwareImageViaURL",
                "tags": [
                    "SWIM"
                ],
                "summary": "Import software image via URL",
                "description": "Fetches a software image from remote file system (using URL for HTTP/FTP) and uploads to DNA Center. Supported image files extensions are bin, img, tar, smu, pie, aes, iso, ova, tar_gz and qcow2",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ImageImportFromUrlDTO"
                        },
                        "in": "body"
                    },
                    {
                        "name": "Content-Type",
                        "description": "Request body content type",
                        "default": "application/json",
                        "required": true,
                        "type": "string",
                        "in": "header"
                    },
                    {
                        "name": "scheduleAt",
                        "description": "Epoch Time (The number of milli-seconds since January 1 1970 UTC) at which the distribution should be scheduled (Optional) ",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "scheduleDesc",
                        "description": "Custom Description (Optional)",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "scheduleOrigin",
                        "description": "Originator of this call (Optional)",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/TaskIdResult"
                        }
                    },
                    "201": {
                        "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
                    },
                    "202": {
                        "description": "The request was accepted for processing, but the processing has not been completed."
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/network-device/config": {
            "get": {
                "operationId": "getDeviceConfigForAllDevices",
                "tags": [
                    "Devices"
                ],
                "summary": "Get Device Config for all devices",
                "description": "Returns the config for all devices",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/RawCliInfoNIOListResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/discovery/job": {
            "get": {
                "operationId": "getDiscoveryJobsByIP",
                "tags": [
                    "Network Discovery"
                ],
                "summary": "Get Discovery jobs by IP",
                "description": "Returns the list of discovery jobs for the given IP",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "offset",
                        "description": "offset",
                        "required": false,
                        "type": "integer",
                        "in": "query"
                    },
                    {
                        "name": "limit",
                        "description": "limit",
                        "required": false,
                        "type": "integer",
                        "in": "query"
                    },
                    {
                        "name": "ipAddress",
                        "description": "ipAddress",
                        "required": true,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "name",
                        "description": "name",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/DiscoveryJobNIOListResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/network-device/brief": {
            "put": {
                "operationId": "updateDeviceRole",
                "tags": [
                    "Devices"
                ],
                "summary": "Update Device role",
                "description": "Updates the role of the device as access, core, distribution, border router",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkDeviceBriefNIO"
                        },
                        "in": "body"
                    },
                    {
                        "name": "Content-Type",
                        "description": "Request body content type",
                        "default": "application/json",
                        "required": true,
                        "type": "string",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/TaskIdResult"
                        }
                    },
                    "201": {
                        "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
                    },
                    "202": {
                        "description": "The request was accepted for processing, but the processing has not been completed."
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/network-device/file": {
            "post": {
                "operationId": "exportDeviceList",
                "tags": [
                    "Devices"
                ],
                "summary": "Export Device list",
                "description": "Exports the selected network device to a file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ExportDeviceDTO"
                        },
                        "in": "body"
                    },
                    {
                        "name": "Content-Type",
                        "description": "Request body content type",
                        "default": "application/json",
                        "required": true,
                        "type": "string",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/TaskIdResult"
                        }
                    },
                    "201": {
                        "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
                    },
                    "202": {
                        "description": "The request was accepted for processing, but the processing has not been completed."
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/topology/physical-topology": {
            "get": {
                "operationId": "getPhysicalTopology",
                "tags": [
                    "Networks"
                ],
                "summary": "Get Physical Topology",
                "description": "Returns the raw physical topology by specified criteria of nodeType",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "nodeType",
                        "description": "nodeType",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/TopologyResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/network-device/serial-number/{serialNumber}": {
            "get": {
                "operationId": "getDeviceBySerialNumber",
                "tags": [
                    "Devices"
                ],
                "summary": "Get Device by Serial number",
                "description": "Returns the network device with given serial number",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "serialNumber",
                        "description": "Device serial number",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/NetworkDeviceResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/template-programmer/template/version/{templateId}": {
            "get": {
                "operationId": "getTemplateVersions",
                "tags": [
                    "Template Programmer"
                ],
                "summary": "Get Template Versions",
                "description": "Returns the versions of a specified template",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "templateId",
                        "description": "templateId",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/CollectionTemplateInfo"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/topology/l2/{vlanID}": {
            "get": {
                "operationId": "getTopologyDetails",
                "tags": [
                    "Networks"
                ],
                "summary": "Get topology details",
                "description": "Returns Layer 2 network topology by specified VLAN ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "vlanID",
                        "description": "Vlan Name for e.g Vlan1, Vlan23 etc",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/TopologyResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/network-device/functional-capability": {
            "get": {
                "operationId": "getFunctionalCapabilityForDevices",
                "tags": [
                    "Devices"
                ],
                "summary": "Get Functional Capability for devices",
                "description": "Returns the functional-capability for given devices",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "deviceId",
                        "description": "Accepts comma separated deviceid's and return list of functional-capabilities for the given id's. If invalid or not-found id's are provided, null entry will be returned in the list.",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "functionName",
                        "description": "functionName",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/FunctionalCapabilityListResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/discovery/{startIndex}/{recordsToDelete}": {
            "delete": {
                "operationId": "deleteDiscoveryBySpecifiedRange",
                "tags": [
                    "Network Discovery"
                ],
                "summary": "Delete discovery by specified range",
                "description": "Stops discovery for the given range and removes them",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "startIndex",
                        "description": "Start index",
                        "required": true,
                        "type": "integer",
                        "in": "path"
                    },
                    {
                        "name": "recordsToDelete",
                        "description": "Number of records to delete",
                        "required": true,
                        "type": "integer",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/TaskIdResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/onboarding/pnp-device": {
            "get": {
                "operationId": "getPnpDeviceList",
                "tags": [
                    "PnP"
                ],
                "summary": "Get Device list",
                "description": "Returns list of devices based on filter crieteria. If a limit is not specified, it will default to return 50 devices. Pagination and sorting are also supported by this endpoint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "description": "Limits number of results",
                        "required": false,
                        "type": "integer",
                        "in": "query"
                    },
                    {
                        "name": "offset",
                        "description": "Index of first result",
                        "required": false,
                        "type": "integer",
                        "in": "query"
                    },
                    {
                        "name": "sort",
                        "description": "Comma seperated list of fields to sort on",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "description": "Sort Order Ascending (asc) or Descending (des)",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "serialNumber",
                        "description": "Device Serial Number",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "state",
                        "description": "Device State",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "onbState",
                        "description": "Device Onboarding State",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cmState",
                        "description": "Device Connection Manager State",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "description": "Device Name",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pid",
                        "description": "Device ProductId",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "source",
                        "description": "Device Source",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectId",
                        "description": "Device Project Id",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "workflowId",
                        "description": "Device Workflow Id",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectName",
                        "description": "Device Project Name",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "workflowName",
                        "description": "Device Workflow Name",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "smartAccountId",
                        "description": "Device Smart Account",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "virtualAccountId",
                        "description": "Device Virtual Account",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lastContact",
                        "description": "Device Has Contacted lastContact > 0",
                        "required": false,
                        "type": "boolean",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/Device"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            },
            "post": {
                "operationId": "addDeviceToPnpDatabase",
                "tags": [
                    "PnP"
                ],
                "summary": "Add Device",
                "description": "Adds a device to the PnP database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Device"
                        },
                        "in": "body"
                    },
                    {
                        "name": "Content-Type",
                        "description": "Request body content type",
                        "default": "application/json",
                        "required": true,
                        "type": "string",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/Device"
                        }
                    },
                    "201": {
                        "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
                    },
                    "202": {
                        "description": "The request was accepted for processing, but the processing has not been completed."
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/interface/ip-address/{ipAddress}": {
            "get": {
                "operationId": "getInterfaceByIP",
                "tags": [
                    "Devices"
                ],
                "summary": "Get Interface by IP",
                "description": "Returns list of interfaces by specified IP address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "ipAddress",
                        "description": "IP address of the interface",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/DeviceIfListResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/network-device/tenantinfo/macaddress": {
            "get": {
                "operationId": "registerDeviceForWSA",
                "tags": [
                    "Devices"
                ],
                "summary": "Register device for WSA",
                "description": "Registers a device for WSA notification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "serialNumber",
                        "description": "Serial number of the device",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "macaddress",
                        "description": "Mac addres of the device",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/RegisterNetworkDeviceResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/global-credential/{id}": {
            "get": {
                "operationId": "getCredentialSubTypeByCredentialId",
                "tags": [
                    "Network Discovery"
                ],
                "summary": "Get Credential sub type by credential Id",
                "description": "Returns the credential sub type for the given Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Global Credential ID",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/GlobalCredentialSubTypeResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/network-device-poller/cli/read-request": {
            "post": {
                "operationId": "runRead-onlyCommandsOnDevicesToGetTheirReal-timeConfiguration",
                "tags": [
                    "Command Runner"
                ],
                "summary": "Run read-only commands on devices to get their real-time configuration",
                "description": "Submit request for read-only CLIs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CommandRunnerDTO"
                        },
                        "in": "body"
                    },
                    {
                        "name": "Content-Type",
                        "description": "Request body content type",
                        "default": "application/json",
                        "required": true,
                        "type": "string",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/TaskIdResult"
                        }
                    },
                    "201": {
                        "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
                    },
                    "202": {
                        "description": "The request was accepted for processing, but the processing has not been completed."
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/onboarding/pnp-device/claim": {
            "post": {
                "operationId": "claimDevice",
                "tags": [
                    "PnP"
                ],
                "summary": "Claim Device",
                "description": "Claims one of more devices with specified workflow",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ClaimDeviceRequest"
                        },
                        "in": "body"
                    },
                    {
                        "name": "Content-Type",
                        "description": "Request body content type",
                        "default": "application/json",
                        "required": true,
                        "type": "string",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/ClaimDeviceResponse"
                        }
                    },
                    "201": {
                        "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
                    },
                    "202": {
                        "description": "The request was accepted for processing, but the processing has not been completed."
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/template-programmer/project/{projectId}": {
            "delete": {
                "operationId": "deleteProject",
                "tags": [
                    "Template Programmer"
                ],
                "summary": "Delete Project",
                "description": "Deletes an existing Project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "projectId",
                        "description": "projectId",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/TaskIdResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/template-programmer/template/version": {
            "post": {
                "operationId": "versionTemplate",
                "tags": [
                    "Template Programmer"
                ],
                "summary": "Version Template",
                "description": "Creates Versioning for the current contents of the template",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TemplateVersionRequestDTO"
                        },
                        "in": "body"
                    },
                    {
                        "name": "Content-Type",
                        "description": "Request body content type",
                        "default": "application/json",
                        "required": true,
                        "type": "string",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/TaskIdResult"
                        }
                    },
                    "201": {
                        "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
                    },
                    "202": {
                        "description": "The request was accepted for processing, but the processing has not been completed."
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/task/operation/{operationId}/{offset}/{limit}": {
            "get": {
                "operationId": "getTaskByOperationId",
                "tags": [
                    "Task"
                ],
                "summary": "Get task by OperationId",
                "description": "Returns root tasks associated with an Operationid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "operationId",
                        "description": "operationId",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    },
                    {
                        "name": "offset",
                        "description": "Index, minimum value is 0",
                        "required": true,
                        "type": "integer",
                        "in": "path"
                    },
                    {
                        "name": "limit",
                        "description": "The maximum value of {limit} supported is 500. <br/> Base 1 indexing for {limit}, minimum value is 1",
                        "required": true,
                        "type": "integer",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/TaskDTOListResponse"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "If {limit} value is more than 500"
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/onboarding/pnp-settings/sacct/{domain}/vacct": {
            "get": {
                "operationId": "getVirtualAccountList",
                "tags": [
                    "PnP"
                ],
                "summary": "Get Virtual Account List",
                "description": "Returns list of virtual accounts associated with the specified smart account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "domain",
                        "description": "Smart Account Domain",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/GetVirtualAccountListResponse"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/onboarding/pnp-device/count": {
            "get": {
                "operationId": "getPnpDeviceCount",
                "tags": [
                    "PnP"
                ],
                "summary": "Get Device Count",
                "description": "Returns the device count based on filter criteria. This is useful for pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "serialNumber",
                        "description": "Device Serial Number",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "state",
                        "description": "Device State",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "onbState",
                        "description": "Device Onboarding State",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cmState",
                        "description": "Device Connection Manager State",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "description": "Device Name",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pid",
                        "description": "Device ProductId",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "source",
                        "description": "Device Source",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectId",
                        "description": "Device Project Id",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "workflowId",
                        "description": "Device Workflow Id",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectName",
                        "description": "Device Project Name",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "workflowName",
                        "description": "Device Workflow Name",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "smartAccountId",
                        "description": "Device Smart Account",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "virtualAccountId",
                        "description": "Device Virtual Account",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lastContact",
                        "description": "Device Has Contacted lastContact > 0",
                        "required": false,
                        "type": "boolean",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/GetDeviceCountResponse"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/template-programmer/template/preview": {
            "put": {
                "operationId": "previewTemplate",
                "tags": [
                    "Template Programmer"
                ],
                "summary": "Preview Template",
                "description": "Previews an existing template",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TemplatePreviewRequestDTO"
                        },
                        "in": "body"
                    },
                    {
                        "name": "Content-Type",
                        "description": "Request body content type",
                        "default": "application/json",
                        "required": true,
                        "type": "string",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/TemplatePreviewResponseDTO"
                        }
                    },
                    "201": {
                        "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
                    },
                    "202": {
                        "description": "The request was accepted for processing, but the processing has not been completed."
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/task": {
            "get": {
                "operationId": "getTasks",
                "tags": [
                    "Task"
                ],
                "summary": "Get tasks",
                "description": "Returns task(s) based on filter criteria",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "startTime",
                        "description": "This is the epoch start time from which tasks need to be fetched",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "endTime",
                        "description": "This is the epoch end time upto which audit records need to be fetched",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "data",
                        "description": "Fetch tasks that contains this data",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "errorCode",
                        "description": "Fetch tasks that have this error code",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "serviceType",
                        "description": "Fetch tasks with this service type",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "username",
                        "description": "Fetch tasks with this username",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "progress",
                        "description": "Fetch tasks that contains this progress",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "isError",
                        "description": "Fetch tasks ended as success or failure. Valid values: true, false",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "failureReason",
                        "description": "Fetch tasks that contains this failure reason",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "parentId",
                        "description": "Fetch tasks that have this parent Id",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "offset",
                        "description": "offset",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "limit",
                        "description": "limit",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "sortBy",
                        "description": "Sort results by this field",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "order",
                        "description": "Sort order - asc or dsc",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/TaskDTOListResponse"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/network-device/module": {
            "get": {
                "operationId": "getModules",
                "tags": [
                    "Devices"
                ],
                "summary": "Get Modules",
                "description": "Returns modules by specified device id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "deviceId",
                        "description": "deviceId",
                        "required": true,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "limit",
                        "description": "limit",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "offset",
                        "description": "offset",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "nameList",
                        "description": "nameList",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "vendorEquipmentTypeList",
                        "description": "vendorEquipmentTypeList",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "partNumberList",
                        "description": "partNumberList",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "operationalStateCodeList",
                        "description": "operationalStateCodeList",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/ModuleListResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/network-device/{startIndex}/{recordsToReturn}": {
            "get": {
                "operationId": "getNetworkDeviceByPaginationRange",
                "tags": [
                    "Devices"
                ],
                "summary": "Get Network Device by pagination range",
                "description": "Returns the list of network devices for the given pagination range",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "startIndex",
                        "description": "Start index",
                        "required": true,
                        "type": "integer",
                        "in": "path"
                    },
                    {
                        "name": "recordsToReturn",
                        "description": "Number of records to return",
                        "required": true,
                        "type": "integer",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/NetworkDeviceListResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/network-device/{id}/wireless-info": {
            "get": {
                "operationId": "getWirelessLanControllerDetailsById",
                "tags": [
                    "Devices"
                ],
                "summary": "Get wireless lan controller details by Id",
                "description": "Returns the wireless lan controller info with given device ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Device ID",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/WirelessInfoResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/interface": {
            "get": {
                "operationId": "getAllInterfaces",
                "tags": [
                    "Devices"
                ],
                "summary": "Get all interfaces",
                "description": "Returns all available interfaces. This endpoint can return a maximum of 500 interfaces",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/DeviceIfListResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/discovery/{id}/network-device": {
            "get": {
                "operationId": "getDiscoveredNetworkDevicesByDiscoveryId",
                "tags": [
                    "Network Discovery"
                ],
                "summary": "Get Discovered network devices by discovery Id",
                "description": "Returns the network devices discovered for the given discovery ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "id",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    },
                    {
                        "name": "taskId",
                        "description": "taskId",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/NetworkDeviceNIOListResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/nfv-provision-detail": {
            "post": {
                "operationId": "nFVProvisioningDetail",
                "tags": [
                    "Site Profile"
                ],
                "summary": "NFV Provisioning Detail",
                "description": "Checks the provisioning detail of an ENCS device including log information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NFVProvisioningDetailRequest"
                        },
                        "in": "body"
                    },
                    {
                        "name": "__runsync",
                        "description": "Enable this parameter to execute the API and return a response synchronously",
                        "default": false,
                        "required": true,
                        "type": "boolean",
                        "in": "header"
                    },
                    {
                        "name": "__timeout",
                        "description": "During synchronous execution, this defines the maximum time to wait for a response, before the API execution is terminated",
                        "default": 10,
                        "required": false,
                        "type": "number",
                        "in": "header"
                    },
                    {
                        "name": "__persistbapioutput",
                        "description": "Persist bapi sync response",
                        "default": true,
                        "required": true,
                        "type": "boolean",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/NFVProvisioningDetailResponse"
                        }
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    }
                }
            }
        },
        "/dna/intent/api/v1/global-credential": {
            "get": {
                "operationId": "getGlobalCredentials",
                "tags": [
                    "Network Discovery"
                ],
                "summary": "Get Global credentials",
                "description": "Returns global credential for the given credential sub type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "credentialSubType",
                        "description": "Credential type as CLI / SNMPV2_READ_COMMUNITY / SNMPV2_WRITE_COMMUNITY / SNMPV3 / HTTP_WRITE / HTTP_READ / NETCONF",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "sortBy",
                        "description": "sortBy",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "order",
                        "description": "order",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/GlobalCredentialListResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/template-programmer/project/{projectId}/template": {
            "post": {
                "operationId": "createTemplate",
                "tags": [
                    "Template Programmer"
                ],
                "summary": "Create Template",
                "description": "Creates a new template",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TemplateDTO"
                        },
                        "in": "body"
                    },
                    {
                        "name": "Content-Type",
                        "description": "Request body content type",
                        "default": "application/json",
                        "required": true,
                        "type": "string",
                        "in": "header"
                    },
                    {
                        "name": "projectId",
                        "description": "projectId",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/TaskIdResult"
                        }
                    },
                    "201": {
                        "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
                    },
                    "202": {
                        "description": "The request was accepted for processing, but the processing has not been completed."
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/network-device/autocomplete": {
            "get": {
                "operationId": "retrievesAllNetworkDevices",
                "tags": [
                    "Devices"
                ],
                "summary": "Retrieves all network devices",
                "description": "Gets the list of first 500 network devices sorted lexicographically based on host name. It can be filtered using management IP address, mac address, hostname and location name. If id param is provided, it will be returning the list of network-devices for the given id's and other request params will be ignored. In case of autocomplete request, returns the list of specified attributes.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "vrfName",
                        "description": "vrfName",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "managementIpAddress",
                        "description": "managementIpAddress",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "hostname",
                        "description": "hostname",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "macAddress",
                        "description": "macAddress",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "family",
                        "description": "family",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "collectionStatus",
                        "description": "collectionStatus",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "collectionInterval",
                        "description": "collectionInterval",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "softwareVersion",
                        "description": "softwareVersion",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "softwareType",
                        "description": "softwareType",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "reachabilityStatus",
                        "description": "reachabilityStatus",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "reachabilityFailureReason",
                        "description": "reachabilityFailureReason",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "errorCode",
                        "description": "errorCode",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "platformId",
                        "description": "platformId",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "series",
                        "description": "series",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "type",
                        "description": "type",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "serialNumber",
                        "description": "serialNumber",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "upTime",
                        "description": "upTime",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "role",
                        "description": "role",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "roleSource",
                        "description": "roleSource",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "associatedWlcIp",
                        "description": "associatedWlcIp",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "offset",
                        "description": "offset",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "limit",
                        "description": "limit",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/RetrievesAllNetworkDevicesResponse"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/network-health": {
            "get": {
                "operationId": "getOverallNetworkHealth",
                "tags": [
                    "Networks"
                ],
                "summary": "Get Overall Network Health",
                "description": "Returns Overall Network Health information by Device category (Access, Distribution, Core, Router, Wireless) for any given point of time",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "__runsync",
                        "description": "Enable this parameter to execute the API and return a response synchronously",
                        "default": true,
                        "required": true,
                        "type": "boolean",
                        "in": "header"
                    },
                    {
                        "name": "__timeout",
                        "description": "If __runsync is set to ‘true’, this defines the maximum time before which if the API completes its execution, then a synchronous response is returned.  If the time taken for the API to complete the execution, exceeds this time, then an asynchronous response is returned with an execution id, that can be used to get the status and response associated with the API execution",
                        "default": 30,
                        "required": true,
                        "type": "number",
                        "in": "header"
                    },
                    {
                        "name": "__persistbapioutput",
                        "description": "Enable this parameter to ensure that the synchronous response of the API is made available as part of the logs and the execution status",
                        "default": true,
                        "required": true,
                        "type": "boolean",
                        "in": "header"
                    },
                    {
                        "name": "timestamp",
                        "description": "Epoch time(in milliseconds) when the Network health data is required",
                        "default": "1542990102",
                        "required": true,
                        "type": "string",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/GetOverallNetworkHealthResponse"
                        }
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    }
                }
            }
        },
        "/dna/system/api/v1/site": {
            "post": {
                "operationId": "createSite",
                "tags": [
                    "Sites"
                ],
                "summary": "Create Site",
                "description": "API to create an area/building/floor with a specified hierarchy.  This api looks for the type attribute to create the corresponding site.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateSiteRequest"
                        },
                        "in": "body"
                    },
                    {
                        "name": "__runsync",
                        "description": "Enable this parameter to execute the API and return a response synchronously",
                        "default": false,
                        "required": true,
                        "type": "boolean",
                        "in": "header"
                    },
                    {
                        "name": "__timeout",
                        "description": "During synchronous execution, this defines the maximum time to wait for a response, before the API execution is terminated",
                        "default": 30,
                        "required": false,
                        "type": "number",
                        "in": "header"
                    },
                    {
                        "name": "__persistbapioutput",
                        "description": "Persist bapi sync response",
                        "default": true,
                        "required": true,
                        "type": "boolean",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/CreateSiteResponse"
                        }
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    }
                }
            }
        },
        "/dna/intent/api/v1/client-health": {
            "get": {
                "operationId": "getOverallClientHealth",
                "tags": [
                    "Clients"
                ],
                "summary": "Get Overall Client Health",
                "description": "Returns Overall Client Health information by Client type (Wired and Wireless) for any given point of time",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "__runsync",
                        "description": "Enable this parameter to execute the API and return a response synchronously",
                        "default": true,
                        "required": true,
                        "type": "boolean",
                        "in": "header"
                    },
                    {
                        "name": "__timeout",
                        "description": "If __runsync is set to ‘true’, this defines the maximum time before which if the API completes its execution, then a synchronous response is returned.  If the time taken for the API to complete the execution, exceeds this time, then an asynchronous response is returned with an execution id, that can be used to get the status and response associated with the API execution",
                        "default": 30,
                        "required": true,
                        "type": "number",
                        "in": "header"
                    },
                    {
                        "name": "__persistbapioutput",
                        "description": "Enable this parameter to ensure that the synchronous response of the API is made available as part of the logs and the execution status",
                        "default": true,
                        "required": true,
                        "type": "boolean",
                        "in": "header"
                    },
                    {
                        "name": "timestamp",
                        "description": "Epoch time(in milliseconds) when the Client health data is required",
                        "default": "1542990102",
                        "required": true,
                        "type": "string",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/GetOverallClientHealthResponse"
                        }
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    }
                }
            }
        },
        "/dna/intent/api/v1/network-device/{id}/collection-schedule": {
            "get": {
                "operationId": "getPollingIntervalById",
                "tags": [
                    "Devices"
                ],
                "summary": "Get Polling Interval by Id",
                "description": "Returns polling interval by device id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Device ID",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/CountResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/device-detail": {
            "get": {
                "operationId": "getDeviceDetail",
                "tags": [
                    "Devices"
                ],
                "summary": "Get Device Detail",
                "description": "Returns detailed Network Device information retrieved by Mac Address, Device Name or UUID for any given point of time. ",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "__runsync",
                        "description": "Enable this parameter to execute the API and return a response synchronously",
                        "default": true,
                        "required": true,
                        "type": "boolean",
                        "in": "header"
                    },
                    {
                        "name": "__timeout",
                        "description": "If __runsync is set to ‘true’, this defines the maximum time before which if the API completes its execution, then a synchronous response is returned.  If the time taken for the API to complete the execution, exceeds this time, then an asynchronous response is returned with an execution id, that can be used to get the status and response associated with the API execution",
                        "default": 30,
                        "required": true,
                        "type": "number",
                        "in": "header"
                    },
                    {
                        "name": "__persistbapioutput",
                        "description": "Enable this parameter to ensure that the synchronous response of the API is made available as part of the logs and the execution status",
                        "default": true,
                        "required": true,
                        "type": "boolean",
                        "in": "header"
                    },
                    {
                        "name": "timestamp",
                        "description": "Epoch time(in milliseconds) when the device data is required",
                        "default": "1542990102",
                        "required": true,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "searchBy",
                        "description": "MAC Address or Device Name value or UUID of the network device",
                        "required": true,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "identifier",
                        "description": "One of keywords : macAddress or uuid or nwDeviceName",
                        "required": true,
                        "type": "string",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/GetDeviceDetailResponse"
                        }
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    }
                }
            }
        },
        "/dna/intent/api/v1/network-device/{id}/meraki-organization": {
            "get": {
                "operationId": "getOrganizationListForMeraki",
                "tags": [
                    "Devices"
                ],
                "summary": "Get Organization list for Meraki",
                "description": "Returns list of organizations for meraki dashboard",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "id",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/SuccessResultList"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/file/{fileId}": {
            "get": {
                "operationId": "downloadAFileByFileId",
                "tags": [
                    "File"
                ],
                "summary": "Download a file by fileId",
                "description": "Downloads a file specified by fileId",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "fileId",
                        "description": "File Identification number",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/DownloadAFileByFileIdResponse"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/template-programmer/template/deploy/status/{deploymentId}": {
            "get": {
                "operationId": "getTemplateDeploymentStatus",
                "tags": [
                    "Template Programmer"
                ],
                "summary": "Get Template deployment status",
                "description": "Returns the status of a deployed template.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "deploymentId",
                        "description": "deploymentId",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/TemplateDeploymentStatusDTO"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/onboarding/pnp-device/vacct-sync": {
            "post": {
                "operationId": "syncVirtualAccountDevices",
                "tags": [
                    "PnP"
                ],
                "summary": "Sync Virtual Account Devices",
                "description": "Synchronizes the device info from the given smart account & virtual account with the PnP database. The response payload returns a list of synced devices",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SAVAMapping"
                        },
                        "in": "body"
                    },
                    {
                        "name": "Content-Type",
                        "description": "Request body content type",
                        "default": "application/json",
                        "required": true,
                        "type": "string",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/SyncVirtualAccountDevicesResponse"
                        }
                    },
                    "201": {
                        "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
                    },
                    "202": {
                        "description": "The request was accepted for processing, but the processing has not been completed."
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/system/api/v1/auth/token": {
            "post": {
                "operationId": "authenticationAPI",
                "tags": [
                    "Authentication"
                ],
                "summary": "Authentication API",
                "description": "API to obtain an access token. The token obtained using this API is required to be set as value to the X-Auth-Token HTTP Header for all API calls to Cisco DNA Center.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Content-Type",
                        "description": "Request body content type",
                        "default": "application/json",
                        "required": true,
                        "type": "string",
                        "in": "header"
                    },
                    {
                        "name": "Authorization",
                        "description": "Basic Auth Base64 encoding of <username>:<password>",
                        "required": true,
                        "type": "string",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Token Generation",
                        "schema": {
                            "$ref": "#/definitions/AuthenticationAPIResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid Credentials "
                    }
                }
            }
        },
        "/dna/intent/api/v1/interface/network-device/{deviceId}": {
            "get": {
                "operationId": "getInterfaceInfoById",
                "tags": [
                    "Devices"
                ],
                "summary": "Get Interface info by Id",
                "description": "Returns list of interfaces by specified device",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "deviceId",
                        "description": "Device ID",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/DeviceIfListResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/provision-nfv": {
            "post": {
                "operationId": "provisionNFV",
                "tags": [
                    "Site Profile"
                ],
                "summary": "Provision NFV",
                "description": "Design and Provision single/multi NFV device with given site/area/building/floor information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProvisionNFVRequest"
                        },
                        "in": "body"
                    },
                    {
                        "name": "__runsync",
                        "description": "Enable this parameter to execute the API and return a response synchronously",
                        "default": false,
                        "required": true,
                        "type": "boolean",
                        "in": "header"
                    },
                    {
                        "name": "__timeout",
                        "description": "During synchronous execution, this defines the maximum time to wait for a response, before the API execution is terminated",
                        "default": 10,
                        "required": false,
                        "type": "number",
                        "in": "header"
                    },
                    {
                        "name": "__persistbapioutput",
                        "description": "Persist bapi sync response",
                        "default": true,
                        "required": true,
                        "type": "boolean",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/ProvisionNFVResponse"
                        }
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    }
                }
            }
        },
        "/dna/intent/api/v1/topology/l3/{topologyType}": {
            "get": {
                "operationId": "getL3TopologyDetails",
                "tags": [
                    "Networks"
                ],
                "summary": "Get L3 Topology Details",
                "description": "Returns the Layer 3 network topology by routing protocol",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "topologyType",
                        "description": "Type of topology(OSPF,ISIS,etc)",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/TopologyResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/client-detail": {
            "get": {
                "operationId": "getClientDetail",
                "tags": [
                    "Clients"
                ],
                "summary": "Get Client Detail",
                "description": "Returns detailed Client information retrieved by Mac Address for any given point of time. ",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "__runsync",
                        "description": "Enable this parameter to execute the API and return a response synchronously",
                        "default": true,
                        "required": true,
                        "type": "boolean",
                        "in": "header"
                    },
                    {
                        "name": "__timeout",
                        "description": "If __runsync is set to ‘true’, this defines the maximum time before which if the API completes its execution, then a synchronous response is returned.  If the time taken for the API to complete the execution, exceeds this time, then an asynchronous response is returned with an execution id, that can be used to get the status and response associated with the API execution",
                        "default": 30,
                        "required": true,
                        "type": "number",
                        "in": "header"
                    },
                    {
                        "name": "__persistbapioutput",
                        "description": "Enable this parameter to ensure that the synchronous response of the API is made available as part of the logs and the execution status",
                        "default": true,
                        "required": true,
                        "type": "boolean",
                        "in": "header"
                    },
                    {
                        "name": "timestamp",
                        "description": "Epoch time(in milliseconds) when the Client health data is required",
                        "default": "1542990102",
                        "required": true,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "macAddress",
                        "description": "MAC Address of the client",
                        "required": true,
                        "type": "string",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/GetClientDetailResponse"
                        }
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    }
                }
            }
        },
        "/dna/intent/api/v1/network-device/ip-address/{ipAddress}": {
            "get": {
                "operationId": "getNetworkDeviceByIP",
                "tags": [
                    "Devices"
                ],
                "summary": "Get Network Device by IP",
                "description": "Returns the network device by specified IP address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "ipAddress",
                        "description": "Device IP address",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/NetworkDeviceResult"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/onboarding/pnp-device/history": {
            "get": {
                "operationId": "getDeviceHistory",
                "tags": [
                    "PnP"
                ],
                "summary": "Get Device History",
                "description": "Returns history for a specific device. Serial number is a required parameter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "serialNumber",
                        "description": "Device Serial Number",
                        "required": true,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "sort",
                        "description": "Comma seperated list of fields to sort on",
                        "required": false,
                        "type": "array",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "description": "Sort Order Ascending (asc) or Descending (des)",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/GetDeviceHistoryResponse"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/task/{taskId}/tree": {
            "get": {
                "operationId": "getTaskTree",
                "tags": [
                    "Task"
                ],
                "summary": "Get task tree",
                "description": "Returns a task with its children tasks by based on their id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "taskId",
                        "description": "UUID of the Task",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/TaskDTOListResponse"
                        }
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "No task corresponding to the id was found"
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        },
        "/dna/intent/api/v1/image/activation/device": {
            "post": {
                "operationId": "triggerSoftwareImageActivation",
                "tags": [
                    "SWIM"
                ],
                "summary": "Trigger software image activation",
                "description": "Activates a software image on a given device. Software image must be present in the device flash",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ActivateDTO"
                        },
                        "in": "body"
                    },
                    {
                        "name": "Content-Type",
                        "description": "Request body content type",
                        "default": "application/json",
                        "required": true,
                        "type": "string",
                        "in": "header"
                    },
                    {
                        "name": "Client-Type",
                        "description": "Client-type (Optional)",
                        "required": false,
                        "type": "string",
                        "in": "header"
                    },
                    {
                        "name": "Client-Url",
                        "description": "Client-url (Optional)",
                        "required": false,
                        "type": "string",
                        "in": "header"
                    },
                    {
                        "name": "scheduleValidate",
                        "description": "scheduleValidate, validates data before schedule (Optional)",
                        "required": false,
                        "type": "boolean",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful. The result is contained in the response body.",
                        "schema": {
                            "$ref": "#/definitions/TaskIdResult"
                        }
                    },
                    "201": {
                        "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
                    },
                    "202": {
                        "description": "The request was accepted for processing, but the processing has not been completed."
                    },
                    "204": {
                        "description": "The request was successful, however no content was returned."
                    },
                    "206": {
                        "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
                    },
                    "400": {
                        "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
                    },
                    "401": {
                        "description": "The client's authentication credentials included with the request are missing or invalid."
                    },
                    "403": {
                        "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
                    },
                    "404": {
                        "description": "The client made a request for a resource that does not exist."
                    },
                    "409": {
                        "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
                    },
                    "415": {
                        "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
                    },
                    "500": {
                        "description": "The server could not fulfill the request."
                    },
                    "501": {
                        "description": "The server has not implemented the functionality required to fulfill the request."
                    },
                    "503": {
                        "description": "The server is (temporarily) unavailable."
                    },
                    "504": {
                        "description": "The server did not respond inside time restrictions and timed-out."
                    }
                }
            }
        }
    },
    "definitions": {
        "CountResult": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "integer"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "Device": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "deviceInfo": {
                    "type": "object",
                    "properties": {
                        "source": {
                            "type": "string"
                        },
                        "serialNumber": {
                            "type": "string"
                        },
                        "stack": {
                            "type": "boolean"
                        },
                        "mode": {
                            "type": "string"
                        },
                        "state": {
                            "type": "string"
                        },
                        "location": {
                            "type": "object",
                            "properties": {
                                "siteId": {
                                    "type": "string"
                                },
                                "address": {
                                    "type": "string"
                                },
                                "latitude": {
                                    "type": "string"
                                },
                                "longitude": {
                                    "type": "string"
                                },
                                "altitude": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": {
                            "type": "string"
                        },
                        "onbState": {
                            "type": "string"
                        },
                        "authenticatedMicNumber": {
                            "type": "string"
                        },
                        "authenticatedSudiSerialNo": {
                            "type": "string"
                        },
                        "capabilitiesSupported": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "featuresSupported": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "cmState": {
                            "type": "string"
                        },
                        "firstContact": {
                            "type": "number"
                        },
                        "lastContact": {
                            "type": "number"
                        },
                        "macAddress": {
                            "type": "string"
                        },
                        "pid": {
                            "type": "string"
                        },
                        "deviceSudiSerialNos": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "lastUpdateOn": {
                            "type": "number"
                        },
                        "workflowId": {
                            "type": "string"
                        },
                        "workflowName": {
                            "type": "string"
                        },
                        "projectId": {
                            "type": "string"
                        },
                        "projectName": {
                            "type": "string"
                        },
                        "deviceType": {
                            "type": "string"
                        },
                        "agentType": {
                            "type": "string"
                        },
                        "imageVersion": {
                            "type": "string"
                        },
                        "fileSystemList": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "writeable": {
                                        "type": "boolean"
                                    },
                                    "freespace": {
                                        "type": "number"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "readable": {
                                        "type": "boolean"
                                    },
                                    "size": {
                                        "type": "number"
                                    }
                                }
                            }
                        },
                        "pnpProfileList": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "profileName": {
                                        "type": "string"
                                    },
                                    "discoveryCreated": {
                                        "type": "boolean"
                                    },
                                    "createdBy": {
                                        "type": "string"
                                    },
                                    "primaryEndpoint": {
                                        "type": "object",
                                        "properties": {
                                            "port": {
                                                "type": "number"
                                            },
                                            "protocol": {
                                                "type": "string"
                                            },
                                            "ipv4Address": {
                                                "type": "object",
                                                "properties": {}
                                            },
                                            "ipv6Address": {
                                                "type": "object",
                                                "properties": {}
                                            },
                                            "fqdn": {
                                                "type": "string"
                                            },
                                            "certificate": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "secondaryEndpoint": {
                                        "type": "object",
                                        "properties": {
                                            "port": {
                                                "type": "number"
                                            },
                                            "protocol": {
                                                "type": "string"
                                            },
                                            "ipv4Address": {
                                                "type": "object",
                                                "properties": {}
                                            },
                                            "ipv6Address": {
                                                "type": "object",
                                                "properties": {}
                                            },
                                            "fqdn": {
                                                "type": "string"
                                            },
                                            "certificate": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "imageFile": {
                            "type": "string"
                        },
                        "httpHeaders": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "key": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "neighborLinks": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "localInterfaceName": {
                                        "type": "string"
                                    },
                                    "localShortInterfaceName": {
                                        "type": "string"
                                    },
                                    "localMacAddress": {
                                        "type": "string"
                                    },
                                    "remoteInterfaceName": {
                                        "type": "string"
                                    },
                                    "remoteShortInterfaceName": {
                                        "type": "string"
                                    },
                                    "remoteMacAddress": {
                                        "type": "string"
                                    },
                                    "remoteDeviceName": {
                                        "type": "string"
                                    },
                                    "remotePlatform": {
                                        "type": "string"
                                    },
                                    "remoteVersion": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "lastSyncTime": {
                            "type": "number"
                        },
                        "ipInterfaces": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "status": {
                                        "type": "string"
                                    },
                                    "macAddress": {
                                        "type": "string"
                                    },
                                    "ipv4Address": {
                                        "type": "object",
                                        "properties": {}
                                    },
                                    "ipv6AddressList": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {}
                                        }
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "hostname": {
                            "type": "string"
                        },
                        "authStatus": {
                            "type": "string"
                        },
                        "stackInfo": {
                            "type": "object",
                            "properties": {
                                "supportsStackWorkflows": {
                                    "type": "boolean"
                                },
                                "isFullRing": {
                                    "type": "boolean"
                                },
                                "stackMemberList": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "serialNumber": {
                                                "type": "string"
                                            },
                                            "state": {
                                                "type": "string"
                                            },
                                            "role": {
                                                "type": "string"
                                            },
                                            "macAddress": {
                                                "type": "string"
                                            },
                                            "pid": {
                                                "type": "string"
                                            },
                                            "licenseLevel": {
                                                "type": "string"
                                            },
                                            "licenseType": {
                                                "type": "string"
                                            },
                                            "sudiSerialNumber": {
                                                "type": "string"
                                            },
                                            "hardwareVersion": {
                                                "type": "string"
                                            },
                                            "stackNumber": {
                                                "type": "number"
                                            },
                                            "softwareVersion": {
                                                "type": "string"
                                            },
                                            "priority": {
                                                "type": "number"
                                            }
                                        }
                                    }
                                },
                                "stackRingProtocol": {
                                    "type": "string"
                                },
                                "validLicenseLevels": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "totalMemberCount": {
                                    "type": "number"
                                }
                            }
                        },
                        "reloadRequested": {
                            "type": "boolean"
                        },
                        "addedOn": {
                            "type": "number"
                        },
                        "siteId": {
                            "type": "string"
                        },
                        "aaaCredentials": {
                            "type": "object",
                            "properties": {
                                "password": {
                                    "type": "string"
                                },
                                "username": {
                                    "type": "string"
                                }
                            }
                        },
                        "userMicNumbers": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "userSudiSerialNos": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "addnMacAddrs": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "preWorkflowCliOuputs": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "cli": {
                                        "type": "string"
                                    },
                                    "cliOutput": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "tags": {
                            "type": "object",
                            "properties": {}
                        },
                        "sudiRequired": {
                            "type": "boolean"
                        },
                        "smartAccountId": {
                            "type": "string"
                        },
                        "virtualAccountId": {
                            "type": "string"
                        },
                        "populateInventory": {
                            "type": "boolean"
                        },
                        "siteName": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                },
                "systemResetWorkflow": {
                    "type": "object",
                    "properties": {
                        "_id": {
                            "type": "string"
                        },
                        "state": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string"
                        },
                        "lastupdateOn": {
                            "type": "number"
                        },
                        "imageId": {
                            "type": "string"
                        },
                        "currTaskIdx": {
                            "type": "number"
                        },
                        "addedOn": {
                            "type": "number"
                        },
                        "tasks": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "state": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    },
                                    "currWorkItemIdx": {
                                        "type": "number"
                                    },
                                    "taskSeqNo": {
                                        "type": "number"
                                    },
                                    "endTime": {
                                        "type": "number"
                                    },
                                    "startTime": {
                                        "type": "number"
                                    },
                                    "workItemList": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "state": {
                                                    "type": "string"
                                                },
                                                "command": {
                                                    "type": "string"
                                                },
                                                "outputStr": {
                                                    "type": "string"
                                                },
                                                "endTime": {
                                                    "type": "number"
                                                },
                                                "startTime": {
                                                    "type": "number"
                                                },
                                                "timeTaken": {
                                                    "type": "number"
                                                }
                                            }
                                        }
                                    },
                                    "timeTaken": {
                                        "type": "number"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "addToInventory": {
                            "type": "boolean"
                        },
                        "instanceType": {
                            "type": "string"
                        },
                        "endTime": {
                            "type": "number"
                        },
                        "execTime": {
                            "type": "number"
                        },
                        "startTime": {
                            "type": "number"
                        },
                        "useState": {
                            "type": "string"
                        },
                        "configId": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "version": {
                            "type": "number"
                        },
                        "tenantId": {
                            "type": "string"
                        }
                    }
                },
                "systemWorkflow": {
                    "type": "object",
                    "properties": {
                        "_id": {
                            "type": "string"
                        },
                        "state": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string"
                        },
                        "lastupdateOn": {
                            "type": "number"
                        },
                        "imageId": {
                            "type": "string"
                        },
                        "currTaskIdx": {
                            "type": "number"
                        },
                        "addedOn": {
                            "type": "number"
                        },
                        "tasks": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "state": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    },
                                    "currWorkItemIdx": {
                                        "type": "number"
                                    },
                                    "taskSeqNo": {
                                        "type": "number"
                                    },
                                    "endTime": {
                                        "type": "number"
                                    },
                                    "startTime": {
                                        "type": "number"
                                    },
                                    "workItemList": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "state": {
                                                    "type": "string"
                                                },
                                                "command": {
                                                    "type": "string"
                                                },
                                                "outputStr": {
                                                    "type": "string"
                                                },
                                                "endTime": {
                                                    "type": "number"
                                                },
                                                "startTime": {
                                                    "type": "number"
                                                },
                                                "timeTaken": {
                                                    "type": "number"
                                                }
                                            }
                                        }
                                    },
                                    "timeTaken": {
                                        "type": "number"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "addToInventory": {
                            "type": "boolean"
                        },
                        "instanceType": {
                            "type": "string"
                        },
                        "endTime": {
                            "type": "number"
                        },
                        "execTime": {
                            "type": "number"
                        },
                        "startTime": {
                            "type": "number"
                        },
                        "useState": {
                            "type": "string"
                        },
                        "configId": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "version": {
                            "type": "number"
                        },
                        "tenantId": {
                            "type": "string"
                        }
                    }
                },
                "workflow": {
                    "type": "object",
                    "properties": {
                        "_id": {
                            "type": "string"
                        },
                        "state": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string"
                        },
                        "lastupdateOn": {
                            "type": "number"
                        },
                        "imageId": {
                            "type": "string"
                        },
                        "currTaskIdx": {
                            "type": "number"
                        },
                        "addedOn": {
                            "type": "number"
                        },
                        "tasks": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "state": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    },
                                    "currWorkItemIdx": {
                                        "type": "number"
                                    },
                                    "taskSeqNo": {
                                        "type": "number"
                                    },
                                    "endTime": {
                                        "type": "number"
                                    },
                                    "startTime": {
                                        "type": "number"
                                    },
                                    "workItemList": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "state": {
                                                    "type": "string"
                                                },
                                                "command": {
                                                    "type": "string"
                                                },
                                                "outputStr": {
                                                    "type": "string"
                                                },
                                                "endTime": {
                                                    "type": "number"
                                                },
                                                "startTime": {
                                                    "type": "number"
                                                },
                                                "timeTaken": {
                                                    "type": "number"
                                                }
                                            }
                                        }
                                    },
                                    "timeTaken": {
                                        "type": "number"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "addToInventory": {
                            "type": "boolean"
                        },
                        "instanceType": {
                            "type": "string"
                        },
                        "endTime": {
                            "type": "number"
                        },
                        "execTime": {
                            "type": "number"
                        },
                        "startTime": {
                            "type": "number"
                        },
                        "useState": {
                            "type": "string"
                        },
                        "configId": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "version": {
                            "type": "number"
                        },
                        "tenantId": {
                            "type": "string"
                        }
                    }
                },
                "runSummaryList": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "details": {
                                "type": "string"
                            },
                            "historyTaskInfo": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "workItemList": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "state": {
                                                    "type": "string"
                                                },
                                                "command": {
                                                    "type": "string"
                                                },
                                                "outputStr": {
                                                    "type": "string"
                                                },
                                                "endTime": {
                                                    "type": "number"
                                                },
                                                "startTime": {
                                                    "type": "number"
                                                },
                                                "timeTaken": {
                                                    "type": "number"
                                                }
                                            }
                                        }
                                    },
                                    "timeTaken": {
                                        "type": "number"
                                    },
                                    "addnDetails": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "key": {
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            },
                            "errorFlag": {
                                "type": "boolean"
                            },
                            "timestamp": {
                                "type": "number"
                            }
                        }
                    }
                },
                "workflowParameters": {
                    "type": "object",
                    "properties": {
                        "topOfStackSerialNumber": {
                            "type": "string"
                        },
                        "licenseLevel": {
                            "type": "string"
                        },
                        "licenseType": {
                            "type": "string"
                        },
                        "configList": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "configParameters": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "key": {
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "configId": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "dayZeroConfig": {
                    "type": "object",
                    "properties": {
                        "config": {
                            "type": "string"
                        }
                    }
                },
                "dayZeroConfigPreview": {
                    "type": "object",
                    "properties": {}
                },
                "version": {
                    "type": "number"
                },
                "tenantId": {
                    "type": "string"
                }
            }
        },
        "UpdateDeviceResponse": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "deviceInfo": {
                    "type": "object",
                    "properties": {
                        "source": {
                            "type": "string"
                        },
                        "serialNumber": {
                            "type": "string"
                        },
                        "stack": {
                            "type": "boolean"
                        },
                        "mode": {
                            "type": "string"
                        },
                        "state": {
                            "type": "string"
                        },
                        "location": {
                            "type": "object",
                            "properties": {
                                "siteId": {
                                    "type": "string"
                                },
                                "address": {
                                    "type": "string"
                                },
                                "latitude": {
                                    "type": "string"
                                },
                                "longitude": {
                                    "type": "string"
                                },
                                "altitude": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": {
                            "type": "string"
                        },
                        "onbState": {
                            "type": "string"
                        },
                        "authenticatedMicNumber": {
                            "type": "string"
                        },
                        "authenticatedSudiSerialNo": {
                            "type": "string"
                        },
                        "capabilitiesSupported": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "featuresSupported": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "cmState": {
                            "type": "string"
                        },
                        "firstContact": {
                            "type": "number"
                        },
                        "lastContact": {
                            "type": "number"
                        },
                        "macAddress": {
                            "type": "string"
                        },
                        "pid": {
                            "type": "string"
                        },
                        "deviceSudiSerialNos": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "lastUpdateOn": {
                            "type": "number"
                        },
                        "workflowId": {
                            "type": "string"
                        },
                        "workflowName": {
                            "type": "string"
                        },
                        "projectId": {
                            "type": "string"
                        },
                        "projectName": {
                            "type": "string"
                        },
                        "deviceType": {
                            "type": "string"
                        },
                        "agentType": {
                            "type": "string"
                        },
                        "imageVersion": {
                            "type": "string"
                        },
                        "fileSystemList": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "writeable": {
                                        "type": "boolean"
                                    },
                                    "freespace": {
                                        "type": "number"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "readable": {
                                        "type": "boolean"
                                    },
                                    "size": {
                                        "type": "number"
                                    }
                                }
                            }
                        },
                        "pnpProfileList": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "profileName": {
                                        "type": "string"
                                    },
                                    "discoveryCreated": {
                                        "type": "boolean"
                                    },
                                    "createdBy": {
                                        "type": "string"
                                    },
                                    "primaryEndpoint": {
                                        "type": "object",
                                        "properties": {
                                            "port": {
                                                "type": "number"
                                            },
                                            "protocol": {
                                                "type": "string"
                                            },
                                            "ipv4Address": {
                                                "type": "object",
                                                "properties": {}
                                            },
                                            "ipv6Address": {
                                                "type": "object",
                                                "properties": {}
                                            },
                                            "fqdn": {
                                                "type": "string"
                                            },
                                            "certificate": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "secondaryEndpoint": {
                                        "type": "object",
                                        "properties": {
                                            "port": {
                                                "type": "number"
                                            },
                                            "protocol": {
                                                "type": "string"
                                            },
                                            "ipv4Address": {
                                                "type": "object",
                                                "properties": {}
                                            },
                                            "ipv6Address": {
                                                "type": "object",
                                                "properties": {}
                                            },
                                            "fqdn": {
                                                "type": "string"
                                            },
                                            "certificate": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "imageFile": {
                            "type": "string"
                        },
                        "httpHeaders": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "key": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "neighborLinks": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "localInterfaceName": {
                                        "type": "string"
                                    },
                                    "localShortInterfaceName": {
                                        "type": "string"
                                    },
                                    "localMacAddress": {
                                        "type": "string"
                                    },
                                    "remoteInterfaceName": {
                                        "type": "string"
                                    },
                                    "remoteShortInterfaceName": {
                                        "type": "string"
                                    },
                                    "remoteMacAddress": {
                                        "type": "string"
                                    },
                                    "remoteDeviceName": {
                                        "type": "string"
                                    },
                                    "remotePlatform": {
                                        "type": "string"
                                    },
                                    "remoteVersion": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "lastSyncTime": {
                            "type": "number"
                        },
                        "ipInterfaces": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "status": {
                                        "type": "string"
                                    },
                                    "macAddress": {
                                        "type": "string"
                                    },
                                    "ipv4Address": {
                                        "type": "object",
                                        "properties": {}
                                    },
                                    "ipv6AddressList": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {}
                                        }
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "hostname": {
                            "type": "string"
                        },
                        "authStatus": {
                            "type": "string"
                        },
                        "stackInfo": {
                            "type": "object",
                            "properties": {
                                "supportsStackWorkflows": {
                                    "type": "boolean"
                                },
                                "isFullRing": {
                                    "type": "boolean"
                                },
                                "stackMemberList": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "serialNumber": {
                                                "type": "string"
                                            },
                                            "state": {
                                                "type": "string"
                                            },
                                            "role": {
                                                "type": "string"
                                            },
                                            "macAddress": {
                                                "type": "string"
                                            },
                                            "pid": {
                                                "type": "string"
                                            },
                                            "licenseLevel": {
                                                "type": "string"
                                            },
                                            "licenseType": {
                                                "type": "string"
                                            },
                                            "sudiSerialNumber": {
                                                "type": "string"
                                            },
                                            "hardwareVersion": {
                                                "type": "string"
                                            },
                                            "stackNumber": {
                                                "type": "number"
                                            },
                                            "softwareVersion": {
                                                "type": "string"
                                            },
                                            "priority": {
                                                "type": "number"
                                            }
                                        }
                                    }
                                },
                                "stackRingProtocol": {
                                    "type": "string"
                                },
                                "validLicenseLevels": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "totalMemberCount": {
                                    "type": "number"
                                }
                            }
                        },
                        "reloadRequested": {
                            "type": "boolean"
                        },
                        "addedOn": {
                            "type": "number"
                        },
                        "siteId": {
                            "type": "string"
                        },
                        "aaaCredentials": {
                            "type": "object",
                            "properties": {
                                "password": {
                                    "type": "string"
                                },
                                "username": {
                                    "type": "string"
                                }
                            }
                        },
                        "userMicNumbers": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "userSudiSerialNos": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "addnMacAddrs": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "preWorkflowCliOuputs": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "cli": {
                                        "type": "string"
                                    },
                                    "cliOutput": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "tags": {
                            "type": "object",
                            "properties": {}
                        },
                        "sudiRequired": {
                            "type": "boolean"
                        },
                        "smartAccountId": {
                            "type": "string"
                        },
                        "virtualAccountId": {
                            "type": "string"
                        },
                        "populateInventory": {
                            "type": "boolean"
                        },
                        "siteName": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                },
                "systemResetWorkflow": {
                    "type": "object",
                    "properties": {
                        "_id": {
                            "type": "string"
                        },
                        "state": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string"
                        },
                        "lastupdateOn": {
                            "type": "number"
                        },
                        "imageId": {
                            "type": "string"
                        },
                        "currTaskIdx": {
                            "type": "number"
                        },
                        "addedOn": {
                            "type": "number"
                        },
                        "tasks": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "state": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    },
                                    "currWorkItemIdx": {
                                        "type": "number"
                                    },
                                    "taskSeqNo": {
                                        "type": "number"
                                    },
                                    "endTime": {
                                        "type": "number"
                                    },
                                    "startTime": {
                                        "type": "number"
                                    },
                                    "workItemList": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "state": {
                                                    "type": "string"
                                                },
                                                "command": {
                                                    "type": "string"
                                                },
                                                "outputStr": {
                                                    "type": "string"
                                                },
                                                "endTime": {
                                                    "type": "number"
                                                },
                                                "startTime": {
                                                    "type": "number"
                                                },
                                                "timeTaken": {
                                                    "type": "number"
                                                }
                                            }
                                        }
                                    },
                                    "timeTaken": {
                                        "type": "number"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "addToInventory": {
                            "type": "boolean"
                        },
                        "instanceType": {
                            "type": "string"
                        },
                        "endTime": {
                            "type": "number"
                        },
                        "execTime": {
                            "type": "number"
                        },
                        "startTime": {
                            "type": "number"
                        },
                        "useState": {
                            "type": "string"
                        },
                        "configId": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "version": {
                            "type": "number"
                        },
                        "tenantId": {
                            "type": "string"
                        }
                    }
                },
                "systemWorkflow": {
                    "type": "object",
                    "properties": {
                        "_id": {
                            "type": "string"
                        },
                        "state": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string"
                        },
                        "lastupdateOn": {
                            "type": "number"
                        },
                        "imageId": {
                            "type": "string"
                        },
                        "currTaskIdx": {
                            "type": "number"
                        },
                        "addedOn": {
                            "type": "number"
                        },
                        "tasks": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "state": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    },
                                    "currWorkItemIdx": {
                                        "type": "number"
                                    },
                                    "taskSeqNo": {
                                        "type": "number"
                                    },
                                    "endTime": {
                                        "type": "number"
                                    },
                                    "startTime": {
                                        "type": "number"
                                    },
                                    "workItemList": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "state": {
                                                    "type": "string"
                                                },
                                                "command": {
                                                    "type": "string"
                                                },
                                                "outputStr": {
                                                    "type": "string"
                                                },
                                                "endTime": {
                                                    "type": "number"
                                                },
                                                "startTime": {
                                                    "type": "number"
                                                },
                                                "timeTaken": {
                                                    "type": "number"
                                                }
                                            }
                                        }
                                    },
                                    "timeTaken": {
                                        "type": "number"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "addToInventory": {
                            "type": "boolean"
                        },
                        "instanceType": {
                            "type": "string"
                        },
                        "endTime": {
                            "type": "number"
                        },
                        "execTime": {
                            "type": "number"
                        },
                        "startTime": {
                            "type": "number"
                        },
                        "useState": {
                            "type": "string"
                        },
                        "configId": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "version": {
                            "type": "number"
                        },
                        "tenantId": {
                            "type": "string"
                        }
                    }
                },
                "workflow": {
                    "type": "object",
                    "properties": {
                        "_id": {
                            "type": "string"
                        },
                        "state": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string"
                        },
                        "lastupdateOn": {
                            "type": "number"
                        },
                        "imageId": {
                            "type": "string"
                        },
                        "currTaskIdx": {
                            "type": "number"
                        },
                        "addedOn": {
                            "type": "number"
                        },
                        "tasks": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "state": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    },
                                    "currWorkItemIdx": {
                                        "type": "number"
                                    },
                                    "taskSeqNo": {
                                        "type": "number"
                                    },
                                    "endTime": {
                                        "type": "number"
                                    },
                                    "startTime": {
                                        "type": "number"
                                    },
                                    "workItemList": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "state": {
                                                    "type": "string"
                                                },
                                                "command": {
                                                    "type": "string"
                                                },
                                                "outputStr": {
                                                    "type": "string"
                                                },
                                                "endTime": {
                                                    "type": "number"
                                                },
                                                "startTime": {
                                                    "type": "number"
                                                },
                                                "timeTaken": {
                                                    "type": "number"
                                                }
                                            }
                                        }
                                    },
                                    "timeTaken": {
                                        "type": "number"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "addToInventory": {
                            "type": "boolean"
                        },
                        "instanceType": {
                            "type": "string"
                        },
                        "endTime": {
                            "type": "number"
                        },
                        "execTime": {
                            "type": "number"
                        },
                        "startTime": {
                            "type": "number"
                        },
                        "useState": {
                            "type": "string"
                        },
                        "configId": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "version": {
                            "type": "number"
                        },
                        "tenantId": {
                            "type": "string"
                        }
                    }
                },
                "runSummaryList": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "details": {
                                "type": "string"
                            },
                            "historyTaskInfo": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "workItemList": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "state": {
                                                    "type": "string"
                                                },
                                                "command": {
                                                    "type": "string"
                                                },
                                                "outputStr": {
                                                    "type": "string"
                                                },
                                                "endTime": {
                                                    "type": "number"
                                                },
                                                "startTime": {
                                                    "type": "number"
                                                },
                                                "timeTaken": {
                                                    "type": "number"
                                                }
                                            }
                                        }
                                    },
                                    "timeTaken": {
                                        "type": "number"
                                    },
                                    "addnDetails": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "key": {
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            },
                            "errorFlag": {
                                "type": "boolean"
                            },
                            "timestamp": {
                                "type": "number"
                            }
                        }
                    }
                },
                "workflowParameters": {
                    "type": "object",
                    "properties": {
                        "topOfStackSerialNumber": {
                            "type": "string"
                        },
                        "licenseLevel": {
                            "type": "string"
                        },
                        "licenseType": {
                            "type": "string"
                        },
                        "configList": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "configParameters": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "key": {
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "configId": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "dayZeroConfig": {
                    "type": "object",
                    "properties": {
                        "config": {
                            "type": "string"
                        }
                    }
                },
                "dayZeroConfigPreview": {
                    "type": "object",
                    "properties": {}
                },
                "version": {
                    "type": "number"
                },
                "tenantId": {
                    "type": "string"
                }
            }
        },
        "SNMPvWriteCommunityDTO": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "comments": {
                        "type": "string"
                    },
                    "credentialType": {
                        "type": "string",
                        "enum": [
                            "GLOBAL",
                            "APP"
                        ]
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "instanceTenantId": {
                        "type": "string"
                    },
                    "instanceUuid": {
                        "type": "string"
                    },
                    "writeCommunity": {
                        "type": "string"
                    }
                }
            }
        },
        "TaskIdResult": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "object",
                    "properties": {
                        "taskId": {
                            "type": "object"
                        },
                        "url": {
                            "type": "string"
                        }
                    }
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "CollectionTemplateInfo": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "projectName": {
                        "type": "string"
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "templateId": {
                        "type": "string"
                    },
                    "versionsInfo": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "versionTime": {
                                    "type": "number"
                                }
                            }
                        }
                    },
                    "composite": {
                        "type": "boolean"
                    }
                }
            }
        },
        "ProjectDTO": {
            "type": "object",
            "properties": {
                "createTime": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lastUpdateTime": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "templates": {
                    "type": "object"
                }
            }
        },
        "GetSyncResultForVirtualAccountResponse": {
            "type": "object",
            "properties": {
                "virtualAccountId": {
                    "type": "string"
                },
                "autoSyncPeriod": {
                    "type": "number"
                },
                "syncResultStr": {
                    "type": "string"
                },
                "profile": {
                    "type": "object",
                    "properties": {
                        "proxy": {
                            "type": "boolean"
                        },
                        "makeDefault": {
                            "type": "boolean"
                        },
                        "port": {
                            "type": "number"
                        },
                        "profileId": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "addressIpV4": {
                            "type": "string"
                        },
                        "cert": {
                            "type": "string"
                        },
                        "addressFqdn": {
                            "type": "string"
                        }
                    }
                },
                "ccoUser": {
                    "type": "string"
                },
                "syncResult": {
                    "type": "object",
                    "properties": {
                        "syncList": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "syncType": {
                                        "type": "string"
                                    },
                                    "deviceSnList": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "syncMsg": {
                            "type": "string"
                        }
                    }
                },
                "token": {
                    "type": "string"
                },
                "syncStartTime": {
                    "type": "number"
                },
                "lastSync": {
                    "type": "number"
                },
                "tenantId": {
                    "type": "string"
                },
                "smartAccountId": {
                    "type": "string"
                },
                "expiry": {
                    "type": "number"
                },
                "syncStatus": {
                    "type": "string"
                }
            }
        },
        "SAVAMapping": {
            "type": "object",
            "properties": {
                "autoSyncPeriod": {
                    "type": "integer"
                },
                "ccoUser": {
                    "type": "string"
                },
                "expiry": {
                    "type": "integer"
                },
                "lastSync": {
                    "type": "integer"
                },
                "profile": {
                    "type": "object",
                    "properties": {
                        "addressFqdn": {
                            "type": "string"
                        },
                        "addressIpV4": {
                            "type": "string"
                        },
                        "cert": {
                            "type": "string"
                        },
                        "makeDefault": {
                            "type": "boolean"
                        },
                        "name": {
                            "type": "string"
                        },
                        "port": {
                            "type": "integer"
                        },
                        "profileId": {
                            "type": "string"
                        },
                        "proxy": {
                            "type": "boolean"
                        }
                    }
                },
                "smartAccountId": {
                    "type": "string"
                },
                "syncResult": {
                    "type": "object",
                    "properties": {
                        "syncList": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "deviceSnList": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "syncType": {
                                        "type": "string",
                                        "enum": [
                                            "Add",
                                            "Update",
                                            "Delete",
                                            "MismatchError"
                                        ]
                                    }
                                }
                            }
                        },
                        "syncMsg": {
                            "type": "string"
                        }
                    }
                },
                "syncResultStr": {
                    "type": "string"
                },
                "syncStartTime": {
                    "type": "integer"
                },
                "syncStatus": {
                    "type": "string",
                    "enum": [
                        "NOT_SYNCED",
                        "SYNCING",
                        "SUCCESS",
                        "FAILURE"
                    ]
                },
                "tenantId": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "virtualAccountId": {
                    "type": "string"
                }
            }
        },
        "AddVirtualAccountResponse": {
            "type": "object",
            "properties": {
                "virtualAccountId": {
                    "type": "string"
                },
                "autoSyncPeriod": {
                    "type": "number"
                },
                "syncResultStr": {
                    "type": "string"
                },
                "profile": {
                    "type": "object",
                    "properties": {
                        "proxy": {
                            "type": "boolean"
                        },
                        "makeDefault": {
                            "type": "boolean"
                        },
                        "port": {
                            "type": "number"
                        },
                        "profileId": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "addressIpV4": {
                            "type": "string"
                        },
                        "cert": {
                            "type": "string"
                        },
                        "addressFqdn": {
                            "type": "string"
                        }
                    }
                },
                "ccoUser": {
                    "type": "string"
                },
                "syncResult": {
                    "type": "object",
                    "properties": {
                        "syncList": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "syncType": {
                                        "type": "string"
                                    },
                                    "deviceSnList": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "syncMsg": {
                            "type": "string"
                        }
                    }
                },
                "token": {
                    "type": "string"
                },
                "syncStartTime": {
                    "type": "number"
                },
                "lastSync": {
                    "type": "number"
                },
                "tenantId": {
                    "type": "string"
                },
                "smartAccountId": {
                    "type": "string"
                },
                "expiry": {
                    "type": "number"
                },
                "syncStatus": {
                    "type": "string"
                }
            }
        },
        "CollectionProjectDTO": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "templates": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "composite": {
                                    "type": "boolean"
                                },
                                "id": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "ImageInfoListResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "applicableDevicesForImage": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "mdfId": {
                                            "type": "string"
                                        },
                                        "productId": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "productName": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "applicationType": {
                                "type": "string"
                            },
                            "createdTime": {
                                "type": "string"
                            },
                            "extendedAttributes": {
                                "type": "object",
                                "properties": {}
                            },
                            "family": {
                                "type": "string"
                            },
                            "feature": {
                                "type": "string"
                            },
                            "fileServiceId": {
                                "type": "string"
                            },
                            "fileSize": {
                                "type": "string"
                            },
                            "imageIntegrityStatus": {
                                "type": "string"
                            },
                            "imageName": {
                                "type": "string"
                            },
                            "imageSeries": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "imageSource": {
                                "type": "string"
                            },
                            "imageType": {
                                "type": "string"
                            },
                            "imageUuid": {
                                "type": "string"
                            },
                            "importSourceType": {
                                "type": "string",
                                "enum": [
                                    "DEVICE",
                                    "REMOTEURL",
                                    "CCO",
                                    "FILESYSTEM"
                                ]
                            },
                            "isTaggedGolden": {
                                "type": "boolean"
                            },
                            "md5Checksum": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "profileInfo": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "description": {
                                            "type": "string"
                                        },
                                        "extendedAttributes": {
                                            "type": "object",
                                            "properties": {}
                                        },
                                        "memory": {
                                            "type": "integer"
                                        },
                                        "productType": {
                                            "type": "string"
                                        },
                                        "profileName": {
                                            "type": "string"
                                        },
                                        "shares": {
                                            "type": "integer"
                                        },
                                        "vCpu": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            },
                            "shaCheckSum": {
                                "type": "string"
                            },
                            "vendor": {
                                "type": "string"
                            },
                            "version": {
                                "type": "string"
                            }
                        }
                    }
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "UnclaimRequest": {
            "type": "object",
            "properties": {
                "deviceIdList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "UnClaimDeviceResponse": {
            "type": "object",
            "properties": {
                "jsonArrayResponse": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "jsonResponse": {
                    "type": "object",
                    "properties": {}
                },
                "message": {
                    "type": "string"
                },
                "statusCode": {
                    "type": "number"
                }
            }
        },
        "ModuleResult": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "object",
                    "properties": {
                        "assemblyNumber": {
                            "type": "string"
                        },
                        "assemblyRevision": {
                            "type": "string"
                        },
                        "attributeInfo": {
                            "type": "object",
                            "properties": {}
                        },
                        "containmentEntity": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string"
                        },
                        "entityPhysicalIndex": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        },
                        "isFieldReplaceable": {
                            "type": "string",
                            "enum": [
                                "UNKNOWN",
                                "TRUE",
                                "FALSE",
                                "NOT_APPLICABLE"
                            ]
                        },
                        "isReportingAlarmsAllowed": {
                            "type": "string",
                            "enum": [
                                "UNKNOWN",
                                "TRUE",
                                "FALSE",
                                "NOT_APPLICABLE"
                            ]
                        },
                        "manufacturer": {
                            "type": "string"
                        },
                        "moduleIndex": {
                            "type": "integer"
                        },
                        "name": {
                            "type": "string"
                        },
                        "operationalStateCode": {
                            "type": "string"
                        },
                        "partNumber": {
                            "type": "string"
                        },
                        "serialNumber": {
                            "type": "string"
                        },
                        "vendorEquipmentType": {
                            "type": "string"
                        }
                    }
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "VlanListResult": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "interfaceName": {
                                "type": "string"
                            },
                            "ipAddress": {
                                "type": "string"
                            },
                            "mask": {
                                "type": "integer"
                            },
                            "networkAddress": {
                                "type": "string"
                            },
                            "numberOfIPs": {
                                "type": "integer"
                            },
                            "prefix": {
                                "type": "string"
                            },
                            "vlanNumber": {
                                "type": "integer"
                            },
                            "vlanType": {
                                "type": "string"
                            }
                        }
                    }
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "SNMPvCredentialDTO": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "authPassword": {
                        "type": "string"
                    },
                    "authType": {
                        "type": "string",
                        "enum": [
                            "SHA",
                            "MD5"
                        ]
                    },
                    "comments": {
                        "type": "string"
                    },
                    "credentialType": {
                        "type": "string",
                        "enum": [
                            "GLOBAL",
                            "APP"
                        ]
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "instanceTenantId": {
                        "type": "string"
                    },
                    "instanceUuid": {
                        "type": "string"
                    },
                    "privacyPassword": {
                        "type": "string"
                    },
                    "privacyType": {
                        "type": "string",
                        "enum": [
                            "DES",
                            "AES128"
                        ]
                    },
                    "snmpMode": {
                        "type": "string",
                        "enum": [
                            "AUTHPRIV",
                            "AUTHNOPRIV",
                            "NOAUTHNOPRIV"
                        ]
                    },
                    "username": {
                        "type": "string"
                    }
                }
            }
        },
        "NetconfCredentialDTO": {
            "type": "object",
            "properties": {
                "comments": {
                    "type": "string"
                },
                "credentialType": {
                    "type": "string",
                    "enum": [
                        "GLOBAL",
                        "APP"
                    ]
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "instanceTenantId": {
                    "type": "string"
                },
                "instanceUuid": {
                    "type": "string"
                },
                "netconfPort": {
                    "type": "string"
                }
            }
        },
        "GetSiteHealthResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "siteName": {
                                "type": "string"
                            },
                            "siteId": {
                                "type": "string"
                            },
                            "parentSiteId": {
                                "type": "string"
                            },
                            "parentSiteName": {
                                "type": "string"
                            },
                            "siteType": {
                                "type": "string"
                            },
                            "latitude": {
                                "type": "object",
                                "properties": {}
                            },
                            "longitude": {
                                "type": "object",
                                "properties": {}
                            },
                            "healthyNetworkDevicePercentage": {
                                "type": "string"
                            },
                            "healthyClientsPercentage": {
                                "type": "string"
                            },
                            "clientHealthWired": {
                                "type": "string"
                            },
                            "clientHealthWireless": {
                                "type": "object",
                                "properties": {}
                            },
                            "numberOfClients": {
                                "type": "string"
                            },
                            "clientNumberOfIssues": {
                                "type": "object",
                                "properties": {}
                            },
                            "networkNumberOfIssues": {
                                "type": "object",
                                "properties": {}
                            },
                            "numberOfNetworkDevice": {
                                "type": "string"
                            },
                            "networkHealthAverage": {
                                "type": "object",
                                "properties": {}
                            },
                            "networkHealthAccess": {
                                "type": "string"
                            },
                            "networkHealthCore": {
                                "type": "string"
                            },
                            "networkHealthDistribution": {
                                "type": "string"
                            },
                            "networkHealthRouter": {
                                "type": "string"
                            },
                            "networkHealthWireless": {
                                "type": "object",
                                "properties": {}
                            },
                            "networkHealthOthers": {
                                "type": "object",
                                "properties": {}
                            },
                            "numberOfWiredClients": {
                                "type": "string"
                            },
                            "numberOfWirelessClients": {
                                "type": "object",
                                "properties": {}
                            },
                            "wiredGoodClients": {
                                "type": "string"
                            },
                            "wirelessGoodClients": {
                                "type": "object",
                                "properties": {}
                            },
                            "clientIssueCount": {
                                "type": "object",
                                "properties": {}
                            },
                            "overallGoodDevices": {
                                "type": "string"
                            },
                            "accessGoodCount": {
                                "type": "string"
                            },
                            "accessTotalCount": {
                                "type": "string"
                            },
                            "coreGoodCount": {
                                "type": "string"
                            },
                            "coreTotalCount": {
                                "type": "string"
                            },
                            "distributionGoodCount": {
                                "type": "string"
                            },
                            "distributionTotalCount": {
                                "type": "string"
                            },
                            "routerGoodCount": {
                                "type": "string"
                            },
                            "routerTotalCount": {
                                "type": "string"
                            },
                            "wirelessDeviceGoodCount": {
                                "type": "string"
                            },
                            "wirelessDeviceTotalCount": {
                                "type": "string"
                            },
                            "applicationHealth": {
                                "type": "object",
                                "properties": {}
                            },
                            "applicationGoodCount": {
                                "type": "object",
                                "properties": {}
                            },
                            "applicationTotalCount": {
                                "type": "object",
                                "properties": {}
                            },
                            "applicationBytesTotalCount": {
                                "type": "object",
                                "properties": {}
                            }
                        }
                    }
                }
            }
        },
        "NetworkDeviceListResult": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "apManagerInterfaceIp": {
                                "type": "string"
                            },
                            "associatedWlcIp": {
                                "type": "string"
                            },
                            "bootDateTime": {
                                "type": "string"
                            },
                            "collectionInterval": {
                                "type": "string"
                            },
                            "collectionStatus": {
                                "type": "string"
                            },
                            "errorCode": {
                                "type": "string"
                            },
                            "errorDescription": {
                                "type": "string"
                            },
                            "family": {
                                "type": "string"
                            },
                            "hostname": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "instanceTenantId": {
                                "type": "string"
                            },
                            "instanceUuid": {
                                "type": "string"
                            },
                            "interfaceCount": {
                                "type": "string"
                            },
                            "inventoryStatusDetail": {
                                "type": "string"
                            },
                            "lastUpdateTime": {
                                "type": "string"
                            },
                            "lastUpdated": {
                                "type": "string"
                            },
                            "lineCardCount": {
                                "type": "string"
                            },
                            "lineCardId": {
                                "type": "string"
                            },
                            "location": {
                                "type": "string"
                            },
                            "locationName": {
                                "type": "string"
                            },
                            "macAddress": {
                                "type": "string"
                            },
                            "managementIpAddress": {
                                "type": "string"
                            },
                            "memorySize": {
                                "type": "string"
                            },
                            "platformId": {
                                "type": "string"
                            },
                            "reachabilityFailureReason": {
                                "type": "string"
                            },
                            "reachabilityStatus": {
                                "type": "string"
                            },
                            "role": {
                                "type": "string"
                            },
                            "roleSource": {
                                "type": "string"
                            },
                            "serialNumber": {
                                "type": "string"
                            },
                            "series": {
                                "type": "string"
                            },
                            "snmpContact": {
                                "type": "string"
                            },
                            "snmpLocation": {
                                "type": "string"
                            },
                            "softwareType": {
                                "type": "string"
                            },
                            "softwareVersion": {
                                "type": "string"
                            },
                            "tagCount": {
                                "type": "string"
                            },
                            "tunnelUdpPort": {
                                "type": "string"
                            },
                            "type": {
                                "type": "string"
                            },
                            "upTime": {
                                "type": "string"
                            },
                            "waasDeviceMode": {
                                "type": "string"
                            }
                        }
                    }
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "DeregisterVirtualAccountResponse": {
            "type": "object",
            "properties": {
                "virtualAccountId": {
                    "type": "string"
                },
                "autoSyncPeriod": {
                    "type": "number"
                },
                "syncResultStr": {
                    "type": "string"
                },
                "profile": {
                    "type": "object",
                    "properties": {
                        "proxy": {
                            "type": "boolean"
                        },
                        "makeDefault": {
                            "type": "boolean"
                        },
                        "port": {
                            "type": "number"
                        },
                        "profileId": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "addressIpV4": {
                            "type": "string"
                        },
                        "cert": {
                            "type": "string"
                        },
                        "addressFqdn": {
                            "type": "string"
                        }
                    }
                },
                "ccoUser": {
                    "type": "string"
                },
                "syncResult": {
                    "type": "object",
                    "properties": {
                        "syncList": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "syncType": {
                                        "type": "string"
                                    },
                                    "deviceSnList": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "syncMsg": {
                            "type": "string"
                        }
                    }
                },
                "token": {
                    "type": "string"
                },
                "syncStartTime": {
                    "type": "number"
                },
                "lastSync": {
                    "type": "number"
                },
                "tenantId": {
                    "type": "string"
                },
                "smartAccountId": {
                    "type": "string"
                },
                "expiry": {
                    "type": "number"
                },
                "syncStatus": {
                    "type": "string"
                }
            }
        },
        "NameSpaceListResult": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "DeviceIfListResult": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "adminStatus": {
                                "type": "string"
                            },
                            "className": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "deviceId": {
                                "type": "string"
                            },
                            "duplex": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "ifIndex": {
                                "type": "string"
                            },
                            "instanceTenantId": {
                                "type": "string"
                            },
                            "instanceUuid": {
                                "type": "string"
                            },
                            "interfaceType": {
                                "type": "string"
                            },
                            "ipv4Address": {
                                "type": "string"
                            },
                            "ipv4Mask": {
                                "type": "string"
                            },
                            "isisSupport": {
                                "type": "string"
                            },
                            "lastUpdated": {
                                "type": "string"
                            },
                            "macAddress": {
                                "type": "string"
                            },
                            "mappedPhysicalInterfaceId": {
                                "type": "string"
                            },
                            "mappedPhysicalInterfaceName": {
                                "type": "string"
                            },
                            "mediaType": {
                                "type": "string"
                            },
                            "nativeVlanId": {
                                "type": "string"
                            },
                            "ospfSupport": {
                                "type": "string"
                            },
                            "pid": {
                                "type": "string"
                            },
                            "portMode": {
                                "type": "string"
                            },
                            "portName": {
                                "type": "string"
                            },
                            "portType": {
                                "type": "string"
                            },
                            "serialNo": {
                                "type": "string"
                            },
                            "series": {
                                "type": "string"
                            },
                            "speed": {
                                "type": "string"
                            },
                            "status": {
                                "type": "string"
                            },
                            "vlanId": {
                                "type": "string"
                            },
                            "voiceVlan": {
                                "type": "string"
                            }
                        }
                    }
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "LegitCliKeyResult": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "Workflow": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "addToInventory": {
                    "type": "boolean"
                },
                "addedOn": {
                    "type": "integer"
                },
                "configId": {
                    "type": "string"
                },
                "currTaskIdx": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "endTime": {
                    "type": "integer"
                },
                "execTime": {
                    "type": "integer"
                },
                "imageId": {
                    "type": "string"
                },
                "instanceType": {
                    "type": "string",
                    "enum": [
                        "SystemWorkflow",
                        "UserWorkflow",
                        "SystemResetWorkflow"
                    ]
                },
                "lastupdateOn": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "startTime": {
                    "type": "integer"
                },
                "state": {
                    "type": "string"
                },
                "tasks": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "currWorkItemIdx": {
                                "type": "integer"
                            },
                            "endTime": {
                                "type": "integer"
                            },
                            "name": {
                                "type": "string"
                            },
                            "startTime": {
                                "type": "integer"
                            },
                            "state": {
                                "type": "string"
                            },
                            "taskSeqNo": {
                                "type": "integer"
                            },
                            "timeTaken": {
                                "type": "integer"
                            },
                            "type": {
                                "type": "string"
                            },
                            "workItemList": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "command": {
                                            "type": "string"
                                        },
                                        "endTime": {
                                            "type": "integer"
                                        },
                                        "outputStr": {
                                            "type": "string"
                                        },
                                        "startTime": {
                                            "type": "integer"
                                        },
                                        "state": {
                                            "type": "string"
                                        },
                                        "timeTaken": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tenantId": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "useState": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "UpdateWorkflowResponse": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "lastupdateOn": {
                    "type": "number"
                },
                "imageId": {
                    "type": "string"
                },
                "currTaskIdx": {
                    "type": "number"
                },
                "addedOn": {
                    "type": "number"
                },
                "tasks": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "state": {
                                "type": "string"
                            },
                            "type": {
                                "type": "string"
                            },
                            "currWorkItemIdx": {
                                "type": "number"
                            },
                            "taskSeqNo": {
                                "type": "number"
                            },
                            "endTime": {
                                "type": "number"
                            },
                            "startTime": {
                                "type": "number"
                            },
                            "workItemList": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "state": {
                                            "type": "string"
                                        },
                                        "command": {
                                            "type": "string"
                                        },
                                        "outputStr": {
                                            "type": "string"
                                        },
                                        "endTime": {
                                            "type": "number"
                                        },
                                        "startTime": {
                                            "type": "number"
                                        },
                                        "timeTaken": {
                                            "type": "number"
                                        }
                                    }
                                }
                            },
                            "timeTaken": {
                                "type": "number"
                            },
                            "name": {
                                "type": "string"
                            }
                        }
                    }
                },
                "addToInventory": {
                    "type": "boolean"
                },
                "instanceType": {
                    "type": "string"
                },
                "endTime": {
                    "type": "number"
                },
                "execTime": {
                    "type": "number"
                },
                "startTime": {
                    "type": "number"
                },
                "useState": {
                    "type": "string"
                },
                "configId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "version": {
                    "type": "number"
                },
                "tenantId": {
                    "type": "string"
                }
            }
        },
        "ImportDevicesInBulkResponse": {
            "type": "object",
            "properties": {
                "successList": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "_id": {
                                "type": "string"
                            },
                            "deviceInfo": {
                                "type": "object",
                                "properties": {
                                    "source": {
                                        "type": "string"
                                    },
                                    "serialNumber": {
                                        "type": "string"
                                    },
                                    "stack": {
                                        "type": "boolean"
                                    },
                                    "mode": {
                                        "type": "string"
                                    },
                                    "state": {
                                        "type": "string"
                                    },
                                    "location": {
                                        "type": "object",
                                        "properties": {
                                            "siteId": {
                                                "type": "string"
                                            },
                                            "address": {
                                                "type": "string"
                                            },
                                            "latitude": {
                                                "type": "string"
                                            },
                                            "longitude": {
                                                "type": "string"
                                            },
                                            "altitude": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "onbState": {
                                        "type": "string"
                                    },
                                    "authenticatedMicNumber": {
                                        "type": "string"
                                    },
                                    "authenticatedSudiSerialNo": {
                                        "type": "string"
                                    },
                                    "capabilitiesSupported": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "featuresSupported": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "cmState": {
                                        "type": "string"
                                    },
                                    "firstContact": {
                                        "type": "number"
                                    },
                                    "lastContact": {
                                        "type": "number"
                                    },
                                    "macAddress": {
                                        "type": "string"
                                    },
                                    "pid": {
                                        "type": "string"
                                    },
                                    "deviceSudiSerialNos": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "lastUpdateOn": {
                                        "type": "number"
                                    },
                                    "workflowId": {
                                        "type": "string"
                                    },
                                    "workflowName": {
                                        "type": "string"
                                    },
                                    "projectId": {
                                        "type": "string"
                                    },
                                    "projectName": {
                                        "type": "string"
                                    },
                                    "deviceType": {
                                        "type": "string"
                                    },
                                    "agentType": {
                                        "type": "string"
                                    },
                                    "imageVersion": {
                                        "type": "string"
                                    },
                                    "fileSystemList": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string"
                                                },
                                                "writeable": {
                                                    "type": "boolean"
                                                },
                                                "freespace": {
                                                    "type": "number"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "readable": {
                                                    "type": "boolean"
                                                },
                                                "size": {
                                                    "type": "number"
                                                }
                                            }
                                        }
                                    },
                                    "pnpProfileList": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "profileName": {
                                                    "type": "string"
                                                },
                                                "discoveryCreated": {
                                                    "type": "boolean"
                                                },
                                                "createdBy": {
                                                    "type": "string"
                                                },
                                                "primaryEndpoint": {
                                                    "type": "object",
                                                    "properties": {
                                                        "port": {
                                                            "type": "number"
                                                        },
                                                        "protocol": {
                                                            "type": "string"
                                                        },
                                                        "ipv4Address": {
                                                            "type": "object",
                                                            "properties": {}
                                                        },
                                                        "ipv6Address": {
                                                            "type": "object",
                                                            "properties": {}
                                                        },
                                                        "fqdn": {
                                                            "type": "string"
                                                        },
                                                        "certificate": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "secondaryEndpoint": {
                                                    "type": "object",
                                                    "properties": {
                                                        "port": {
                                                            "type": "number"
                                                        },
                                                        "protocol": {
                                                            "type": "string"
                                                        },
                                                        "ipv4Address": {
                                                            "type": "object",
                                                            "properties": {}
                                                        },
                                                        "ipv6Address": {
                                                            "type": "object",
                                                            "properties": {}
                                                        },
                                                        "fqdn": {
                                                            "type": "string"
                                                        },
                                                        "certificate": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "imageFile": {
                                        "type": "string"
                                    },
                                    "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "key": {
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "neighborLinks": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "localInterfaceName": {
                                                    "type": "string"
                                                },
                                                "localShortInterfaceName": {
                                                    "type": "string"
                                                },
                                                "localMacAddress": {
                                                    "type": "string"
                                                },
                                                "remoteInterfaceName": {
                                                    "type": "string"
                                                },
                                                "remoteShortInterfaceName": {
                                                    "type": "string"
                                                },
                                                "remoteMacAddress": {
                                                    "type": "string"
                                                },
                                                "remoteDeviceName": {
                                                    "type": "string"
                                                },
                                                "remotePlatform": {
                                                    "type": "string"
                                                },
                                                "remoteVersion": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "lastSyncTime": {
                                        "type": "number"
                                    },
                                    "ipInterfaces": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string"
                                                },
                                                "macAddress": {
                                                    "type": "string"
                                                },
                                                "ipv4Address": {
                                                    "type": "object",
                                                    "properties": {}
                                                },
                                                "ipv6AddressList": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {}
                                                    }
                                                },
                                                "name": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "hostname": {
                                        "type": "string"
                                    },
                                    "authStatus": {
                                        "type": "string"
                                    },
                                    "stackInfo": {
                                        "type": "object",
                                        "properties": {
                                            "supportsStackWorkflows": {
                                                "type": "boolean"
                                            },
                                            "isFullRing": {
                                                "type": "boolean"
                                            },
                                            "stackMemberList": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "serialNumber": {
                                                            "type": "string"
                                                        },
                                                        "state": {
                                                            "type": "string"
                                                        },
                                                        "role": {
                                                            "type": "string"
                                                        },
                                                        "macAddress": {
                                                            "type": "string"
                                                        },
                                                        "pid": {
                                                            "type": "string"
                                                        },
                                                        "licenseLevel": {
                                                            "type": "string"
                                                        },
                                                        "licenseType": {
                                                            "type": "string"
                                                        },
                                                        "sudiSerialNumber": {
                                                            "type": "string"
                                                        },
                                                        "hardwareVersion": {
                                                            "type": "string"
                                                        },
                                                        "stackNumber": {
                                                            "type": "number"
                                                        },
                                                        "softwareVersion": {
                                                            "type": "string"
                                                        },
                                                        "priority": {
                                                            "type": "number"
                                                        }
                                                    }
                                                }
                                            },
                                            "stackRingProtocol": {
                                                "type": "string"
                                            },
                                            "validLicenseLevels": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "totalMemberCount": {
                                                "type": "number"
                                            }
                                        }
                                    },
                                    "reloadRequested": {
                                        "type": "boolean"
                                    },
                                    "addedOn": {
                                        "type": "number"
                                    },
                                    "siteId": {
                                        "type": "string"
                                    },
                                    "aaaCredentials": {
                                        "type": "object",
                                        "properties": {
                                            "password": {
                                                "type": "string"
                                            },
                                            "username": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "userMicNumbers": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "userSudiSerialNos": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "addnMacAddrs": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "preWorkflowCliOuputs": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "cli": {
                                                    "type": "string"
                                                },
                                                "cliOutput": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "tags": {
                                        "type": "object",
                                        "properties": {}
                                    },
                                    "sudiRequired": {
                                        "type": "boolean"
                                    },
                                    "smartAccountId": {
                                        "type": "string"
                                    },
                                    "virtualAccountId": {
                                        "type": "string"
                                    },
                                    "populateInventory": {
                                        "type": "boolean"
                                    },
                                    "siteName": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            },
                            "systemResetWorkflow": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "state": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "lastupdateOn": {
                                        "type": "number"
                                    },
                                    "imageId": {
                                        "type": "string"
                                    },
                                    "currTaskIdx": {
                                        "type": "number"
                                    },
                                    "addedOn": {
                                        "type": "number"
                                    },
                                    "tasks": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "state": {
                                                    "type": "string"
                                                },
                                                "type": {
                                                    "type": "string"
                                                },
                                                "currWorkItemIdx": {
                                                    "type": "number"
                                                },
                                                "taskSeqNo": {
                                                    "type": "number"
                                                },
                                                "endTime": {
                                                    "type": "number"
                                                },
                                                "startTime": {
                                                    "type": "number"
                                                },
                                                "workItemList": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "state": {
                                                                "type": "string"
                                                            },
                                                            "command": {
                                                                "type": "string"
                                                            },
                                                            "outputStr": {
                                                                "type": "string"
                                                            },
                                                            "endTime": {
                                                                "type": "number"
                                                            },
                                                            "startTime": {
                                                                "type": "number"
                                                            },
                                                            "timeTaken": {
                                                                "type": "number"
                                                            }
                                                        }
                                                    }
                                                },
                                                "timeTaken": {
                                                    "type": "number"
                                                },
                                                "name": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "addToInventory": {
                                        "type": "boolean"
                                    },
                                    "instanceType": {
                                        "type": "string"
                                    },
                                    "endTime": {
                                        "type": "number"
                                    },
                                    "execTime": {
                                        "type": "number"
                                    },
                                    "startTime": {
                                        "type": "number"
                                    },
                                    "useState": {
                                        "type": "string"
                                    },
                                    "configId": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "version": {
                                        "type": "number"
                                    },
                                    "tenantId": {
                                        "type": "string"
                                    }
                                }
                            },
                            "systemWorkflow": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "state": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "lastupdateOn": {
                                        "type": "number"
                                    },
                                    "imageId": {
                                        "type": "string"
                                    },
                                    "currTaskIdx": {
                                        "type": "number"
                                    },
                                    "addedOn": {
                                        "type": "number"
                                    },
                                    "tasks": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "state": {
                                                    "type": "string"
                                                },
                                                "type": {
                                                    "type": "string"
                                                },
                                                "currWorkItemIdx": {
                                                    "type": "number"
                                                },
                                                "taskSeqNo": {
                                                    "type": "number"
                                                },
                                                "endTime": {
                                                    "type": "number"
                                                },
                                                "startTime": {
                                                    "type": "number"
                                                },
                                                "workItemList": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "state": {
                                                                "type": "string"
                                                            },
                                                            "command": {
                                                                "type": "string"
                                                            },
                                                            "outputStr": {
                                                                "type": "string"
                                                            },
                                                            "endTime": {
                                                                "type": "number"
                                                            },
                                                            "startTime": {
                                                                "type": "number"
                                                            },
                                                            "timeTaken": {
                                                                "type": "number"
                                                            }
                                                        }
                                                    }
                                                },
                                                "timeTaken": {
                                                    "type": "number"
                                                },
                                                "name": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "addToInventory": {
                                        "type": "boolean"
                                    },
                                    "instanceType": {
                                        "type": "string"
                                    },
                                    "endTime": {
                                        "type": "number"
                                    },
                                    "execTime": {
                                        "type": "number"
                                    },
                                    "startTime": {
                                        "type": "number"
                                    },
                                    "useState": {
                                        "type": "string"
                                    },
                                    "configId": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "version": {
                                        "type": "number"
                                    },
                                    "tenantId": {
                                        "type": "string"
                                    }
                                }
                            },
                            "workflow": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "state": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "lastupdateOn": {
                                        "type": "number"
                                    },
                                    "imageId": {
                                        "type": "string"
                                    },
                                    "currTaskIdx": {
                                        "type": "number"
                                    },
                                    "addedOn": {
                                        "type": "number"
                                    },
                                    "tasks": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "state": {
                                                    "type": "string"
                                                },
                                                "type": {
                                                    "type": "string"
                                                },
                                                "currWorkItemIdx": {
                                                    "type": "number"
                                                },
                                                "taskSeqNo": {
                                                    "type": "number"
                                                },
                                                "endTime": {
                                                    "type": "number"
                                                },
                                                "startTime": {
                                                    "type": "number"
                                                },
                                                "workItemList": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "state": {
                                                                "type": "string"
                                                            },
                                                            "command": {
                                                                "type": "string"
                                                            },
                                                            "outputStr": {
                                                                "type": "string"
                                                            },
                                                            "endTime": {
                                                                "type": "number"
                                                            },
                                                            "startTime": {
                                                                "type": "number"
                                                            },
                                                            "timeTaken": {
                                                                "type": "number"
                                                            }
                                                        }
                                                    }
                                                },
                                                "timeTaken": {
                                                    "type": "number"
                                                },
                                                "name": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "addToInventory": {
                                        "type": "boolean"
                                    },
                                    "instanceType": {
                                        "type": "string"
                                    },
                                    "endTime": {
                                        "type": "number"
                                    },
                                    "execTime": {
                                        "type": "number"
                                    },
                                    "startTime": {
                                        "type": "number"
                                    },
                                    "useState": {
                                        "type": "string"
                                    },
                                    "configId": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "version": {
                                        "type": "number"
                                    },
                                    "tenantId": {
                                        "type": "string"
                                    }
                                }
                            },
                            "runSummaryList": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "details": {
                                            "type": "string"
                                        },
                                        "historyTaskInfo": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string"
                                                },
                                                "workItemList": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "state": {
                                                                "type": "string"
                                                            },
                                                            "command": {
                                                                "type": "string"
                                                            },
                                                            "outputStr": {
                                                                "type": "string"
                                                            },
                                                            "endTime": {
                                                                "type": "number"
                                                            },
                                                            "startTime": {
                                                                "type": "number"
                                                            },
                                                            "timeTaken": {
                                                                "type": "number"
                                                            }
                                                        }
                                                    }
                                                },
                                                "timeTaken": {
                                                    "type": "number"
                                                },
                                                "addnDetails": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "key": {
                                                                "type": "string"
                                                            },
                                                            "value": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                },
                                                "name": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "errorFlag": {
                                            "type": "boolean"
                                        },
                                        "timestamp": {
                                            "type": "number"
                                        }
                                    }
                                }
                            },
                            "workflowParameters": {
                                "type": "object",
                                "properties": {
                                    "topOfStackSerialNumber": {
                                        "type": "string"
                                    },
                                    "licenseLevel": {
                                        "type": "string"
                                    },
                                    "licenseType": {
                                        "type": "string"
                                    },
                                    "configList": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "configParameters": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "key": {
                                                                "type": "string"
                                                            },
                                                            "value": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                },
                                                "configId": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "dayZeroConfig": {
                                "type": "object",
                                "properties": {
                                    "config": {
                                        "type": "string"
                                    }
                                }
                            },
                            "dayZeroConfigPreview": {
                                "type": "object",
                                "properties": {}
                            },
                            "version": {
                                "type": "number"
                            },
                            "tenantId": {
                                "type": "string"
                            }
                        }
                    }
                },
                "failureList": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "index": {
                                "type": "number"
                            },
                            "serialNum": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "msg": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "InventoryDeviceInfo": {
            "type": "object",
            "properties": {
                "cliTransport": {
                    "type": "string"
                },
                "computeDevice": {
                    "type": "boolean"
                },
                "enablePassword": {
                    "type": "string"
                },
                "extendedDiscoveryInfo": {
                    "type": "string"
                },
                "httpPassword": {
                    "type": "string"
                },
                "httpPort": {
                    "type": "string"
                },
                "httpSecure": {
                    "type": "boolean"
                },
                "httpUserName": {
                    "type": "string"
                },
                "ipAddress": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "merakiOrgId": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "netconfPort": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "serialNumber": {
                    "type": "string"
                },
                "snmpAuthPassphrase": {
                    "type": "string"
                },
                "snmpAuthProtocol": {
                    "type": "string"
                },
                "snmpMode": {
                    "type": "string"
                },
                "snmpPrivPassphrase": {
                    "type": "string"
                },
                "snmpPrivProtocol": {
                    "type": "string"
                },
                "snmpROCommunity": {
                    "type": "string"
                },
                "snmpRWCommunity": {
                    "type": "string"
                },
                "snmpRetry": {
                    "type": "integer"
                },
                "snmpTimeout": {
                    "type": "integer"
                },
                "snmpUserName": {
                    "type": "string"
                },
                "snmpVersion": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "COMPUTE_DEVICE",
                        "MERAKI_DASHBOARD",
                        "NETWORK_DEVICE",
                        "NODATACHANGE"
                    ]
                },
                "updateMgmtIPaddressList": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "existMgmtIpAddress": {
                                "type": "string"
                            },
                            "newMgmtIpAddress": {
                                "type": "string"
                            }
                        }
                    }
                },
                "userName": {
                    "type": "string"
                }
            }
        },
        "SyncDevicesRequest": {
            "type": "array",
            "items": {
                "type": "object"
            }
        },
        "AssignDeviceToSiteRequest": {
            "type": "object",
            "properties": {
                "device": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "ip": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "AssignDeviceToSiteResponse": {
            "type": "object",
            "properties": {
                "executionId": {
                    "type": "string"
                },
                "executionStatusUrl": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "SNMPvReadCommunityDTO": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "comments": {
                        "type": "string"
                    },
                    "credentialType": {
                        "type": "string",
                        "enum": [
                            "GLOBAL",
                            "APP"
                        ]
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "instanceTenantId": {
                        "type": "string"
                    },
                    "instanceUuid": {
                        "type": "string"
                    },
                    "readCommunity": {
                        "type": "string"
                    }
                }
            }
        },
        "FileObjectListResult": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "attributeInfo": {
                                "type": "object",
                                "properties": {}
                            },
                            "downloadPath": {
                                "type": "string"
                            },
                            "encrypted": {
                                "type": "boolean"
                            },
                            "fileFormat": {
                                "type": "string"
                            },
                            "fileSize": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "md5Checksum": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "nameSpace": {
                                "type": "string"
                            },
                            "sftpServerList": {
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            },
                            "sha1Checksum": {
                                "type": "string"
                            },
                            "taskId": {
                                "type": "object"
                            }
                        }
                    }
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "DiscoveryNIOListResult": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "attributeInfo": {
                                "type": "object",
                                "properties": {}
                            },
                            "cdpLevel": {
                                "type": "integer"
                            },
                            "deviceIds": {
                                "type": "string"
                            },
                            "discoveryCondition": {
                                "type": "string"
                            },
                            "discoveryStatus": {
                                "type": "string"
                            },
                            "discoveryType": {
                                "type": "string"
                            },
                            "enablePasswordList": {
                                "type": "string"
                            },
                            "globalCredentialIdList": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "httpReadCredential": {
                                "type": "object",
                                "properties": {
                                    "comments": {
                                        "type": "string"
                                    },
                                    "credentialType": {
                                        "type": "string",
                                        "enum": [
                                            "GLOBAL",
                                            "APP"
                                        ]
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "id": {
                                        "type": "string"
                                    },
                                    "instanceTenantId": {
                                        "type": "string"
                                    },
                                    "instanceUuid": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "port": {
                                        "type": "integer"
                                    },
                                    "secure": {
                                        "type": "boolean"
                                    },
                                    "username": {
                                        "type": "string"
                                    }
                                }
                            },
                            "httpWriteCredential": {
                                "type": "object",
                                "properties": {
                                    "comments": {
                                        "type": "string"
                                    },
                                    "credentialType": {
                                        "type": "string",
                                        "enum": [
                                            "GLOBAL",
                                            "APP"
                                        ]
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "id": {
                                        "type": "string"
                                    },
                                    "instanceTenantId": {
                                        "type": "string"
                                    },
                                    "instanceUuid": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "port": {
                                        "type": "integer"
                                    },
                                    "secure": {
                                        "type": "boolean"
                                    },
                                    "username": {
                                        "type": "string"
                                    }
                                }
                            },
                            "id": {
                                "type": "string"
                            },
                            "ipAddressList": {
                                "type": "string"
                            },
                            "ipFilterList": {
                                "type": "string"
                            },
                            "isAutoCdp": {
                                "type": "boolean"
                            },
                            "lldpLevel": {
                                "type": "integer"
                            },
                            "name": {
                                "type": "string"
                            },
                            "netconfPort": {
                                "type": "string"
                            },
                            "numDevices": {
                                "type": "integer"
                            },
                            "parentDiscoveryId": {
                                "type": "string"
                            },
                            "passwordList": {
                                "type": "string"
                            },
                            "preferredMgmtIPMethod": {
                                "type": "string"
                            },
                            "protocolOrder": {
                                "type": "string"
                            },
                            "retryCount": {
                                "type": "integer"
                            },
                            "snmpAuthPassphrase": {
                                "type": "string"
                            },
                            "snmpAuthProtocol": {
                                "type": "string"
                            },
                            "snmpMode": {
                                "type": "string"
                            },
                            "snmpPrivPassphrase": {
                                "type": "string"
                            },
                            "snmpPrivProtocol": {
                                "type": "string"
                            },
                            "snmpRoCommunity": {
                                "type": "string"
                            },
                            "snmpRoCommunityDesc": {
                                "type": "string"
                            },
                            "snmpRwCommunity": {
                                "type": "string"
                            },
                            "snmpRwCommunityDesc": {
                                "type": "string"
                            },
                            "snmpUserName": {
                                "type": "string"
                            },
                            "timeOut": {
                                "type": "integer"
                            },
                            "updateMgmtIp": {
                                "type": "boolean"
                            },
                            "userNameList": {
                                "type": "string"
                            }
                        }
                    }
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "DeviceIfResult": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "object",
                    "properties": {
                        "adminStatus": {
                            "type": "string"
                        },
                        "className": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string"
                        },
                        "deviceId": {
                            "type": "string"
                        },
                        "duplex": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        },
                        "ifIndex": {
                            "type": "string"
                        },
                        "instanceTenantId": {
                            "type": "string"
                        },
                        "instanceUuid": {
                            "type": "string"
                        },
                        "interfaceType": {
                            "type": "string"
                        },
                        "ipv4Address": {
                            "type": "string"
                        },
                        "ipv4Mask": {
                            "type": "string"
                        },
                        "isisSupport": {
                            "type": "string"
                        },
                        "lastUpdated": {
                            "type": "string"
                        },
                        "macAddress": {
                            "type": "string"
                        },
                        "mappedPhysicalInterfaceId": {
                            "type": "string"
                        },
                        "mappedPhysicalInterfaceName": {
                            "type": "string"
                        },
                        "mediaType": {
                            "type": "string"
                        },
                        "nativeVlanId": {
                            "type": "string"
                        },
                        "ospfSupport": {
                            "type": "string"
                        },
                        "pid": {
                            "type": "string"
                        },
                        "portMode": {
                            "type": "string"
                        },
                        "portName": {
                            "type": "string"
                        },
                        "portType": {
                            "type": "string"
                        },
                        "serialNo": {
                            "type": "string"
                        },
                        "series": {
                            "type": "string"
                        },
                        "speed": {
                            "type": "string"
                        },
                        "status": {
                            "type": "string"
                        },
                        "vlanId": {
                            "type": "string"
                        },
                        "voiceVlan": {
                            "type": "string"
                        }
                    }
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "GetSmartAccountListResponse": {
            "type": "array",
            "items": {
                "type": "string"
            }
        },
        "TemplateDTO": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "string"
                },
                "composite": {
                    "type": "boolean"
                },
                "containingTemplates": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "composite": {
                                "type": "boolean"
                            },
                            "id": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "version": {
                                "type": "string"
                            }
                        }
                    }
                },
                "createTime": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "deviceTypes": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "productFamily": {
                                "type": "string"
                            },
                            "productSeries": {
                                "type": "string"
                            },
                            "productType": {
                                "type": "string"
                            }
                        }
                    }
                },
                "failurePolicy": {
                    "type": "string",
                    "enum": [
                        "ABORT_ON_ERROR",
                        "CONTINUE_ON_ERROR",
                        "ROLLBACK_ON_ERROR",
                        "ROLLBACK_TARGET_ON_ERROR",
                        "ABORT_TARGET_ON_ERROR"
                    ]
                },
                "id": {
                    "type": "string"
                },
                "lastUpdateTime": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "parentTemplateId": {
                    "type": "string"
                },
                "projectId": {
                    "type": "string"
                },
                "projectName": {
                    "type": "string"
                },
                "rollbackTemplateContent": {
                    "type": "string"
                },
                "rollbackTemplateParams": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "binding": {
                                "type": "string"
                            },
                            "dataType": {
                                "type": "string",
                                "enum": [
                                    "STRING",
                                    "INTEGER",
                                    "IPADDRESS",
                                    "MACADDRESS",
                                    "SECTIONDIVIDER"
                                ]
                            },
                            "defaultValue": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "displayName": {
                                "type": "string"
                            },
                            "group": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "instructionText": {
                                "type": "string"
                            },
                            "key": {
                                "type": "string"
                            },
                            "notParam": {
                                "type": "boolean"
                            },
                            "order": {
                                "type": "integer"
                            },
                            "paramArray": {
                                "type": "boolean"
                            },
                            "parameterName": {
                                "type": "string"
                            },
                            "provider": {
                                "type": "string"
                            },
                            "range": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "maxValue": {
                                            "type": "integer"
                                        },
                                        "minValue": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            },
                            "required": {
                                "type": "boolean"
                            },
                            "selection": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "selectionType": {
                                        "type": "string",
                                        "enum": [
                                            "SINGLE_SELECT",
                                            "MULTI_SELECT"
                                        ]
                                    },
                                    "selectionValues": {
                                        "type": "object",
                                        "properties": {}
                                    }
                                }
                            }
                        }
                    }
                },
                "softwareType": {
                    "type": "string"
                },
                "softwareVariant": {
                    "type": "string"
                },
                "softwareVersion": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "templateContent": {
                    "type": "string"
                },
                "templateParams": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "binding": {
                                "type": "string"
                            },
                            "dataType": {
                                "type": "string",
                                "enum": [
                                    "STRING",
                                    "INTEGER",
                                    "IPADDRESS",
                                    "MACADDRESS",
                                    "SECTIONDIVIDER"
                                ]
                            },
                            "defaultValue": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "displayName": {
                                "type": "string"
                            },
                            "group": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "instructionText": {
                                "type": "string"
                            },
                            "key": {
                                "type": "string"
                            },
                            "notParam": {
                                "type": "boolean"
                            },
                            "order": {
                                "type": "integer"
                            },
                            "paramArray": {
                                "type": "boolean"
                            },
                            "parameterName": {
                                "type": "string"
                            },
                            "provider": {
                                "type": "string"
                            },
                            "range": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "maxValue": {
                                            "type": "integer"
                                        },
                                        "minValue": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            },
                            "required": {
                                "type": "boolean"
                            },
                            "selection": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "selectionType": {
                                        "type": "string",
                                        "enum": [
                                            "SINGLE_SELECT",
                                            "MULTI_SELECT"
                                        ]
                                    },
                                    "selectionValues": {
                                        "type": "object",
                                        "properties": {}
                                    }
                                }
                            }
                        }
                    }
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "DiscoveryNIOResult": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "object",
                    "properties": {
                        "attributeInfo": {
                            "type": "object",
                            "properties": {}
                        },
                        "cdpLevel": {
                            "type": "integer"
                        },
                        "deviceIds": {
                            "type": "string"
                        },
                        "discoveryCondition": {
                            "type": "string"
                        },
                        "discoveryStatus": {
                            "type": "string"
                        },
                        "discoveryType": {
                            "type": "string"
                        },
                        "enablePasswordList": {
                            "type": "string"
                        },
                        "globalCredentialIdList": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "httpReadCredential": {
                            "type": "object",
                            "properties": {
                                "comments": {
                                    "type": "string"
                                },
                                "credentialType": {
                                    "type": "string",
                                    "enum": [
                                        "GLOBAL",
                                        "APP"
                                    ]
                                },
                                "description": {
                                    "type": "string"
                                },
                                "id": {
                                    "type": "string"
                                },
                                "instanceTenantId": {
                                    "type": "string"
                                },
                                "instanceUuid": {
                                    "type": "string"
                                },
                                "password": {
                                    "type": "string"
                                },
                                "port": {
                                    "type": "integer"
                                },
                                "secure": {
                                    "type": "boolean"
                                },
                                "username": {
                                    "type": "string"
                                }
                            }
                        },
                        "httpWriteCredential": {
                            "type": "object",
                            "properties": {
                                "comments": {
                                    "type": "string"
                                },
                                "credentialType": {
                                    "type": "string",
                                    "enum": [
                                        "GLOBAL",
                                        "APP"
                                    ]
                                },
                                "description": {
                                    "type": "string"
                                },
                                "id": {
                                    "type": "string"
                                },
                                "instanceTenantId": {
                                    "type": "string"
                                },
                                "instanceUuid": {
                                    "type": "string"
                                },
                                "password": {
                                    "type": "string"
                                },
                                "port": {
                                    "type": "integer"
                                },
                                "secure": {
                                    "type": "boolean"
                                },
                                "username": {
                                    "type": "string"
                                }
                            }
                        },
                        "id": {
                            "type": "string"
                        },
                        "ipAddressList": {
                            "type": "string"
                        },
                        "ipFilterList": {
                            "type": "string"
                        },
                        "isAutoCdp": {
                            "type": "boolean"
                        },
                        "lldpLevel": {
                            "type": "integer"
                        },
                        "name": {
                            "type": "string"
                        },
                        "netconfPort": {
                            "type": "string"
                        },
                        "numDevices": {
                            "type": "integer"
                        },
                        "parentDiscoveryId": {
                            "type": "string"
                        },
                        "passwordList": {
                            "type": "string"
                        },
                        "preferredMgmtIPMethod": {
                            "type": "string"
                        },
                        "protocolOrder": {
                            "type": "string"
                        },
                        "retryCount": {
                            "type": "integer"
                        },
                        "snmpAuthPassphrase": {
                            "type": "string"
                        },
                        "snmpAuthProtocol": {
                            "type": "string"
                        },
                        "snmpMode": {
                            "type": "string"
                        },
                        "snmpPrivPassphrase": {
                            "type": "string"
                        },
                        "snmpPrivProtocol": {
                            "type": "string"
                        },
                        "snmpRoCommunity": {
                            "type": "string"
                        },
                        "snmpRoCommunityDesc": {
                            "type": "string"
                        },
                        "snmpRwCommunity": {
                            "type": "string"
                        },
                        "snmpRwCommunityDesc": {
                            "type": "string"
                        },
                        "snmpUserName": {
                            "type": "string"
                        },
                        "timeOut": {
                            "type": "integer"
                        },
                        "updateMgmtIp": {
                            "type": "boolean"
                        },
                        "userNameList": {
                            "type": "string"
                        }
                    }
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "InventoryRequest": {
            "type": "object",
            "properties": {
                "cdpLevel": {
                    "type": "integer"
                },
                "discoveryType": {
                    "type": "string"
                },
                "enablePasswordList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "globalCredentialIdList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "httpReadCredential": {
                    "type": "object",
                    "properties": {
                        "comments": {
                            "type": "string"
                        },
                        "credentialType": {
                            "type": "string",
                            "enum": [
                                "GLOBAL",
                                "APP"
                            ]
                        },
                        "description": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        },
                        "instanceTenantId": {
                            "type": "string"
                        },
                        "instanceUuid": {
                            "type": "string"
                        },
                        "password": {
                            "type": "string"
                        },
                        "port": {
                            "type": "integer"
                        },
                        "secure": {
                            "type": "boolean"
                        },
                        "username": {
                            "type": "string"
                        }
                    }
                },
                "httpWriteCredential": {
                    "type": "object",
                    "properties": {
                        "comments": {
                            "type": "string"
                        },
                        "credentialType": {
                            "type": "string",
                            "enum": [
                                "GLOBAL",
                                "APP"
                            ]
                        },
                        "description": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        },
                        "instanceTenantId": {
                            "type": "string"
                        },
                        "instanceUuid": {
                            "type": "string"
                        },
                        "password": {
                            "type": "string"
                        },
                        "port": {
                            "type": "integer"
                        },
                        "secure": {
                            "type": "boolean"
                        },
                        "username": {
                            "type": "string"
                        }
                    }
                },
                "ipAddressList": {
                    "type": "string"
                },
                "ipFilterList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "lldpLevel": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "netconfPort": {
                    "type": "string"
                },
                "noAddNewDevice": {
                    "type": "boolean"
                },
                "parentDiscoveryId": {
                    "type": "string"
                },
                "passwordList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "preferredMgmtIPMethod": {
                    "type": "string"
                },
                "protocolOrder": {
                    "type": "string"
                },
                "reDiscovery": {
                    "type": "boolean"
                },
                "retry": {
                    "type": "integer"
                },
                "snmpAuthPassphrase": {
                    "type": "string"
                },
                "snmpAuthProtocol": {
                    "type": "string"
                },
                "snmpMode": {
                    "type": "string"
                },
                "snmpPrivPassphrase": {
                    "type": "string"
                },
                "snmpPrivProtocol": {
                    "type": "string"
                },
                "snmpROCommunity": {
                    "type": "string"
                },
                "snmpROCommunityDesc": {
                    "type": "string"
                },
                "snmpRWCommunity": {
                    "type": "string"
                },
                "snmpRWCommunityDesc": {
                    "type": "string"
                },
                "snmpUserName": {
                    "type": "string"
                },
                "snmpVersion": {
                    "type": "string"
                },
                "timeout": {
                    "type": "integer"
                },
                "updateMgmtIp": {
                    "type": "boolean"
                },
                "userNameList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "SystemPropertyListResult": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "instanceTenantId": {
                                "type": "string"
                            },
                            "instanceUuid": {
                                "type": "string"
                            },
                            "intValue": {
                                "type": "integer"
                            },
                            "systemPropertyName": {
                                "type": "string"
                            }
                        }
                    }
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "GetWorkflowByIdResponse": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "lastupdateOn": {
                    "type": "number"
                },
                "imageId": {
                    "type": "string"
                },
                "currTaskIdx": {
                    "type": "number"
                },
                "addedOn": {
                    "type": "number"
                },
                "tasks": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "state": {
                                "type": "string"
                            },
                            "type": {
                                "type": "string"
                            },
                            "currWorkItemIdx": {
                                "type": "number"
                            },
                            "taskSeqNo": {
                                "type": "number"
                            },
                            "endTime": {
                                "type": "number"
                            },
                            "startTime": {
                                "type": "number"
                            },
                            "workItemList": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "state": {
                                            "type": "string"
                                        },
                                        "command": {
                                            "type": "string"
                                        },
                                        "outputStr": {
                                            "type": "string"
                                        },
                                        "endTime": {
                                            "type": "number"
                                        },
                                        "startTime": {
                                            "type": "number"
                                        },
                                        "timeTaken": {
                                            "type": "number"
                                        }
                                    }
                                }
                            },
                            "timeTaken": {
                                "type": "number"
                            },
                            "name": {
                                "type": "string"
                            }
                        }
                    }
                },
                "addToInventory": {
                    "type": "boolean"
                },
                "instanceType": {
                    "type": "string"
                },
                "endTime": {
                    "type": "number"
                },
                "execTime": {
                    "type": "number"
                },
                "startTime": {
                    "type": "number"
                },
                "useState": {
                    "type": "string"
                },
                "configId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "version": {
                    "type": "number"
                },
                "tenantId": {
                    "type": "string"
                }
            }
        },
        "HTTPWriteCredentialDTO": {
            "type": "object",
            "properties": {
                "comments": {
                    "type": "string"
                },
                "credentialType": {
                    "type": "string",
                    "enum": [
                        "GLOBAL",
                        "APP"
                    ]
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "instanceTenantId": {
                    "type": "string"
                },
                "instanceUuid": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "secure": {
                    "type": "boolean"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "TemplateDeploymentInfo": {
            "type": "object",
            "properties": {
                "forcePushTemplate": {
                    "type": "boolean"
                },
                "isComposite": {
                    "type": "boolean"
                },
                "mainTemplateId": {
                    "type": "string"
                },
                "memberTemplateDeploymentInfo": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "targetInfo": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "hostName": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "params": {
                                "type": "object",
                                "properties": {}
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "MANAGED_DEVICE_IP",
                                    "MANAGED_DEVICE_UUID",
                                    "PRE_PROVISIONED_SERIAL",
                                    "PRE_PROVISIONED_MAC",
                                    "DEFAULT",
                                    "MANAGED_DEVICE_HOSTNAME"
                                ]
                            }
                        }
                    }
                },
                "templateId": {
                    "type": "string"
                }
            }
        },
        "TemplateDeploymentStatusDTO": {
            "type": "object",
            "properties": {
                "deploymentId": {
                    "type": "string"
                },
                "deploymentName": {
                    "type": "string"
                },
                "devices": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "deviceId": {
                                "type": "string"
                            },
                            "duration": {
                                "type": "string"
                            },
                            "endTime": {
                                "type": "string"
                            },
                            "ipAddress": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "startTime": {
                                "type": "string"
                            },
                            "status": {
                                "type": "string"
                            }
                        }
                    }
                },
                "duration": {
                    "type": "string"
                },
                "endTime": {
                    "type": "string"
                },
                "projectName": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "templateName": {
                    "type": "string"
                },
                "templateVersion": {
                    "type": "string"
                }
            }
        },
        "AddAWorkflowResponse": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "lastupdateOn": {
                    "type": "number"
                },
                "imageId": {
                    "type": "string"
                },
                "currTaskIdx": {
                    "type": "number"
                },
                "addedOn": {
                    "type": "number"
                },
                "tasks": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "state": {
                                "type": "string"
                            },
                            "type": {
                                "type": "string"
                            },
                            "currWorkItemIdx": {
                                "type": "number"
                            },
                            "taskSeqNo": {
                                "type": "number"
                            },
                            "endTime": {
                                "type": "number"
                            },
                            "startTime": {
                                "type": "number"
                            },
                            "workItemList": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "state": {
                                            "type": "string"
                                        },
                                        "command": {
                                            "type": "string"
                                        },
                                        "outputStr": {
                                            "type": "string"
                                        },
                                        "endTime": {
                                            "type": "number"
                                        },
                                        "startTime": {
                                            "type": "number"
                                        },
                                        "timeTaken": {
                                            "type": "number"
                                        }
                                    }
                                }
                            },
                            "timeTaken": {
                                "type": "number"
                            },
                            "name": {
                                "type": "string"
                            }
                        }
                    }
                },
                "addToInventory": {
                    "type": "boolean"
                },
                "instanceType": {
                    "type": "string"
                },
                "endTime": {
                    "type": "number"
                },
                "execTime": {
                    "type": "number"
                },
                "startTime": {
                    "type": "number"
                },
                "useState": {
                    "type": "string"
                },
                "configId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "version": {
                    "type": "number"
                },
                "tenantId": {
                    "type": "string"
                }
            }
        },
        "UpdatePnPServerProfileResponse": {
            "type": "object",
            "properties": {
                "virtualAccountId": {
                    "type": "string"
                },
                "autoSyncPeriod": {
                    "type": "number"
                },
                "syncResultStr": {
                    "type": "string"
                },
                "profile": {
                    "type": "object",
                    "properties": {
                        "proxy": {
                            "type": "boolean"
                        },
                        "makeDefault": {
                            "type": "boolean"
                        },
                        "port": {
                            "type": "number"
                        },
                        "profileId": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "addressIpV4": {
                            "type": "string"
                        },
                        "cert": {
                            "type": "string"
                        },
                        "addressFqdn": {
                            "type": "string"
                        }
                    }
                },
                "ccoUser": {
                    "type": "string"
                },
                "syncResult": {
                    "type": "object",
                    "properties": {
                        "syncList": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "syncType": {
                                        "type": "string"
                                    },
                                    "deviceSnList": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "syncMsg": {
                            "type": "string"
                        }
                    }
                },
                "token": {
                    "type": "string"
                },
                "syncStartTime": {
                    "type": "number"
                },
                "lastSync": {
                    "type": "number"
                },
                "tenantId": {
                    "type": "string"
                },
                "smartAccountId": {
                    "type": "string"
                },
                "expiry": {
                    "type": "number"
                },
                "syncStatus": {
                    "type": "string"
                }
            }
        },
        "FlowAnalysisListOutput": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "controlPath": {
                                "type": "boolean"
                            },
                            "createTime": {
                                "type": "integer"
                            },
                            "destIP": {
                                "type": "string"
                            },
                            "destPort": {
                                "type": "string"
                            },
                            "failureReason": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "inclusions": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "lastUpdateTime": {
                                "type": "integer"
                            },
                            "periodicRefresh": {
                                "type": "boolean"
                            },
                            "protocol": {
                                "type": "string"
                            },
                            "sourceIP": {
                                "type": "string"
                            },
                            "sourcePort": {
                                "type": "string"
                            },
                            "status": {
                                "type": "string"
                            }
                        }
                    }
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "GetPnPGlobalSettingsResponse": {
            "type": "object",
            "properties": {
                "savaMappingList": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "syncStatus": {
                                "type": "string"
                            },
                            "syncStartTime": {
                                "type": "number"
                            },
                            "syncResult": {
                                "type": "object",
                                "properties": {
                                    "syncList": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "syncType": {
                                                    "type": "string"
                                                },
                                                "deviceSnList": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "syncMsg": {
                                        "type": "string"
                                    }
                                }
                            },
                            "lastSync": {
                                "type": "number"
                            },
                            "tenantId": {
                                "type": "string"
                            },
                            "profile": {
                                "type": "object",
                                "properties": {
                                    "port": {
                                        "type": "number"
                                    },
                                    "addressIpV4": {
                                        "type": "string"
                                    },
                                    "addressFqdn": {
                                        "type": "string"
                                    },
                                    "profileId": {
                                        "type": "string"
                                    },
                                    "proxy": {
                                        "type": "boolean"
                                    },
                                    "makeDefault": {
                                        "type": "boolean"
                                    },
                                    "cert": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            },
                            "token": {
                                "type": "string"
                            },
                            "expiry": {
                                "type": "number"
                            },
                            "ccoUser": {
                                "type": "string"
                            },
                            "smartAccountId": {
                                "type": "string"
                            },
                            "virtualAccountId": {
                                "type": "string"
                            },
                            "autoSyncPeriod": {
                                "type": "number"
                            },
                            "syncResultStr": {
                                "type": "string"
                            }
                        }
                    }
                },
                "taskTimeOuts": {
                    "type": "object",
                    "properties": {
                        "imageDownloadTimeOut": {
                            "type": "number"
                        },
                        "configTimeOut": {
                            "type": "number"
                        },
                        "generalTimeOut": {
                            "type": "number"
                        }
                    }
                },
                "tenantId": {
                    "type": "string"
                },
                "aaaCredentials": {
                    "type": "object",
                    "properties": {
                        "password": {
                            "type": "string"
                        },
                        "username": {
                            "type": "string"
                        }
                    }
                },
                "defaultProfile": {
                    "type": "object",
                    "properties": {
                        "fqdnAddresses": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "proxy": {
                            "type": "boolean"
                        },
                        "cert": {
                            "type": "string"
                        },
                        "ipAddresses": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "port": {
                            "type": "number"
                        }
                    }
                },
                "acceptEula": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "_id": {
                    "type": "string"
                },
                "version": {
                    "type": "number"
                }
            }
        },
        "HTTPReadCredentialDTO": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "comments": {
                        "type": "string"
                    },
                    "credentialType": {
                        "type": "string",
                        "enum": [
                            "GLOBAL",
                            "APP"
                        ]
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "instanceTenantId": {
                        "type": "string"
                    },
                    "instanceUuid": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "port": {
                        "type": "integer"
                    },
                    "secure": {
                        "type": "boolean"
                    },
                    "username": {
                        "type": "string"
                    }
                }
            }
        },
        "GetWorkflowCountResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "number"
                }
            }
        },
        "VlanNamesResult": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "NetworkDeviceResult": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "object",
                    "properties": {
                        "apManagerInterfaceIp": {
                            "type": "string"
                        },
                        "associatedWlcIp": {
                            "type": "string"
                        },
                        "bootDateTime": {
                            "type": "string"
                        },
                        "collectionInterval": {
                            "type": "string"
                        },
                        "collectionStatus": {
                            "type": "string"
                        },
                        "errorCode": {
                            "type": "string"
                        },
                        "errorDescription": {
                            "type": "string"
                        },
                        "family": {
                            "type": "string"
                        },
                        "hostname": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        },
                        "instanceTenantId": {
                            "type": "string"
                        },
                        "instanceUuid": {
                            "type": "string"
                        },
                        "interfaceCount": {
                            "type": "string"
                        },
                        "inventoryStatusDetail": {
                            "type": "string"
                        },
                        "lastUpdateTime": {
                            "type": "string"
                        },
                        "lastUpdated": {
                            "type": "string"
                        },
                        "lineCardCount": {
                            "type": "string"
                        },
                        "lineCardId": {
                            "type": "string"
                        },
                        "location": {
                            "type": "string"
                        },
                        "locationName": {
                            "type": "string"
                        },
                        "macAddress": {
                            "type": "string"
                        },
                        "managementIpAddress": {
                            "type": "string"
                        },
                        "memorySize": {
                            "type": "string"
                        },
                        "platformId": {
                            "type": "string"
                        },
                        "reachabilityFailureReason": {
                            "type": "string"
                        },
                        "reachabilityStatus": {
                            "type": "string"
                        },
                        "role": {
                            "type": "string"
                        },
                        "roleSource": {
                            "type": "string"
                        },
                        "serialNumber": {
                            "type": "string"
                        },
                        "series": {
                            "type": "string"
                        },
                        "snmpContact": {
                            "type": "string"
                        },
                        "snmpLocation": {
                            "type": "string"
                        },
                        "softwareType": {
                            "type": "string"
                        },
                        "softwareVersion": {
                            "type": "string"
                        },
                        "tagCount": {
                            "type": "string"
                        },
                        "tunnelUdpPort": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string"
                        },
                        "upTime": {
                            "type": "string"
                        },
                        "waasDeviceMode": {
                            "type": "string"
                        }
                    }
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "NetworkDeviceBriefNIOResult": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string"
                        },
                        "role": {
                            "type": "string"
                        },
                        "roleSource": {
                            "type": "string"
                        }
                    }
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "SitesInfoDTO": {
            "type": "object",
            "properties": {
                "siteUuids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "TaskDTOResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "object",
                    "properties": {
                        "additionalStatusURL": {
                            "type": "string"
                        },
                        "data": {
                            "type": "string"
                        },
                        "endTime": {
                            "type": "string"
                        },
                        "errorCode": {
                            "type": "string"
                        },
                        "errorKey": {
                            "type": "string"
                        },
                        "failureReason": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        },
                        "instanceTenantId": {
                            "type": "string"
                        },
                        "isError": {
                            "type": "boolean"
                        },
                        "lastUpdate": {
                            "type": "string"
                        },
                        "operationIdList": {
                            "type": "object"
                        },
                        "parentId": {
                            "type": "string"
                        },
                        "progress": {
                            "type": "string"
                        },
                        "rootId": {
                            "type": "string"
                        },
                        "serviceType": {
                            "type": "string"
                        },
                        "startTime": {
                            "type": "string"
                        },
                        "username": {
                            "type": "string"
                        },
                        "version": {
                            "type": "integer"
                        }
                    }
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "FunctionalCapabilityResult": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "object",
                    "properties": {
                        "attributeInfo": {
                            "type": "object",
                            "properties": {}
                        },
                        "functionDetails": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "attributeInfo": {
                                        "type": "object",
                                        "properties": {}
                                    },
                                    "id": {
                                        "type": "string"
                                    },
                                    "propertyName": {
                                        "type": "string"
                                    },
                                    "stringValue": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "functionName": {
                            "type": "string"
                        },
                        "functionOpState": {
                            "type": "string",
                            "enum": [
                                "UNKNOWN",
                                "NOT_APPLICABLE",
                                "DISABLED",
                                "ENABLED"
                            ]
                        },
                        "id": {
                            "type": "string"
                        }
                    }
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "DiscoveryNIO": {
            "type": "object",
            "properties": {
                "attributeInfo": {
                    "type": "object",
                    "properties": {}
                },
                "cdpLevel": {
                    "type": "integer"
                },
                "deviceIds": {
                    "type": "string"
                },
                "discoveryCondition": {
                    "type": "string"
                },
                "discoveryStatus": {
                    "type": "string"
                },
                "discoveryType": {
                    "type": "string"
                },
                "enablePasswordList": {
                    "type": "string"
                },
                "globalCredentialIdList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "httpReadCredential": {
                    "type": "object",
                    "properties": {
                        "comments": {
                            "type": "string"
                        },
                        "credentialType": {
                            "type": "string",
                            "enum": [
                                "GLOBAL",
                                "APP"
                            ]
                        },
                        "description": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        },
                        "instanceTenantId": {
                            "type": "string"
                        },
                        "instanceUuid": {
                            "type": "string"
                        },
                        "password": {
                            "type": "string"
                        },
                        "port": {
                            "type": "integer"
                        },
                        "secure": {
                            "type": "boolean"
                        },
                        "username": {
                            "type": "string"
                        }
                    }
                },
                "httpWriteCredential": {
                    "type": "object",
                    "properties": {
                        "comments": {
                            "type": "string"
                        },
                        "credentialType": {
                            "type": "string",
                            "enum": [
                                "GLOBAL",
                                "APP"
                            ]
                        },
                        "description": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        },
                        "instanceTenantId": {
                            "type": "string"
                        },
                        "instanceUuid": {
                            "type": "string"
                        },
                        "password": {
                            "type": "string"
                        },
                        "port": {
                            "type": "integer"
                        },
                        "secure": {
                            "type": "boolean"
                        },
                        "username": {
                            "type": "string"
                        }
                    }
                },
                "id": {
                    "type": "string"
                },
                "ipAddressList": {
                    "type": "string"
                },
                "ipFilterList": {
                    "type": "string"
                },
                "isAutoCdp": {
                    "type": "boolean"
                },
                "lldpLevel": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "netconfPort": {
                    "type": "string"
                },
                "numDevices": {
                    "type": "integer"
                },
                "parentDiscoveryId": {
                    "type": "string"
                },
                "passwordList": {
                    "type": "string"
                },
                "preferredMgmtIPMethod": {
                    "type": "string"
                },
                "protocolOrder": {
                    "type": "string"
                },
                "retryCount": {
                    "type": "integer"
                },
                "snmpAuthPassphrase": {
                    "type": "string"
                },
                "snmpAuthProtocol": {
                    "type": "string"
                },
                "snmpMode": {
                    "type": "string"
                },
                "snmpPrivPassphrase": {
                    "type": "string"
                },
                "snmpPrivProtocol": {
                    "type": "string"
                },
                "snmpRoCommunity": {
                    "type": "string"
                },
                "snmpRoCommunityDesc": {
                    "type": "string"
                },
                "snmpRwCommunity": {
                    "type": "string"
                },
                "snmpRwCommunityDesc": {
                    "type": "string"
                },
                "snmpUserName": {
                    "type": "string"
                },
                "timeOut": {
                    "type": "integer"
                },
                "updateMgmtIp": {
                    "type": "boolean"
                },
                "userNameList": {
                    "type": "string"
                }
            }
        },
        "SuccessResult": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "DiscoveryJobNIOListResult": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "attributeInfo": {
                                "type": "object",
                                "properties": {}
                            },
                            "cliStatus": {
                                "type": "string"
                            },
                            "discoveryStatus": {
                                "type": "string"
                            },
                            "endTime": {
                                "type": "string"
                            },
                            "httpStatus": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "inventoryCollectionStatus": {
                                "type": "string"
                            },
                            "inventoryReachabilityStatus": {
                                "type": "string"
                            },
                            "ipAddress": {
                                "type": "string"
                            },
                            "jobStatus": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "netconfStatus": {
                                "type": "string"
                            },
                            "pingStatus": {
                                "type": "string"
                            },
                            "snmpStatus": {
                                "type": "string"
                            },
                            "startTime": {
                                "type": "string"
                            },
                            "taskId": {
                                "type": "string"
                            }
                        }
                    }
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "ResetRequest": {
            "type": "object",
            "properties": {
                "deviceResetList": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "configList": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "configId": {
                                            "type": "string"
                                        },
                                        "configParameters": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "key": {
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "deviceId": {
                                "type": "string"
                            },
                            "licenseLevel": {
                                "type": "string"
                            },
                            "licenseType": {
                                "type": "string"
                            },
                            "topOfStackSerialNumber": {
                                "type": "string"
                            }
                        }
                    }
                },
                "projectId": {
                    "type": "string"
                },
                "workflowId": {
                    "type": "string"
                }
            }
        },
        "ResetDeviceResponse": {
            "type": "object",
            "properties": {
                "jsonArrayResponse": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "jsonResponse": {
                    "type": "object",
                    "properties": {}
                },
                "message": {
                    "type": "string"
                },
                "statusCode": {
                    "type": "number"
                }
            }
        },
        "DistributeDTO": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "deviceUuid": {
                        "type": "string"
                    },
                    "imageUuid": {
                        "type": "string"
                    }
                }
            }
        },
        "FlowAnalysisRequest": {
            "type": "object",
            "properties": {
                "controlPath": {
                    "type": "boolean"
                },
                "destIP": {
                    "type": "string"
                },
                "destPort": {
                    "type": "string"
                },
                "inclusions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "periodicRefresh": {
                    "type": "boolean"
                },
                "protocol": {
                    "type": "string"
                },
                "sourceIP": {
                    "type": "string"
                },
                "sourcePort": {
                    "type": "string"
                }
            }
        },
        "FlowAnalysisRequestResultOutput": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "object",
                    "properties": {
                        "flowAnalysisId": {
                            "type": "string"
                        },
                        "taskId": {
                            "type": "string"
                        },
                        "url": {
                            "type": "string"
                        }
                    }
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "SystemPropertyNameAndIntValueDTO": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "instanceTenantId": {
                        "type": "string"
                    },
                    "instanceUuid": {
                        "type": "string"
                    },
                    "intValue": {
                        "type": "integer"
                    },
                    "systemPropertyName": {
                        "type": "string"
                    }
                }
            }
        },
        "CLICredentialDTO": {
            "type": "object",
            "properties": {
                "comments": {
                    "type": "string"
                },
                "credentialType": {
                    "type": "string",
                    "enum": [
                        "GLOBAL",
                        "APP"
                    ]
                },
                "description": {
                    "type": "string"
                },
                "enablePassword": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "instanceTenantId": {
                    "type": "string"
                },
                "instanceUuid": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "NetworkDeviceNIOListResult": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "anchorWlcForAp": {
                                "type": "string"
                            },
                            "authModelId": {
                                "type": "string"
                            },
                            "avgUpdateFrequency": {
                                "type": "integer"
                            },
                            "bootDateTime": {
                                "type": "string"
                            },
                            "cliStatus": {
                                "type": "string"
                            },
                            "duplicateDeviceId": {
                                "type": "string"
                            },
                            "errorCode": {
                                "type": "string"
                            },
                            "errorDescription": {
                                "type": "string"
                            },
                            "family": {
                                "type": "string"
                            },
                            "hostname": {
                                "type": "string"
                            },
                            "httpStatus": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "imageName": {
                                "type": "string"
                            },
                            "ingressQueueConfig": {
                                "type": "string"
                            },
                            "interfaceCount": {
                                "type": "string"
                            },
                            "inventoryCollectionStatus": {
                                "type": "string"
                            },
                            "inventoryReachabilityStatus": {
                                "type": "string"
                            },
                            "lastUpdated": {
                                "type": "string"
                            },
                            "lineCardCount": {
                                "type": "string"
                            },
                            "lineCardId": {
                                "type": "string"
                            },
                            "location": {
                                "type": "string"
                            },
                            "locationName": {
                                "type": "string"
                            },
                            "macAddress": {
                                "type": "string"
                            },
                            "managementIpAddress": {
                                "type": "string"
                            },
                            "memorySize": {
                                "type": "string"
                            },
                            "netconfStatus": {
                                "type": "string"
                            },
                            "numUpdates": {
                                "type": "integer"
                            },
                            "pingStatus": {
                                "type": "string"
                            },
                            "platformId": {
                                "type": "string"
                            },
                            "portRange": {
                                "type": "string"
                            },
                            "qosStatus": {
                                "type": "string"
                            },
                            "reachabilityFailureReason": {
                                "type": "string"
                            },
                            "reachabilityStatus": {
                                "type": "string"
                            },
                            "role": {
                                "type": "string"
                            },
                            "roleSource": {
                                "type": "string"
                            },
                            "serialNumber": {
                                "type": "string"
                            },
                            "snmpContact": {
                                "type": "string"
                            },
                            "snmpLocation": {
                                "type": "string"
                            },
                            "snmpStatus": {
                                "type": "string"
                            },
                            "softwareVersion": {
                                "type": "string"
                            },
                            "tag": {
                                "type": "string"
                            },
                            "tagCount": {
                                "type": "integer"
                            },
                            "type": {
                                "type": "string"
                            },
                            "upTime": {
                                "type": "string"
                            },
                            "vendor": {
                                "type": "string"
                            },
                            "wlcApDeviceStatus": {
                                "type": "string"
                            }
                        }
                    }
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "GetWorkflowsResponse": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "lastupdateOn": {
                        "type": "number"
                    },
                    "imageId": {
                        "type": "string"
                    },
                    "currTaskIdx": {
                        "type": "number"
                    },
                    "addedOn": {
                        "type": "number"
                    },
                    "tasks": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "state": {
                                    "type": "string"
                                },
                                "type": {
                                    "type": "string"
                                },
                                "currWorkItemIdx": {
                                    "type": "number"
                                },
                                "taskSeqNo": {
                                    "type": "number"
                                },
                                "endTime": {
                                    "type": "number"
                                },
                                "startTime": {
                                    "type": "number"
                                },
                                "workItemList": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "state": {
                                                "type": "string"
                                            },
                                            "command": {
                                                "type": "string"
                                            },
                                            "outputStr": {
                                                "type": "string"
                                            },
                                            "endTime": {
                                                "type": "number"
                                            },
                                            "startTime": {
                                                "type": "number"
                                            },
                                            "timeTaken": {
                                                "type": "number"
                                            }
                                        }
                                    }
                                },
                                "timeTaken": {
                                    "type": "number"
                                },
                                "name": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "addToInventory": {
                        "type": "boolean"
                    },
                    "instanceType": {
                        "type": "string"
                    },
                    "endTime": {
                        "type": "number"
                    },
                    "execTime": {
                        "type": "number"
                    },
                    "startTime": {
                        "type": "number"
                    },
                    "useState": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "version": {
                        "type": "number"
                    },
                    "tenantId": {
                        "type": "string"
                    }
                }
            }
        },
        "SiteResult": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "object",
                    "properties": {
                        "sites": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "displayName": {
                                        "type": "string"
                                    },
                                    "groupNameHierarchy": {
                                        "type": "string"
                                    },
                                    "id": {
                                        "type": "string"
                                    },
                                    "latitude": {
                                        "type": "string"
                                    },
                                    "locationAddress": {
                                        "type": "string"
                                    },
                                    "locationCountry": {
                                        "type": "string"
                                    },
                                    "locationType": {
                                        "type": "string"
                                    },
                                    "longitude": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "parentId": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "ImageImportFromUrlDTO": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "applicationType": {
                        "type": "string"
                    },
                    "imageFamily": {
                        "type": "string"
                    },
                    "sourceURL": {
                        "type": "string"
                    },
                    "thirdParty": {
                        "type": "boolean"
                    },
                    "vendor": {
                        "type": "string"
                    }
                }
            }
        },
        "DeleteWorkflowByIdResponse": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "lastupdateOn": {
                    "type": "number"
                },
                "imageId": {
                    "type": "string"
                },
                "currTaskIdx": {
                    "type": "number"
                },
                "addedOn": {
                    "type": "number"
                },
                "tasks": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "state": {
                                "type": "string"
                            },
                            "type": {
                                "type": "string"
                            },
                            "currWorkItemIdx": {
                                "type": "number"
                            },
                            "taskSeqNo": {
                                "type": "number"
                            },
                            "endTime": {
                                "type": "number"
                            },
                            "startTime": {
                                "type": "number"
                            },
                            "workItemList": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "state": {
                                            "type": "string"
                                        },
                                        "command": {
                                            "type": "string"
                                        },
                                        "outputStr": {
                                            "type": "string"
                                        },
                                        "endTime": {
                                            "type": "number"
                                        },
                                        "startTime": {
                                            "type": "number"
                                        },
                                        "timeTaken": {
                                            "type": "number"
                                        }
                                    }
                                }
                            },
                            "timeTaken": {
                                "type": "number"
                            },
                            "name": {
                                "type": "string"
                            }
                        }
                    }
                },
                "addToInventory": {
                    "type": "boolean"
                },
                "instanceType": {
                    "type": "string"
                },
                "endTime": {
                    "type": "number"
                },
                "execTime": {
                    "type": "number"
                },
                "startTime": {
                    "type": "number"
                },
                "useState": {
                    "type": "string"
                },
                "configId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "version": {
                    "type": "number"
                },
                "tenantId": {
                    "type": "string"
                }
            }
        },
        "RawCliInfoNIOListResult": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "attributeInfo": {
                                "type": "object",
                                "properties": {}
                            },
                            "cdpNeighbors": {
                                "type": "string"
                            },
                            "healthMonitor": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "intfDescription": {
                                "type": "string"
                            },
                            "inventory": {
                                "type": "string"
                            },
                            "ipIntfBrief": {
                                "type": "string"
                            },
                            "macAddressTable": {
                                "type": "string"
                            },
                            "runningConfig": {
                                "type": "string"
                            },
                            "snmp": {
                                "type": "string"
                            },
                            "version": {
                                "type": "string"
                            }
                        }
                    }
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "NetworkDeviceBriefNIO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "roleSource": {
                    "type": "string"
                }
            }
        },
        "ExportDeviceDTO": {
            "type": "object",
            "properties": {
                "deviceUuids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "operationEnum": {
                    "type": "string",
                    "enum": [
                        "CREDENTIALDETAILS",
                        "DEVICEDETAILS"
                    ]
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "GetDeviceByIdResponse": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "deviceInfo": {
                    "type": "object",
                    "properties": {
                        "source": {
                            "type": "string"
                        },
                        "serialNumber": {
                            "type": "string"
                        },
                        "stack": {
                            "type": "boolean"
                        },
                        "mode": {
                            "type": "string"
                        },
                        "state": {
                            "type": "string"
                        },
                        "location": {
                            "type": "object",
                            "properties": {
                                "siteId": {
                                    "type": "string"
                                },
                                "address": {
                                    "type": "string"
                                },
                                "latitude": {
                                    "type": "string"
                                },
                                "longitude": {
                                    "type": "string"
                                },
                                "altitude": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": {
                            "type": "string"
                        },
                        "onbState": {
                            "type": "string"
                        },
                        "authenticatedMicNumber": {
                            "type": "string"
                        },
                        "authenticatedSudiSerialNo": {
                            "type": "string"
                        },
                        "capabilitiesSupported": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "featuresSupported": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "cmState": {
                            "type": "string"
                        },
                        "firstContact": {
                            "type": "number"
                        },
                        "lastContact": {
                            "type": "number"
                        },
                        "macAddress": {
                            "type": "string"
                        },
                        "pid": {
                            "type": "string"
                        },
                        "deviceSudiSerialNos": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "lastUpdateOn": {
                            "type": "number"
                        },
                        "workflowId": {
                            "type": "string"
                        },
                        "workflowName": {
                            "type": "string"
                        },
                        "projectId": {
                            "type": "string"
                        },
                        "projectName": {
                            "type": "string"
                        },
                        "deviceType": {
                            "type": "string"
                        },
                        "agentType": {
                            "type": "string"
                        },
                        "imageVersion": {
                            "type": "string"
                        },
                        "fileSystemList": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "writeable": {
                                        "type": "boolean"
                                    },
                                    "freespace": {
                                        "type": "number"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "readable": {
                                        "type": "boolean"
                                    },
                                    "size": {
                                        "type": "number"
                                    }
                                }
                            }
                        },
                        "pnpProfileList": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "profileName": {
                                        "type": "string"
                                    },
                                    "discoveryCreated": {
                                        "type": "boolean"
                                    },
                                    "createdBy": {
                                        "type": "string"
                                    },
                                    "primaryEndpoint": {
                                        "type": "object",
                                        "properties": {
                                            "port": {
                                                "type": "number"
                                            },
                                            "protocol": {
                                                "type": "string"
                                            },
                                            "ipv4Address": {
                                                "type": "object",
                                                "properties": {}
                                            },
                                            "ipv6Address": {
                                                "type": "object",
                                                "properties": {}
                                            },
                                            "fqdn": {
                                                "type": "string"
                                            },
                                            "certificate": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "secondaryEndpoint": {
                                        "type": "object",
                                        "properties": {
                                            "port": {
                                                "type": "number"
                                            },
                                            "protocol": {
                                                "type": "string"
                                            },
                                            "ipv4Address": {
                                                "type": "object",
                                                "properties": {}
                                            },
                                            "ipv6Address": {
                                                "type": "object",
                                                "properties": {}
                                            },
                                            "fqdn": {
                                                "type": "string"
                                            },
                                            "certificate": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "imageFile": {
                            "type": "string"
                        },
                        "httpHeaders": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "key": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "neighborLinks": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "localInterfaceName": {
                                        "type": "string"
                                    },
                                    "localShortInterfaceName": {
                                        "type": "string"
                                    },
                                    "localMacAddress": {
                                        "type": "string"
                                    },
                                    "remoteInterfaceName": {
                                        "type": "string"
                                    },
                                    "remoteShortInterfaceName": {
                                        "type": "string"
                                    },
                                    "remoteMacAddress": {
                                        "type": "string"
                                    },
                                    "remoteDeviceName": {
                                        "type": "string"
                                    },
                                    "remotePlatform": {
                                        "type": "string"
                                    },
                                    "remoteVersion": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "lastSyncTime": {
                            "type": "number"
                        },
                        "ipInterfaces": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "status": {
                                        "type": "string"
                                    },
                                    "macAddress": {
                                        "type": "string"
                                    },
                                    "ipv4Address": {
                                        "type": "object",
                                        "properties": {}
                                    },
                                    "ipv6AddressList": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {}
                                        }
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "hostname": {
                            "type": "string"
                        },
                        "authStatus": {
                            "type": "string"
                        },
                        "stackInfo": {
                            "type": "object",
                            "properties": {
                                "supportsStackWorkflows": {
                                    "type": "boolean"
                                },
                                "isFullRing": {
                                    "type": "boolean"
                                },
                                "stackMemberList": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "serialNumber": {
                                                "type": "string"
                                            },
                                            "state": {
                                                "type": "string"
                                            },
                                            "role": {
                                                "type": "string"
                                            },
                                            "macAddress": {
                                                "type": "string"
                                            },
                                            "pid": {
                                                "type": "string"
                                            },
                                            "licenseLevel": {
                                                "type": "string"
                                            },
                                            "licenseType": {
                                                "type": "string"
                                            },
                                            "sudiSerialNumber": {
                                                "type": "string"
                                            },
                                            "hardwareVersion": {
                                                "type": "string"
                                            },
                                            "stackNumber": {
                                                "type": "number"
                                            },
                                            "softwareVersion": {
                                                "type": "string"
                                            },
                                            "priority": {
                                                "type": "number"
                                            }
                                        }
                                    }
                                },
                                "stackRingProtocol": {
                                    "type": "string"
                                },
                                "validLicenseLevels": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "totalMemberCount": {
                                    "type": "number"
                                }
                            }
                        },
                        "reloadRequested": {
                            "type": "boolean"
                        },
                        "addedOn": {
                            "type": "number"
                        },
                        "siteId": {
                            "type": "string"
                        },
                        "aaaCredentials": {
                            "type": "object",
                            "properties": {
                                "password": {
                                    "type": "string"
                                },
                                "username": {
                                    "type": "string"
                                }
                            }
                        },
                        "userMicNumbers": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "userSudiSerialNos": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "addnMacAddrs": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "preWorkflowCliOuputs": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "cli": {
                                        "type": "string"
                                    },
                                    "cliOutput": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "tags": {
                            "type": "object",
                            "properties": {}
                        },
                        "sudiRequired": {
                            "type": "boolean"
                        },
                        "smartAccountId": {
                            "type": "string"
                        },
                        "virtualAccountId": {
                            "type": "string"
                        },
                        "populateInventory": {
                            "type": "boolean"
                        },
                        "siteName": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                },
                "systemResetWorkflow": {
                    "type": "object",
                    "properties": {
                        "_id": {
                            "type": "string"
                        },
                        "state": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string"
                        },
                        "lastupdateOn": {
                            "type": "number"
                        },
                        "imageId": {
                            "type": "string"
                        },
                        "currTaskIdx": {
                            "type": "number"
                        },
                        "addedOn": {
                            "type": "number"
                        },
                        "tasks": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "state": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    },
                                    "currWorkItemIdx": {
                                        "type": "number"
                                    },
                                    "taskSeqNo": {
                                        "type": "number"
                                    },
                                    "endTime": {
                                        "type": "number"
                                    },
                                    "startTime": {
                                        "type": "number"
                                    },
                                    "workItemList": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "state": {
                                                    "type": "string"
                                                },
                                                "command": {
                                                    "type": "string"
                                                },
                                                "outputStr": {
                                                    "type": "string"
                                                },
                                                "endTime": {
                                                    "type": "number"
                                                },
                                                "startTime": {
                                                    "type": "number"
                                                },
                                                "timeTaken": {
                                                    "type": "number"
                                                }
                                            }
                                        }
                                    },
                                    "timeTaken": {
                                        "type": "number"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "addToInventory": {
                            "type": "boolean"
                        },
                        "instanceType": {
                            "type": "string"
                        },
                        "endTime": {
                            "type": "number"
                        },
                        "execTime": {
                            "type": "number"
                        },
                        "startTime": {
                            "type": "number"
                        },
                        "useState": {
                            "type": "string"
                        },
                        "configId": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "version": {
                            "type": "number"
                        },
                        "tenantId": {
                            "type": "string"
                        }
                    }
                },
                "systemWorkflow": {
                    "type": "object",
                    "properties": {
                        "_id": {
                            "type": "string"
                        },
                        "state": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string"
                        },
                        "lastupdateOn": {
                            "type": "number"
                        },
                        "imageId": {
                            "type": "string"
                        },
                        "currTaskIdx": {
                            "type": "number"
                        },
                        "addedOn": {
                            "type": "number"
                        },
                        "tasks": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "state": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    },
                                    "currWorkItemIdx": {
                                        "type": "number"
                                    },
                                    "taskSeqNo": {
                                        "type": "number"
                                    },
                                    "endTime": {
                                        "type": "number"
                                    },
                                    "startTime": {
                                        "type": "number"
                                    },
                                    "workItemList": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "state": {
                                                    "type": "string"
                                                },
                                                "command": {
                                                    "type": "string"
                                                },
                                                "outputStr": {
                                                    "type": "string"
                                                },
                                                "endTime": {
                                                    "type": "number"
                                                },
                                                "startTime": {
                                                    "type": "number"
                                                },
                                                "timeTaken": {
                                                    "type": "number"
                                                }
                                            }
                                        }
                                    },
                                    "timeTaken": {
                                        "type": "number"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "addToInventory": {
                            "type": "boolean"
                        },
                        "instanceType": {
                            "type": "string"
                        },
                        "endTime": {
                            "type": "number"
                        },
                        "execTime": {
                            "type": "number"
                        },
                        "startTime": {
                            "type": "number"
                        },
                        "useState": {
                            "type": "string"
                        },
                        "configId": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "version": {
                            "type": "number"
                        },
                        "tenantId": {
                            "type": "string"
                        }
                    }
                },
                "workflow": {
                    "type": "object",
                    "properties": {
                        "_id": {
                            "type": "string"
                        },
                        "state": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string"
                        },
                        "lastupdateOn": {
                            "type": "number"
                        },
                        "imageId": {
                            "type": "string"
                        },
                        "currTaskIdx": {
                            "type": "number"
                        },
                        "addedOn": {
                            "type": "number"
                        },
                        "tasks": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "state": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    },
                                    "currWorkItemIdx": {
                                        "type": "number"
                                    },
                                    "taskSeqNo": {
                                        "type": "number"
                                    },
                                    "endTime": {
                                        "type": "number"
                                    },
                                    "startTime": {
                                        "type": "number"
                                    },
                                    "workItemList": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "state": {
                                                    "type": "string"
                                                },
                                                "command": {
                                                    "type": "string"
                                                },
                                                "outputStr": {
                                                    "type": "string"
                                                },
                                                "endTime": {
                                                    "type": "number"
                                                },
                                                "startTime": {
                                                    "type": "number"
                                                },
                                                "timeTaken": {
                                                    "type": "number"
                                                }
                                            }
                                        }
                                    },
                                    "timeTaken": {
                                        "type": "number"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "addToInventory": {
                            "type": "boolean"
                        },
                        "instanceType": {
                            "type": "string"
                        },
                        "endTime": {
                            "type": "number"
                        },
                        "execTime": {
                            "type": "number"
                        },
                        "startTime": {
                            "type": "number"
                        },
                        "useState": {
                            "type": "string"
                        },
                        "configId": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "version": {
                            "type": "number"
                        },
                        "tenantId": {
                            "type": "string"
                        }
                    }
                },
                "runSummaryList": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "details": {
                                "type": "string"
                            },
                            "historyTaskInfo": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "workItemList": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "state": {
                                                    "type": "string"
                                                },
                                                "command": {
                                                    "type": "string"
                                                },
                                                "outputStr": {
                                                    "type": "string"
                                                },
                                                "endTime": {
                                                    "type": "number"
                                                },
                                                "startTime": {
                                                    "type": "number"
                                                },
                                                "timeTaken": {
                                                    "type": "number"
                                                }
                                            }
                                        }
                                    },
                                    "timeTaken": {
                                        "type": "number"
                                    },
                                    "addnDetails": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "key": {
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            },
                            "errorFlag": {
                                "type": "boolean"
                            },
                            "timestamp": {
                                "type": "number"
                            }
                        }
                    }
                },
                "workflowParameters": {
                    "type": "object",
                    "properties": {
                        "topOfStackSerialNumber": {
                            "type": "string"
                        },
                        "licenseLevel": {
                            "type": "string"
                        },
                        "licenseType": {
                            "type": "string"
                        },
                        "configList": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "configParameters": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "key": {
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "configId": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "dayZeroConfig": {
                    "type": "object",
                    "properties": {
                        "config": {
                            "type": "string"
                        }
                    }
                },
                "dayZeroConfigPreview": {
                    "type": "object",
                    "properties": {}
                },
                "version": {
                    "type": "number"
                },
                "tenantId": {
                    "type": "string"
                }
            }
        },
        "TopologyResult": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string"
                        },
                        "links": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "additionalInfo": {
                                        "type": "object",
                                        "properties": {}
                                    },
                                    "endPortID": {
                                        "type": "string"
                                    },
                                    "endPortIpv4Address": {
                                        "type": "string"
                                    },
                                    "endPortIpv4Mask": {
                                        "type": "string"
                                    },
                                    "endPortName": {
                                        "type": "string"
                                    },
                                    "endPortSpeed": {
                                        "type": "string"
                                    },
                                    "greyOut": {
                                        "type": "boolean"
                                    },
                                    "id": {
                                        "type": "string"
                                    },
                                    "linkStatus": {
                                        "type": "string"
                                    },
                                    "source": {
                                        "type": "string"
                                    },
                                    "startPortID": {
                                        "type": "string"
                                    },
                                    "startPortIpv4Address": {
                                        "type": "string"
                                    },
                                    "startPortIpv4Mask": {
                                        "type": "string"
                                    },
                                    "startPortName": {
                                        "type": "string"
                                    },
                                    "startPortSpeed": {
                                        "type": "string"
                                    },
                                    "tag": {
                                        "type": "string"
                                    },
                                    "target": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "nodes": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "aclApplied": {
                                        "type": "boolean"
                                    },
                                    "additionalInfo": {
                                        "type": "object",
                                        "properties": {}
                                    },
                                    "customParam": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "label": {
                                                "type": "string"
                                            },
                                            "parentNodeId": {
                                                "type": "string"
                                            },
                                            "x": {
                                                "type": "integer"
                                            },
                                            "y": {
                                                "type": "integer"
                                            }
                                        }
                                    },
                                    "dataPathId": {
                                        "type": "string"
                                    },
                                    "deviceType": {
                                        "type": "string"
                                    },
                                    "family": {
                                        "type": "string"
                                    },
                                    "fixed": {
                                        "type": "boolean"
                                    },
                                    "greyOut": {
                                        "type": "boolean"
                                    },
                                    "id": {
                                        "type": "string"
                                    },
                                    "ip": {
                                        "type": "string"
                                    },
                                    "label": {
                                        "type": "string"
                                    },
                                    "networkType": {
                                        "type": "string"
                                    },
                                    "nodeType": {
                                        "type": "string"
                                    },
                                    "order": {
                                        "type": "integer"
                                    },
                                    "osType": {
                                        "type": "string"
                                    },
                                    "platformId": {
                                        "type": "string"
                                    },
                                    "role": {
                                        "type": "string"
                                    },
                                    "roleSource": {
                                        "type": "string"
                                    },
                                    "softwareVersion": {
                                        "type": "string"
                                    },
                                    "tags": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "upperNode": {
                                        "type": "string"
                                    },
                                    "userId": {
                                        "type": "string"
                                    },
                                    "vlanId": {
                                        "type": "string"
                                    },
                                    "x": {
                                        "type": "integer"
                                    },
                                    "y": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    }
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "FunctionalCapabilityListResult": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "attributeInfo": {
                                "type": "object",
                                "properties": {}
                            },
                            "deviceId": {
                                "type": "string"
                            },
                            "functionalCapability": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "attributeInfo": {
                                            "type": "object",
                                            "properties": {}
                                        },
                                        "functionDetails": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "attributeInfo": {
                                                        "type": "object",
                                                        "properties": {}
                                                    },
                                                    "id": {
                                                        "type": "string"
                                                    },
                                                    "propertyName": {
                                                        "type": "string"
                                                    },
                                                    "stringValue": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "functionName": {
                                            "type": "string"
                                        },
                                        "functionOpState": {
                                            "type": "string",
                                            "enum": [
                                                "UNKNOWN",
                                                "NOT_APPLICABLE",
                                                "DISABLED",
                                                "ENABLED"
                                            ]
                                        },
                                        "id": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "id": {
                                "type": "string"
                            }
                        }
                    }
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "DeleteDeviceByIdFromPnPResponse": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "deviceInfo": {
                    "type": "object",
                    "properties": {
                        "source": {
                            "type": "string"
                        },
                        "serialNumber": {
                            "type": "string"
                        },
                        "stack": {
                            "type": "boolean"
                        },
                        "mode": {
                            "type": "string"
                        },
                        "state": {
                            "type": "string"
                        },
                        "location": {
                            "type": "object",
                            "properties": {
                                "siteId": {
                                    "type": "string"
                                },
                                "address": {
                                    "type": "string"
                                },
                                "latitude": {
                                    "type": "string"
                                },
                                "longitude": {
                                    "type": "string"
                                },
                                "altitude": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": {
                            "type": "string"
                        },
                        "onbState": {
                            "type": "string"
                        },
                        "authenticatedMicNumber": {
                            "type": "string"
                        },
                        "authenticatedSudiSerialNo": {
                            "type": "string"
                        },
                        "capabilitiesSupported": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "featuresSupported": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "cmState": {
                            "type": "string"
                        },
                        "firstContact": {
                            "type": "number"
                        },
                        "lastContact": {
                            "type": "number"
                        },
                        "macAddress": {
                            "type": "string"
                        },
                        "pid": {
                            "type": "string"
                        },
                        "deviceSudiSerialNos": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "lastUpdateOn": {
                            "type": "number"
                        },
                        "workflowId": {
                            "type": "string"
                        },
                        "workflowName": {
                            "type": "string"
                        },
                        "projectId": {
                            "type": "string"
                        },
                        "projectName": {
                            "type": "string"
                        },
                        "deviceType": {
                            "type": "string"
                        },
                        "agentType": {
                            "type": "string"
                        },
                        "imageVersion": {
                            "type": "string"
                        },
                        "fileSystemList": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "writeable": {
                                        "type": "boolean"
                                    },
                                    "freespace": {
                                        "type": "number"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "readable": {
                                        "type": "boolean"
                                    },
                                    "size": {
                                        "type": "number"
                                    }
                                }
                            }
                        },
                        "pnpProfileList": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "profileName": {
                                        "type": "string"
                                    },
                                    "discoveryCreated": {
                                        "type": "boolean"
                                    },
                                    "createdBy": {
                                        "type": "string"
                                    },
                                    "primaryEndpoint": {
                                        "type": "object",
                                        "properties": {
                                            "port": {
                                                "type": "number"
                                            },
                                            "protocol": {
                                                "type": "string"
                                            },
                                            "ipv4Address": {
                                                "type": "object",
                                                "properties": {}
                                            },
                                            "ipv6Address": {
                                                "type": "object",
                                                "properties": {}
                                            },
                                            "fqdn": {
                                                "type": "string"
                                            },
                                            "certificate": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "secondaryEndpoint": {
                                        "type": "object",
                                        "properties": {
                                            "port": {
                                                "type": "number"
                                            },
                                            "protocol": {
                                                "type": "string"
                                            },
                                            "ipv4Address": {
                                                "type": "object",
                                                "properties": {}
                                            },
                                            "ipv6Address": {
                                                "type": "object",
                                                "properties": {}
                                            },
                                            "fqdn": {
                                                "type": "string"
                                            },
                                            "certificate": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "imageFile": {
                            "type": "string"
                        },
                        "httpHeaders": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "key": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "neighborLinks": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "localInterfaceName": {
                                        "type": "string"
                                    },
                                    "localShortInterfaceName": {
                                        "type": "string"
                                    },
                                    "localMacAddress": {
                                        "type": "string"
                                    },
                                    "remoteInterfaceName": {
                                        "type": "string"
                                    },
                                    "remoteShortInterfaceName": {
                                        "type": "string"
                                    },
                                    "remoteMacAddress": {
                                        "type": "string"
                                    },
                                    "remoteDeviceName": {
                                        "type": "string"
                                    },
                                    "remotePlatform": {
                                        "type": "string"
                                    },
                                    "remoteVersion": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "lastSyncTime": {
                            "type": "number"
                        },
                        "ipInterfaces": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "status": {
                                        "type": "string"
                                    },
                                    "macAddress": {
                                        "type": "string"
                                    },
                                    "ipv4Address": {
                                        "type": "object",
                                        "properties": {}
                                    },
                                    "ipv6AddressList": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {}
                                        }
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "hostname": {
                            "type": "string"
                        },
                        "authStatus": {
                            "type": "string"
                        },
                        "stackInfo": {
                            "type": "object",
                            "properties": {
                                "supportsStackWorkflows": {
                                    "type": "boolean"
                                },
                                "isFullRing": {
                                    "type": "boolean"
                                },
                                "stackMemberList": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "serialNumber": {
                                                "type": "string"
                                            },
                                            "state": {
                                                "type": "string"
                                            },
                                            "role": {
                                                "type": "string"
                                            },
                                            "macAddress": {
                                                "type": "string"
                                            },
                                            "pid": {
                                                "type": "string"
                                            },
                                            "licenseLevel": {
                                                "type": "string"
                                            },
                                            "licenseType": {
                                                "type": "string"
                                            },
                                            "sudiSerialNumber": {
                                                "type": "string"
                                            },
                                            "hardwareVersion": {
                                                "type": "string"
                                            },
                                            "stackNumber": {
                                                "type": "number"
                                            },
                                            "softwareVersion": {
                                                "type": "string"
                                            },
                                            "priority": {
                                                "type": "number"
                                            }
                                        }
                                    }
                                },
                                "stackRingProtocol": {
                                    "type": "string"
                                },
                                "validLicenseLevels": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "totalMemberCount": {
                                    "type": "number"
                                }
                            }
                        },
                        "reloadRequested": {
                            "type": "boolean"
                        },
                        "addedOn": {
                            "type": "number"
                        },
                        "siteId": {
                            "type": "string"
                        },
                        "aaaCredentials": {
                            "type": "object",
                            "properties": {
                                "password": {
                                    "type": "string"
                                },
                                "username": {
                                    "type": "string"
                                }
                            }
                        },
                        "userMicNumbers": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "userSudiSerialNos": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "addnMacAddrs": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "preWorkflowCliOuputs": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "cli": {
                                        "type": "string"
                                    },
                                    "cliOutput": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "tags": {
                            "type": "object",
                            "properties": {}
                        },
                        "sudiRequired": {
                            "type": "boolean"
                        },
                        "smartAccountId": {
                            "type": "string"
                        },
                        "virtualAccountId": {
                            "type": "string"
                        },
                        "populateInventory": {
                            "type": "boolean"
                        },
                        "siteName": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                },
                "systemResetWorkflow": {
                    "type": "object",
                    "properties": {
                        "_id": {
                            "type": "string"
                        },
                        "state": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string"
                        },
                        "lastupdateOn": {
                            "type": "number"
                        },
                        "imageId": {
                            "type": "string"
                        },
                        "currTaskIdx": {
                            "type": "number"
                        },
                        "addedOn": {
                            "type": "number"
                        },
                        "tasks": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "state": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    },
                                    "currWorkItemIdx": {
                                        "type": "number"
                                    },
                                    "taskSeqNo": {
                                        "type": "number"
                                    },
                                    "endTime": {
                                        "type": "number"
                                    },
                                    "startTime": {
                                        "type": "number"
                                    },
                                    "workItemList": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "state": {
                                                    "type": "string"
                                                },
                                                "command": {
                                                    "type": "string"
                                                },
                                                "outputStr": {
                                                    "type": "string"
                                                },
                                                "endTime": {
                                                    "type": "number"
                                                },
                                                "startTime": {
                                                    "type": "number"
                                                },
                                                "timeTaken": {
                                                    "type": "number"
                                                }
                                            }
                                        }
                                    },
                                    "timeTaken": {
                                        "type": "number"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "addToInventory": {
                            "type": "boolean"
                        },
                        "instanceType": {
                            "type": "string"
                        },
                        "endTime": {
                            "type": "number"
                        },
                        "execTime": {
                            "type": "number"
                        },
                        "startTime": {
                            "type": "number"
                        },
                        "useState": {
                            "type": "string"
                        },
                        "configId": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "version": {
                            "type": "number"
                        },
                        "tenantId": {
                            "type": "string"
                        }
                    }
                },
                "systemWorkflow": {
                    "type": "object",
                    "properties": {
                        "_id": {
                            "type": "string"
                        },
                        "state": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string"
                        },
                        "lastupdateOn": {
                            "type": "number"
                        },
                        "imageId": {
                            "type": "string"
                        },
                        "currTaskIdx": {
                            "type": "number"
                        },
                        "addedOn": {
                            "type": "number"
                        },
                        "tasks": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "state": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    },
                                    "currWorkItemIdx": {
                                        "type": "number"
                                    },
                                    "taskSeqNo": {
                                        "type": "number"
                                    },
                                    "endTime": {
                                        "type": "number"
                                    },
                                    "startTime": {
                                        "type": "number"
                                    },
                                    "workItemList": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "state": {
                                                    "type": "string"
                                                },
                                                "command": {
                                                    "type": "string"
                                                },
                                                "outputStr": {
                                                    "type": "string"
                                                },
                                                "endTime": {
                                                    "type": "number"
                                                },
                                                "startTime": {
                                                    "type": "number"
                                                },
                                                "timeTaken": {
                                                    "type": "number"
                                                }
                                            }
                                        }
                                    },
                                    "timeTaken": {
                                        "type": "number"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "addToInventory": {
                            "type": "boolean"
                        },
                        "instanceType": {
                            "type": "string"
                        },
                        "endTime": {
                            "type": "number"
                        },
                        "execTime": {
                            "type": "number"
                        },
                        "startTime": {
                            "type": "number"
                        },
                        "useState": {
                            "type": "string"
                        },
                        "configId": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "version": {
                            "type": "number"
                        },
                        "tenantId": {
                            "type": "string"
                        }
                    }
                },
                "workflow": {
                    "type": "object",
                    "properties": {
                        "_id": {
                            "type": "string"
                        },
                        "state": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string"
                        },
                        "lastupdateOn": {
                            "type": "number"
                        },
                        "imageId": {
                            "type": "string"
                        },
                        "currTaskIdx": {
                            "type": "number"
                        },
                        "addedOn": {
                            "type": "number"
                        },
                        "tasks": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "state": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    },
                                    "currWorkItemIdx": {
                                        "type": "number"
                                    },
                                    "taskSeqNo": {
                                        "type": "number"
                                    },
                                    "endTime": {
                                        "type": "number"
                                    },
                                    "startTime": {
                                        "type": "number"
                                    },
                                    "workItemList": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "state": {
                                                    "type": "string"
                                                },
                                                "command": {
                                                    "type": "string"
                                                },
                                                "outputStr": {
                                                    "type": "string"
                                                },
                                                "endTime": {
                                                    "type": "number"
                                                },
                                                "startTime": {
                                                    "type": "number"
                                                },
                                                "timeTaken": {
                                                    "type": "number"
                                                }
                                            }
                                        }
                                    },
                                    "timeTaken": {
                                        "type": "number"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "addToInventory": {
                            "type": "boolean"
                        },
                        "instanceType": {
                            "type": "string"
                        },
                        "endTime": {
                            "type": "number"
                        },
                        "execTime": {
                            "type": "number"
                        },
                        "startTime": {
                            "type": "number"
                        },
                        "useState": {
                            "type": "string"
                        },
                        "configId": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "version": {
                            "type": "number"
                        },
                        "tenantId": {
                            "type": "string"
                        }
                    }
                },
                "runSummaryList": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "details": {
                                "type": "string"
                            },
                            "historyTaskInfo": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "workItemList": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "state": {
                                                    "type": "string"
                                                },
                                                "command": {
                                                    "type": "string"
                                                },
                                                "outputStr": {
                                                    "type": "string"
                                                },
                                                "endTime": {
                                                    "type": "number"
                                                },
                                                "startTime": {
                                                    "type": "number"
                                                },
                                                "timeTaken": {
                                                    "type": "number"
                                                }
                                            }
                                        }
                                    },
                                    "timeTaken": {
                                        "type": "number"
                                    },
                                    "addnDetails": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "key": {
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            },
                            "errorFlag": {
                                "type": "boolean"
                            },
                            "timestamp": {
                                "type": "number"
                            }
                        }
                    }
                },
                "workflowParameters": {
                    "type": "object",
                    "properties": {
                        "topOfStackSerialNumber": {
                            "type": "string"
                        },
                        "licenseLevel": {
                            "type": "string"
                        },
                        "licenseType": {
                            "type": "string"
                        },
                        "configList": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "configParameters": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "key": {
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "configId": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "dayZeroConfig": {
                    "type": "object",
                    "properties": {
                        "config": {
                            "type": "string"
                        }
                    }
                },
                "dayZeroConfigPreview": {
                    "type": "object",
                    "properties": {}
                },
                "version": {
                    "type": "number"
                },
                "tenantId": {
                    "type": "string"
                }
            }
        },
        "RegisterNetworkDeviceResult": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "object",
                    "properties": {
                        "macAddress": {
                            "type": "string"
                        },
                        "modelNumber": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "serialNumber": {
                            "type": "string"
                        },
                        "tenantId": {
                            "type": "string"
                        }
                    }
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "GlobalCredentialSubTypeResult": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "CommandRunnerDTO": {
            "type": "object",
            "properties": {
                "commands": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "deviceUuids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "timeout": {
                    "type": "integer"
                }
            }
        },
        "ClaimDeviceRequest": {
            "type": "object",
            "properties": {
                "configFileUrl": {
                    "type": "string"
                },
                "configId": {
                    "type": "string"
                },
                "deviceClaimList": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "configList": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "configId": {
                                            "type": "string"
                                        },
                                        "configParameters": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "key": {
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "deviceId": {
                                "type": "string"
                            },
                            "licenseLevel": {
                                "type": "string"
                            },
                            "licenseType": {
                                "type": "string"
                            },
                            "topOfStackSerialNumber": {
                                "type": "string"
                            }
                        }
                    }
                },
                "fileServiceId": {
                    "type": "string"
                },
                "imageId": {
                    "type": "string"
                },
                "imageUrl": {
                    "type": "string"
                },
                "populateInventory": {
                    "type": "boolean"
                },
                "projectId": {
                    "type": "string"
                },
                "workflowId": {
                    "type": "string"
                }
            }
        },
        "ClaimDeviceResponse": {
            "type": "object",
            "properties": {
                "jsonArrayResponse": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "jsonResponse": {
                    "type": "object",
                    "properties": {}
                },
                "message": {
                    "type": "string"
                },
                "statusCode": {
                    "type": "number"
                }
            }
        },
        "TemplateVersionRequestDTO": {
            "type": "object",
            "properties": {
                "comments": {
                    "type": "string"
                },
                "templateId": {
                    "type": "string"
                }
            }
        },
        "TaskDTOListResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "additionalStatusURL": {
                                "type": "string"
                            },
                            "data": {
                                "type": "string"
                            },
                            "endTime": {
                                "type": "string"
                            },
                            "errorCode": {
                                "type": "string"
                            },
                            "errorKey": {
                                "type": "string"
                            },
                            "failureReason": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "instanceTenantId": {
                                "type": "string"
                            },
                            "isError": {
                                "type": "boolean"
                            },
                            "lastUpdate": {
                                "type": "string"
                            },
                            "operationIdList": {
                                "type": "object"
                            },
                            "parentId": {
                                "type": "string"
                            },
                            "progress": {
                                "type": "string"
                            },
                            "rootId": {
                                "type": "string"
                            },
                            "serviceType": {
                                "type": "string"
                            },
                            "startTime": {
                                "type": "string"
                            },
                            "username": {
                                "type": "string"
                            },
                            "version": {
                                "type": "integer"
                            }
                        }
                    }
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "GetVirtualAccountListResponse": {
            "type": "array",
            "items": {
                "type": "string"
            }
        },
        "GetDeviceCountResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "number"
                }
            }
        },
        "TemplatePreviewRequestDTO": {
            "type": "object",
            "properties": {
                "params": {
                    "type": "object",
                    "properties": {}
                },
                "templateId": {
                    "type": "string"
                }
            }
        },
        "TemplatePreviewResponseDTO": {
            "type": "object",
            "properties": {
                "cliPreview": {
                    "type": "string"
                },
                "templateId": {
                    "type": "string"
                },
                "validationErrors": {
                    "type": "object"
                }
            }
        },
        "ModuleListResult": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "assemblyNumber": {
                                "type": "string"
                            },
                            "assemblyRevision": {
                                "type": "string"
                            },
                            "attributeInfo": {
                                "type": "object",
                                "properties": {}
                            },
                            "containmentEntity": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "entityPhysicalIndex": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "isFieldReplaceable": {
                                "type": "string",
                                "enum": [
                                    "UNKNOWN",
                                    "TRUE",
                                    "FALSE",
                                    "NOT_APPLICABLE"
                                ]
                            },
                            "isReportingAlarmsAllowed": {
                                "type": "string",
                                "enum": [
                                    "UNKNOWN",
                                    "TRUE",
                                    "FALSE",
                                    "NOT_APPLICABLE"
                                ]
                            },
                            "manufacturer": {
                                "type": "string"
                            },
                            "moduleIndex": {
                                "type": "integer"
                            },
                            "name": {
                                "type": "string"
                            },
                            "operationalStateCode": {
                                "type": "string"
                            },
                            "partNumber": {
                                "type": "string"
                            },
                            "serialNumber": {
                                "type": "string"
                            },
                            "vendorEquipmentType": {
                                "type": "string"
                            }
                        }
                    }
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "WirelessInfoResult": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "object",
                    "properties": {
                        "adminEnabledPorts": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "apGroupName": {
                            "type": "string"
                        },
                        "deviceId": {
                            "type": "string"
                        },
                        "ethMacAddress": {
                            "type": "string"
                        },
                        "flexGroupName": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        },
                        "instanceTenantId": {
                            "type": "string"
                        },
                        "instanceUuid": {
                            "type": "string"
                        },
                        "lagModeEnabled": {
                            "type": "boolean"
                        },
                        "netconfEnabled": {
                            "type": "boolean"
                        },
                        "wirelessLicenseInfo": {
                            "type": "string",
                            "enum": [
                                "ADVANTAGE",
                                "ESSENTIALS"
                            ]
                        },
                        "wirelessPackageInstalled": {
                            "type": "boolean"
                        }
                    }
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "NFVProvisioningDetailRequest": {
            "type": "object",
            "properties": {
                "device_ip": {
                    "type": "string"
                }
            }
        },
        "NFVProvisioningDetailResponse": {
            "type": "object",
            "properties": {
                "executionId": {
                    "type": "string"
                },
                "executionStatusUrl": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "GlobalCredentialListResult": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "comments": {
                                "type": "string"
                            },
                            "credentialType": {
                                "type": "string",
                                "enum": [
                                    "GLOBAL",
                                    "APP"
                                ]
                            },
                            "description": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "instanceTenantId": {
                                "type": "string"
                            },
                            "instanceUuid": {
                                "type": "string"
                            }
                        }
                    }
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "PathResponseResult": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "object",
                    "properties": {
                        "detailedStatus": {
                            "type": "object",
                            "properties": {
                                "aclTraceCalculation": {
                                    "type": "string"
                                },
                                "aclTraceCalculationFailureReason": {
                                    "type": "string"
                                }
                            }
                        },
                        "lastUpdate": {
                            "type": "string"
                        },
                        "networkElements": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "accuracyList": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "percent": {
                                                    "type": "integer"
                                                },
                                                "reason": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "detailedStatus": {
                                        "type": "object",
                                        "properties": {
                                            "aclTraceCalculation": {
                                                "type": "string"
                                            },
                                            "aclTraceCalculationFailureReason": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "deviceStatistics": {
                                        "type": "object",
                                        "properties": {
                                            "cpuStatistics": {
                                                "type": "object",
                                                "properties": {
                                                    "fiveMinUsageInPercentage": {
                                                        "type": "number"
                                                    },
                                                    "fiveSecsUsageInPercentage": {
                                                        "type": "number"
                                                    },
                                                    "oneMinUsageInPercentage": {
                                                        "type": "number"
                                                    },
                                                    "refreshedAt": {
                                                        "type": "integer"
                                                    }
                                                }
                                            },
                                            "memoryStatistics": {
                                                "type": "object",
                                                "properties": {
                                                    "memoryUsage": {
                                                        "type": "integer"
                                                    },
                                                    "refreshedAt": {
                                                        "type": "integer"
                                                    },
                                                    "totalMemory": {
                                                        "type": "integer"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "deviceStatsCollection": {
                                        "type": "string"
                                    },
                                    "deviceStatsCollectionFailureReason": {
                                        "type": "string"
                                    },
                                    "egressPhysicalInterface": {
                                        "type": "object",
                                        "properties": {
                                            "aclAnalysis": {
                                                "type": "object",
                                                "properties": {
                                                    "aclName": {
                                                        "type": "string"
                                                    },
                                                    "matchingAces": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "ace": {
                                                                    "type": "string"
                                                                },
                                                                "matchingPorts": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "ports": {
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "destPorts": {
                                                                                            "type": "array",
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "sourcePorts": {
                                                                                            "type": "array",
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "protocol": {
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "result": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "result": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "interfaceStatistics": {
                                                "type": "object",
                                                "properties": {
                                                    "adminStatus": {
                                                        "type": "string"
                                                    },
                                                    "inputPackets": {
                                                        "type": "integer"
                                                    },
                                                    "inputQueueCount": {
                                                        "type": "integer"
                                                    },
                                                    "inputQueueDrops": {
                                                        "type": "integer"
                                                    },
                                                    "inputQueueFlushes": {
                                                        "type": "integer"
                                                    },
                                                    "inputQueueMaxDepth": {
                                                        "type": "integer"
                                                    },
                                                    "inputRatebps": {
                                                        "type": "integer"
                                                    },
                                                    "operationalStatus": {
                                                        "type": "string"
                                                    },
                                                    "outputDrop": {
                                                        "type": "integer"
                                                    },
                                                    "outputPackets": {
                                                        "type": "integer"
                                                    },
                                                    "outputQueueCount": {
                                                        "type": "integer"
                                                    },
                                                    "outputQueueDepth": {
                                                        "type": "integer"
                                                    },
                                                    "outputRatebps": {
                                                        "type": "integer"
                                                    },
                                                    "refreshedAt": {
                                                        "type": "integer"
                                                    }
                                                }
                                            },
                                            "interfaceStatsCollection": {
                                                "type": "string"
                                            },
                                            "interfaceStatsCollectionFailureReason": {
                                                "type": "string"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "pathOverlayInfo": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "controlPlane": {
                                                            "type": "string"
                                                        },
                                                        "dataPacketEncapsulation": {
                                                            "type": "string"
                                                        },
                                                        "destIp": {
                                                            "type": "string"
                                                        },
                                                        "destPort": {
                                                            "type": "string"
                                                        },
                                                        "protocol": {
                                                            "type": "string"
                                                        },
                                                        "sourceIp": {
                                                            "type": "string"
                                                        },
                                                        "sourcePort": {
                                                            "type": "string"
                                                        },
                                                        "vxlanInfo": {
                                                            "type": "object",
                                                            "properties": {
                                                                "dscp": {
                                                                    "type": "string"
                                                                },
                                                                "vnid": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "qosStatistics": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "classMapName": {
                                                            "type": "string"
                                                        },
                                                        "dropRate": {
                                                            "type": "integer"
                                                        },
                                                        "numBytes": {
                                                            "type": "integer"
                                                        },
                                                        "numPackets": {
                                                            "type": "integer"
                                                        },
                                                        "offeredRate": {
                                                            "type": "integer"
                                                        },
                                                        "queueBandwidthbps": {
                                                            "type": "string"
                                                        },
                                                        "queueDepth": {
                                                            "type": "integer"
                                                        },
                                                        "queueNoBufferDrops": {
                                                            "type": "integer"
                                                        },
                                                        "queueTotalDrops": {
                                                            "type": "integer"
                                                        },
                                                        "refreshedAt": {
                                                            "type": "integer"
                                                        }
                                                    }
                                                }
                                            },
                                            "qosStatsCollection": {
                                                "type": "string"
                                            },
                                            "qosStatsCollectionFailureReason": {
                                                "type": "string"
                                            },
                                            "usedVlan": {
                                                "type": "string"
                                            },
                                            "vrfName": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "egressVirtualInterface": {
                                        "type": "object",
                                        "properties": {
                                            "aclAnalysis": {
                                                "type": "object",
                                                "properties": {
                                                    "aclName": {
                                                        "type": "string"
                                                    },
                                                    "matchingAces": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "ace": {
                                                                    "type": "string"
                                                                },
                                                                "matchingPorts": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "ports": {
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "destPorts": {
                                                                                            "type": "array",
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "sourcePorts": {
                                                                                            "type": "array",
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "protocol": {
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "result": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "result": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "interfaceStatistics": {
                                                "type": "object",
                                                "properties": {
                                                    "adminStatus": {
                                                        "type": "string"
                                                    },
                                                    "inputPackets": {
                                                        "type": "integer"
                                                    },
                                                    "inputQueueCount": {
                                                        "type": "integer"
                                                    },
                                                    "inputQueueDrops": {
                                                        "type": "integer"
                                                    },
                                                    "inputQueueFlushes": {
                                                        "type": "integer"
                                                    },
                                                    "inputQueueMaxDepth": {
                                                        "type": "integer"
                                                    },
                                                    "inputRatebps": {
                                                        "type": "integer"
                                                    },
                                                    "operationalStatus": {
                                                        "type": "string"
                                                    },
                                                    "outputDrop": {
                                                        "type": "integer"
                                                    },
                                                    "outputPackets": {
                                                        "type": "integer"
                                                    },
                                                    "outputQueueCount": {
                                                        "type": "integer"
                                                    },
                                                    "outputQueueDepth": {
                                                        "type": "integer"
                                                    },
                                                    "outputRatebps": {
                                                        "type": "integer"
                                                    },
                                                    "refreshedAt": {
                                                        "type": "integer"
                                                    }
                                                }
                                            },
                                            "interfaceStatsCollection": {
                                                "type": "string"
                                            },
                                            "interfaceStatsCollectionFailureReason": {
                                                "type": "string"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "pathOverlayInfo": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "controlPlane": {
                                                            "type": "string"
                                                        },
                                                        "dataPacketEncapsulation": {
                                                            "type": "string"
                                                        },
                                                        "destIp": {
                                                            "type": "string"
                                                        },
                                                        "destPort": {
                                                            "type": "string"
                                                        },
                                                        "protocol": {
                                                            "type": "string"
                                                        },
                                                        "sourceIp": {
                                                            "type": "string"
                                                        },
                                                        "sourcePort": {
                                                            "type": "string"
                                                        },
                                                        "vxlanInfo": {
                                                            "type": "object",
                                                            "properties": {
                                                                "dscp": {
                                                                    "type": "string"
                                                                },
                                                                "vnid": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "qosStatistics": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "classMapName": {
                                                            "type": "string"
                                                        },
                                                        "dropRate": {
                                                            "type": "integer"
                                                        },
                                                        "numBytes": {
                                                            "type": "integer"
                                                        },
                                                        "numPackets": {
                                                            "type": "integer"
                                                        },
                                                        "offeredRate": {
                                                            "type": "integer"
                                                        },
                                                        "queueBandwidthbps": {
                                                            "type": "string"
                                                        },
                                                        "queueDepth": {
                                                            "type": "integer"
                                                        },
                                                        "queueNoBufferDrops": {
                                                            "type": "integer"
                                                        },
                                                        "queueTotalDrops": {
                                                            "type": "integer"
                                                        },
                                                        "refreshedAt": {
                                                            "type": "integer"
                                                        }
                                                    }
                                                }
                                            },
                                            "qosStatsCollection": {
                                                "type": "string"
                                            },
                                            "qosStatsCollectionFailureReason": {
                                                "type": "string"
                                            },
                                            "usedVlan": {
                                                "type": "string"
                                            },
                                            "vrfName": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "flexConnect": {
                                        "type": "object",
                                        "properties": {
                                            "authentication": {
                                                "type": "string",
                                                "enum": [
                                                    "LOCAL",
                                                    "CENTRAL"
                                                ]
                                            },
                                            "dataSwitching": {
                                                "type": "string",
                                                "enum": [
                                                    "LOCAL",
                                                    "CENTRAL"
                                                ]
                                            },
                                            "egressAclAnalysis": {
                                                "type": "object",
                                                "properties": {
                                                    "aclName": {
                                                        "type": "string"
                                                    },
                                                    "matchingAces": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "ace": {
                                                                    "type": "string"
                                                                },
                                                                "matchingPorts": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "ports": {
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "destPorts": {
                                                                                            "type": "array",
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "sourcePorts": {
                                                                                            "type": "array",
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "protocol": {
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "result": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "result": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "ingressAclAnalysis": {
                                                "type": "object",
                                                "properties": {
                                                    "aclName": {
                                                        "type": "string"
                                                    },
                                                    "matchingAces": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "ace": {
                                                                    "type": "string"
                                                                },
                                                                "matchingPorts": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "ports": {
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "destPorts": {
                                                                                            "type": "array",
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "sourcePorts": {
                                                                                            "type": "array",
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "protocol": {
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "result": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "result": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "wirelessLanControllerId": {
                                                "type": "string"
                                            },
                                            "wirelessLanControllerName": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "id": {
                                        "type": "string"
                                    },
                                    "ingressPhysicalInterface": {
                                        "type": "object",
                                        "properties": {
                                            "aclAnalysis": {
                                                "type": "object",
                                                "properties": {
                                                    "aclName": {
                                                        "type": "string"
                                                    },
                                                    "matchingAces": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "ace": {
                                                                    "type": "string"
                                                                },
                                                                "matchingPorts": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "ports": {
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "destPorts": {
                                                                                            "type": "array",
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "sourcePorts": {
                                                                                            "type": "array",
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "protocol": {
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "result": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "result": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "interfaceStatistics": {
                                                "type": "object",
                                                "properties": {
                                                    "adminStatus": {
                                                        "type": "string"
                                                    },
                                                    "inputPackets": {
                                                        "type": "integer"
                                                    },
                                                    "inputQueueCount": {
                                                        "type": "integer"
                                                    },
                                                    "inputQueueDrops": {
                                                        "type": "integer"
                                                    },
                                                    "inputQueueFlushes": {
                                                        "type": "integer"
                                                    },
                                                    "inputQueueMaxDepth": {
                                                        "type": "integer"
                                                    },
                                                    "inputRatebps": {
                                                        "type": "integer"
                                                    },
                                                    "operationalStatus": {
                                                        "type": "string"
                                                    },
                                                    "outputDrop": {
                                                        "type": "integer"
                                                    },
                                                    "outputPackets": {
                                                        "type": "integer"
                                                    },
                                                    "outputQueueCount": {
                                                        "type": "integer"
                                                    },
                                                    "outputQueueDepth": {
                                                        "type": "integer"
                                                    },
                                                    "outputRatebps": {
                                                        "type": "integer"
                                                    },
                                                    "refreshedAt": {
                                                        "type": "integer"
                                                    }
                                                }
                                            },
                                            "interfaceStatsCollection": {
                                                "type": "string"
                                            },
                                            "interfaceStatsCollectionFailureReason": {
                                                "type": "string"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "pathOverlayInfo": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "controlPlane": {
                                                            "type": "string"
                                                        },
                                                        "dataPacketEncapsulation": {
                                                            "type": "string"
                                                        },
                                                        "destIp": {
                                                            "type": "string"
                                                        },
                                                        "destPort": {
                                                            "type": "string"
                                                        },
                                                        "protocol": {
                                                            "type": "string"
                                                        },
                                                        "sourceIp": {
                                                            "type": "string"
                                                        },
                                                        "sourcePort": {
                                                            "type": "string"
                                                        },
                                                        "vxlanInfo": {
                                                            "type": "object",
                                                            "properties": {
                                                                "dscp": {
                                                                    "type": "string"
                                                                },
                                                                "vnid": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "qosStatistics": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "classMapName": {
                                                            "type": "string"
                                                        },
                                                        "dropRate": {
                                                            "type": "integer"
                                                        },
                                                        "numBytes": {
                                                            "type": "integer"
                                                        },
                                                        "numPackets": {
                                                            "type": "integer"
                                                        },
                                                        "offeredRate": {
                                                            "type": "integer"
                                                        },
                                                        "queueBandwidthbps": {
                                                            "type": "string"
                                                        },
                                                        "queueDepth": {
                                                            "type": "integer"
                                                        },
                                                        "queueNoBufferDrops": {
                                                            "type": "integer"
                                                        },
                                                        "queueTotalDrops": {
                                                            "type": "integer"
                                                        },
                                                        "refreshedAt": {
                                                            "type": "integer"
                                                        }
                                                    }
                                                }
                                            },
                                            "qosStatsCollection": {
                                                "type": "string"
                                            },
                                            "qosStatsCollectionFailureReason": {
                                                "type": "string"
                                            },
                                            "usedVlan": {
                                                "type": "string"
                                            },
                                            "vrfName": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "ingressVirtualInterface": {
                                        "type": "object",
                                        "properties": {
                                            "aclAnalysis": {
                                                "type": "object",
                                                "properties": {
                                                    "aclName": {
                                                        "type": "string"
                                                    },
                                                    "matchingAces": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "ace": {
                                                                    "type": "string"
                                                                },
                                                                "matchingPorts": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "ports": {
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "destPorts": {
                                                                                            "type": "array",
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "sourcePorts": {
                                                                                            "type": "array",
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "protocol": {
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "result": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "result": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "interfaceStatistics": {
                                                "type": "object",
                                                "properties": {
                                                    "adminStatus": {
                                                        "type": "string"
                                                    },
                                                    "inputPackets": {
                                                        "type": "integer"
                                                    },
                                                    "inputQueueCount": {
                                                        "type": "integer"
                                                    },
                                                    "inputQueueDrops": {
                                                        "type": "integer"
                                                    },
                                                    "inputQueueFlushes": {
                                                        "type": "integer"
                                                    },
                                                    "inputQueueMaxDepth": {
                                                        "type": "integer"
                                                    },
                                                    "inputRatebps": {
                                                        "type": "integer"
                                                    },
                                                    "operationalStatus": {
                                                        "type": "string"
                                                    },
                                                    "outputDrop": {
                                                        "type": "integer"
                                                    },
                                                    "outputPackets": {
                                                        "type": "integer"
                                                    },
                                                    "outputQueueCount": {
                                                        "type": "integer"
                                                    },
                                                    "outputQueueDepth": {
                                                        "type": "integer"
                                                    },
                                                    "outputRatebps": {
                                                        "type": "integer"
                                                    },
                                                    "refreshedAt": {
                                                        "type": "integer"
                                                    }
                                                }
                                            },
                                            "interfaceStatsCollection": {
                                                "type": "string"
                                            },
                                            "interfaceStatsCollectionFailureReason": {
                                                "type": "string"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "pathOverlayInfo": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "controlPlane": {
                                                            "type": "string"
                                                        },
                                                        "dataPacketEncapsulation": {
                                                            "type": "string"
                                                        },
                                                        "destIp": {
                                                            "type": "string"
                                                        },
                                                        "destPort": {
                                                            "type": "string"
                                                        },
                                                        "protocol": {
                                                            "type": "string"
                                                        },
                                                        "sourceIp": {
                                                            "type": "string"
                                                        },
                                                        "sourcePort": {
                                                            "type": "string"
                                                        },
                                                        "vxlanInfo": {
                                                            "type": "object",
                                                            "properties": {
                                                                "dscp": {
                                                                    "type": "string"
                                                                },
                                                                "vnid": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "qosStatistics": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "classMapName": {
                                                            "type": "string"
                                                        },
                                                        "dropRate": {
                                                            "type": "integer"
                                                        },
                                                        "numBytes": {
                                                            "type": "integer"
                                                        },
                                                        "numPackets": {
                                                            "type": "integer"
                                                        },
                                                        "offeredRate": {
                                                            "type": "integer"
                                                        },
                                                        "queueBandwidthbps": {
                                                            "type": "string"
                                                        },
                                                        "queueDepth": {
                                                            "type": "integer"
                                                        },
                                                        "queueNoBufferDrops": {
                                                            "type": "integer"
                                                        },
                                                        "queueTotalDrops": {
                                                            "type": "integer"
                                                        },
                                                        "refreshedAt": {
                                                            "type": "integer"
                                                        }
                                                    }
                                                }
                                            },
                                            "qosStatsCollection": {
                                                "type": "string"
                                            },
                                            "qosStatsCollectionFailureReason": {
                                                "type": "string"
                                            },
                                            "usedVlan": {
                                                "type": "string"
                                            },
                                            "vrfName": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "ip": {
                                        "type": "string"
                                    },
                                    "linkInformationSource": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "perfMonCollection": {
                                        "type": "string"
                                    },
                                    "perfMonCollectionFailureReason": {
                                        "type": "string"
                                    },
                                    "perfMonStatistics": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "byteRate": {
                                                    "type": "integer"
                                                },
                                                "destIpAddress": {
                                                    "type": "string"
                                                },
                                                "destPort": {
                                                    "type": "string"
                                                },
                                                "inputInterface": {
                                                    "type": "string"
                                                },
                                                "ipv4DSCP": {
                                                    "type": "string"
                                                },
                                                "ipv4TTL": {
                                                    "type": "integer"
                                                },
                                                "outputInterface": {
                                                    "type": "string"
                                                },
                                                "packetBytes": {
                                                    "type": "integer"
                                                },
                                                "packetCount": {
                                                    "type": "integer"
                                                },
                                                "packetLoss": {
                                                    "type": "integer"
                                                },
                                                "packetLossPercentage": {
                                                    "type": "number"
                                                },
                                                "protocol": {
                                                    "type": "string"
                                                },
                                                "refreshedAt": {
                                                    "type": "integer"
                                                },
                                                "rtpJitterMax": {
                                                    "type": "integer"
                                                },
                                                "rtpJitterMean": {
                                                    "type": "integer"
                                                },
                                                "rtpJitterMin": {
                                                    "type": "integer"
                                                },
                                                "sourceIpAddress": {
                                                    "type": "string"
                                                },
                                                "sourcePort": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "role": {
                                        "type": "string"
                                    },
                                    "ssid": {
                                        "type": "string"
                                    },
                                    "tunnels": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "type": {
                                        "type": "string"
                                    },
                                    "wlanId": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "networkElementsInfo": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "accuracyList": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "percent": {
                                                    "type": "integer"
                                                },
                                                "reason": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "detailedStatus": {
                                        "type": "object",
                                        "properties": {
                                            "aclTraceCalculation": {
                                                "type": "string"
                                            },
                                            "aclTraceCalculationFailureReason": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "deviceStatistics": {
                                        "type": "object",
                                        "properties": {
                                            "cpuStatistics": {
                                                "type": "object",
                                                "properties": {
                                                    "fiveMinUsageInPercentage": {
                                                        "type": "number"
                                                    },
                                                    "fiveSecsUsageInPercentage": {
                                                        "type": "number"
                                                    },
                                                    "oneMinUsageInPercentage": {
                                                        "type": "number"
                                                    },
                                                    "refreshedAt": {
                                                        "type": "integer"
                                                    }
                                                }
                                            },
                                            "memoryStatistics": {
                                                "type": "object",
                                                "properties": {
                                                    "memoryUsage": {
                                                        "type": "integer"
                                                    },
                                                    "refreshedAt": {
                                                        "type": "integer"
                                                    },
                                                    "totalMemory": {
                                                        "type": "integer"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "deviceStatsCollection": {
                                        "type": "string"
                                    },
                                    "deviceStatsCollectionFailureReason": {
                                        "type": "string"
                                    },
                                    "egressInterface": {
                                        "type": "object",
                                        "properties": {
                                            "physicalInterface": {
                                                "type": "object",
                                                "properties": {
                                                    "aclAnalysis": {
                                                        "type": "object",
                                                        "properties": {
                                                            "aclName": {
                                                                "type": "string"
                                                            },
                                                            "matchingAces": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "ace": {
                                                                            "type": "string"
                                                                        },
                                                                        "matchingPorts": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "ports": {
                                                                                        "type": "array",
                                                                                        "items": {
                                                                                            "type": "object",
                                                                                            "properties": {
                                                                                                "destPorts": {
                                                                                                    "type": "array",
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                },
                                                                                                "sourcePorts": {
                                                                                                    "type": "array",
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "protocol": {
                                                                                        "type": "string"
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        "result": {
                                                                            "type": "string"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "result": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "id": {
                                                        "type": "string"
                                                    },
                                                    "interfaceStatistics": {
                                                        "type": "object",
                                                        "properties": {
                                                            "adminStatus": {
                                                                "type": "string"
                                                            },
                                                            "inputPackets": {
                                                                "type": "integer"
                                                            },
                                                            "inputQueueCount": {
                                                                "type": "integer"
                                                            },
                                                            "inputQueueDrops": {
                                                                "type": "integer"
                                                            },
                                                            "inputQueueFlushes": {
                                                                "type": "integer"
                                                            },
                                                            "inputQueueMaxDepth": {
                                                                "type": "integer"
                                                            },
                                                            "inputRatebps": {
                                                                "type": "integer"
                                                            },
                                                            "operationalStatus": {
                                                                "type": "string"
                                                            },
                                                            "outputDrop": {
                                                                "type": "integer"
                                                            },
                                                            "outputPackets": {
                                                                "type": "integer"
                                                            },
                                                            "outputQueueCount": {
                                                                "type": "integer"
                                                            },
                                                            "outputQueueDepth": {
                                                                "type": "integer"
                                                            },
                                                            "outputRatebps": {
                                                                "type": "integer"
                                                            },
                                                            "refreshedAt": {
                                                                "type": "integer"
                                                            }
                                                        }
                                                    },
                                                    "interfaceStatsCollection": {
                                                        "type": "string"
                                                    },
                                                    "interfaceStatsCollectionFailureReason": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "pathOverlayInfo": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "controlPlane": {
                                                                    "type": "string"
                                                                },
                                                                "dataPacketEncapsulation": {
                                                                    "type": "string"
                                                                },
                                                                "destIp": {
                                                                    "type": "string"
                                                                },
                                                                "destPort": {
                                                                    "type": "string"
                                                                },
                                                                "protocol": {
                                                                    "type": "string"
                                                                },
                                                                "sourceIp": {
                                                                    "type": "string"
                                                                },
                                                                "sourcePort": {
                                                                    "type": "string"
                                                                },
                                                                "vxlanInfo": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "dscp": {
                                                                            "type": "string"
                                                                        },
                                                                        "vnid": {
                                                                            "type": "string"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "qosStatistics": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "classMapName": {
                                                                    "type": "string"
                                                                },
                                                                "dropRate": {
                                                                    "type": "integer"
                                                                },
                                                                "numBytes": {
                                                                    "type": "integer"
                                                                },
                                                                "numPackets": {
                                                                    "type": "integer"
                                                                },
                                                                "offeredRate": {
                                                                    "type": "integer"
                                                                },
                                                                "queueBandwidthbps": {
                                                                    "type": "string"
                                                                },
                                                                "queueDepth": {
                                                                    "type": "integer"
                                                                },
                                                                "queueNoBufferDrops": {
                                                                    "type": "integer"
                                                                },
                                                                "queueTotalDrops": {
                                                                    "type": "integer"
                                                                },
                                                                "refreshedAt": {
                                                                    "type": "integer"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "qosStatsCollection": {
                                                        "type": "string"
                                                    },
                                                    "qosStatsCollectionFailureReason": {
                                                        "type": "string"
                                                    },
                                                    "usedVlan": {
                                                        "type": "string"
                                                    },
                                                    "vrfName": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "virtualInterface": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "aclAnalysis": {
                                                            "type": "object",
                                                            "properties": {
                                                                "aclName": {
                                                                    "type": "string"
                                                                },
                                                                "matchingAces": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "ace": {
                                                                                "type": "string"
                                                                            },
                                                                            "matchingPorts": {
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "ports": {
                                                                                            "type": "array",
                                                                                            "items": {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "destPorts": {
                                                                                                        "type": "array",
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "sourcePorts": {
                                                                                                        "type": "array",
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "protocol": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "result": {
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "result": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        },
                                                        "id": {
                                                            "type": "string"
                                                        },
                                                        "interfaceStatistics": {
                                                            "type": "object",
                                                            "properties": {
                                                                "adminStatus": {
                                                                    "type": "string"
                                                                },
                                                                "inputPackets": {
                                                                    "type": "integer"
                                                                },
                                                                "inputQueueCount": {
                                                                    "type": "integer"
                                                                },
                                                                "inputQueueDrops": {
                                                                    "type": "integer"
                                                                },
                                                                "inputQueueFlushes": {
                                                                    "type": "integer"
                                                                },
                                                                "inputQueueMaxDepth": {
                                                                    "type": "integer"
                                                                },
                                                                "inputRatebps": {
                                                                    "type": "integer"
                                                                },
                                                                "operationalStatus": {
                                                                    "type": "string"
                                                                },
                                                                "outputDrop": {
                                                                    "type": "integer"
                                                                },
                                                                "outputPackets": {
                                                                    "type": "integer"
                                                                },
                                                                "outputQueueCount": {
                                                                    "type": "integer"
                                                                },
                                                                "outputQueueDepth": {
                                                                    "type": "integer"
                                                                },
                                                                "outputRatebps": {
                                                                    "type": "integer"
                                                                },
                                                                "refreshedAt": {
                                                                    "type": "integer"
                                                                }
                                                            }
                                                        },
                                                        "interfaceStatsCollection": {
                                                            "type": "string"
                                                        },
                                                        "interfaceStatsCollectionFailureReason": {
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "pathOverlayInfo": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "controlPlane": {
                                                                        "type": "string"
                                                                    },
                                                                    "dataPacketEncapsulation": {
                                                                        "type": "string"
                                                                    },
                                                                    "destIp": {
                                                                        "type": "string"
                                                                    },
                                                                    "destPort": {
                                                                        "type": "string"
                                                                    },
                                                                    "protocol": {
                                                                        "type": "string"
                                                                    },
                                                                    "sourceIp": {
                                                                        "type": "string"
                                                                    },
                                                                    "sourcePort": {
                                                                        "type": "string"
                                                                    },
                                                                    "vxlanInfo": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "dscp": {
                                                                                "type": "string"
                                                                            },
                                                                            "vnid": {
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "qosStatistics": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "classMapName": {
                                                                        "type": "string"
                                                                    },
                                                                    "dropRate": {
                                                                        "type": "integer"
                                                                    },
                                                                    "numBytes": {
                                                                        "type": "integer"
                                                                    },
                                                                    "numPackets": {
                                                                        "type": "integer"
                                                                    },
                                                                    "offeredRate": {
                                                                        "type": "integer"
                                                                    },
                                                                    "queueBandwidthbps": {
                                                                        "type": "string"
                                                                    },
                                                                    "queueDepth": {
                                                                        "type": "integer"
                                                                    },
                                                                    "queueNoBufferDrops": {
                                                                        "type": "integer"
                                                                    },
                                                                    "queueTotalDrops": {
                                                                        "type": "integer"
                                                                    },
                                                                    "refreshedAt": {
                                                                        "type": "integer"
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "qosStatsCollection": {
                                                            "type": "string"
                                                        },
                                                        "qosStatsCollectionFailureReason": {
                                                            "type": "string"
                                                        },
                                                        "usedVlan": {
                                                            "type": "string"
                                                        },
                                                        "vrfName": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "flexConnect": {
                                        "type": "object",
                                        "properties": {
                                            "authentication": {
                                                "type": "string",
                                                "enum": [
                                                    "LOCAL",
                                                    "CENTRAL"
                                                ]
                                            },
                                            "dataSwitching": {
                                                "type": "string",
                                                "enum": [
                                                    "LOCAL",
                                                    "CENTRAL"
                                                ]
                                            },
                                            "egressAclAnalysis": {
                                                "type": "object",
                                                "properties": {
                                                    "aclName": {
                                                        "type": "string"
                                                    },
                                                    "matchingAces": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "ace": {
                                                                    "type": "string"
                                                                },
                                                                "matchingPorts": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "ports": {
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "destPorts": {
                                                                                            "type": "array",
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "sourcePorts": {
                                                                                            "type": "array",
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "protocol": {
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "result": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "result": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "ingressAclAnalysis": {
                                                "type": "object",
                                                "properties": {
                                                    "aclName": {
                                                        "type": "string"
                                                    },
                                                    "matchingAces": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "ace": {
                                                                    "type": "string"
                                                                },
                                                                "matchingPorts": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "ports": {
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "destPorts": {
                                                                                            "type": "array",
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "sourcePorts": {
                                                                                            "type": "array",
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "protocol": {
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "result": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "result": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "wirelessLanControllerId": {
                                                "type": "string"
                                            },
                                            "wirelessLanControllerName": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "id": {
                                        "type": "string"
                                    },
                                    "ingressInterface": {
                                        "type": "object",
                                        "properties": {
                                            "physicalInterface": {
                                                "type": "object",
                                                "properties": {
                                                    "aclAnalysis": {
                                                        "type": "object",
                                                        "properties": {
                                                            "aclName": {
                                                                "type": "string"
                                                            },
                                                            "matchingAces": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "ace": {
                                                                            "type": "string"
                                                                        },
                                                                        "matchingPorts": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "ports": {
                                                                                        "type": "array",
                                                                                        "items": {
                                                                                            "type": "object",
                                                                                            "properties": {
                                                                                                "destPorts": {
                                                                                                    "type": "array",
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                },
                                                                                                "sourcePorts": {
                                                                                                    "type": "array",
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "protocol": {
                                                                                        "type": "string"
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        "result": {
                                                                            "type": "string"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "result": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "id": {
                                                        "type": "string"
                                                    },
                                                    "interfaceStatistics": {
                                                        "type": "object",
                                                        "properties": {
                                                            "adminStatus": {
                                                                "type": "string"
                                                            },
                                                            "inputPackets": {
                                                                "type": "integer"
                                                            },
                                                            "inputQueueCount": {
                                                                "type": "integer"
                                                            },
                                                            "inputQueueDrops": {
                                                                "type": "integer"
                                                            },
                                                            "inputQueueFlushes": {
                                                                "type": "integer"
                                                            },
                                                            "inputQueueMaxDepth": {
                                                                "type": "integer"
                                                            },
                                                            "inputRatebps": {
                                                                "type": "integer"
                                                            },
                                                            "operationalStatus": {
                                                                "type": "string"
                                                            },
                                                            "outputDrop": {
                                                                "type": "integer"
                                                            },
                                                            "outputPackets": {
                                                                "type": "integer"
                                                            },
                                                            "outputQueueCount": {
                                                                "type": "integer"
                                                            },
                                                            "outputQueueDepth": {
                                                                "type": "integer"
                                                            },
                                                            "outputRatebps": {
                                                                "type": "integer"
                                                            },
                                                            "refreshedAt": {
                                                                "type": "integer"
                                                            }
                                                        }
                                                    },
                                                    "interfaceStatsCollection": {
                                                        "type": "string"
                                                    },
                                                    "interfaceStatsCollectionFailureReason": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "pathOverlayInfo": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "controlPlane": {
                                                                    "type": "string"
                                                                },
                                                                "dataPacketEncapsulation": {
                                                                    "type": "string"
                                                                },
                                                                "destIp": {
                                                                    "type": "string"
                                                                },
                                                                "destPort": {
                                                                    "type": "string"
                                                                },
                                                                "protocol": {
                                                                    "type": "string"
                                                                },
                                                                "sourceIp": {
                                                                    "type": "string"
                                                                },
                                                                "sourcePort": {
                                                                    "type": "string"
                                                                },
                                                                "vxlanInfo": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "dscp": {
                                                                            "type": "string"
                                                                        },
                                                                        "vnid": {
                                                                            "type": "string"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "qosStatistics": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "classMapName": {
                                                                    "type": "string"
                                                                },
                                                                "dropRate": {
                                                                    "type": "integer"
                                                                },
                                                                "numBytes": {
                                                                    "type": "integer"
                                                                },
                                                                "numPackets": {
                                                                    "type": "integer"
                                                                },
                                                                "offeredRate": {
                                                                    "type": "integer"
                                                                },
                                                                "queueBandwidthbps": {
                                                                    "type": "string"
                                                                },
                                                                "queueDepth": {
                                                                    "type": "integer"
                                                                },
                                                                "queueNoBufferDrops": {
                                                                    "type": "integer"
                                                                },
                                                                "queueTotalDrops": {
                                                                    "type": "integer"
                                                                },
                                                                "refreshedAt": {
                                                                    "type": "integer"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "qosStatsCollection": {
                                                        "type": "string"
                                                    },
                                                    "qosStatsCollectionFailureReason": {
                                                        "type": "string"
                                                    },
                                                    "usedVlan": {
                                                        "type": "string"
                                                    },
                                                    "vrfName": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "virtualInterface": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "aclAnalysis": {
                                                            "type": "object",
                                                            "properties": {
                                                                "aclName": {
                                                                    "type": "string"
                                                                },
                                                                "matchingAces": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "ace": {
                                                                                "type": "string"
                                                                            },
                                                                            "matchingPorts": {
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "ports": {
                                                                                            "type": "array",
                                                                                            "items": {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "destPorts": {
                                                                                                        "type": "array",
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "sourcePorts": {
                                                                                                        "type": "array",
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "protocol": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "result": {
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "result": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        },
                                                        "id": {
                                                            "type": "string"
                                                        },
                                                        "interfaceStatistics": {
                                                            "type": "object",
                                                            "properties": {
                                                                "adminStatus": {
                                                                    "type": "string"
                                                                },
                                                                "inputPackets": {
                                                                    "type": "integer"
                                                                },
                                                                "inputQueueCount": {
                                                                    "type": "integer"
                                                                },
                                                                "inputQueueDrops": {
                                                                    "type": "integer"
                                                                },
                                                                "inputQueueFlushes": {
                                                                    "type": "integer"
                                                                },
                                                                "inputQueueMaxDepth": {
                                                                    "type": "integer"
                                                                },
                                                                "inputRatebps": {
                                                                    "type": "integer"
                                                                },
                                                                "operationalStatus": {
                                                                    "type": "string"
                                                                },
                                                                "outputDrop": {
                                                                    "type": "integer"
                                                                },
                                                                "outputPackets": {
                                                                    "type": "integer"
                                                                },
                                                                "outputQueueCount": {
                                                                    "type": "integer"
                                                                },
                                                                "outputQueueDepth": {
                                                                    "type": "integer"
                                                                },
                                                                "outputRatebps": {
                                                                    "type": "integer"
                                                                },
                                                                "refreshedAt": {
                                                                    "type": "integer"
                                                                }
                                                            }
                                                        },
                                                        "interfaceStatsCollection": {
                                                            "type": "string"
                                                        },
                                                        "interfaceStatsCollectionFailureReason": {
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "pathOverlayInfo": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "controlPlane": {
                                                                        "type": "string"
                                                                    },
                                                                    "dataPacketEncapsulation": {
                                                                        "type": "string"
                                                                    },
                                                                    "destIp": {
                                                                        "type": "string"
                                                                    },
                                                                    "destPort": {
                                                                        "type": "string"
                                                                    },
                                                                    "protocol": {
                                                                        "type": "string"
                                                                    },
                                                                    "sourceIp": {
                                                                        "type": "string"
                                                                    },
                                                                    "sourcePort": {
                                                                        "type": "string"
                                                                    },
                                                                    "vxlanInfo": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "dscp": {
                                                                                "type": "string"
                                                                            },
                                                                            "vnid": {
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "qosStatistics": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "classMapName": {
                                                                        "type": "string"
                                                                    },
                                                                    "dropRate": {
                                                                        "type": "integer"
                                                                    },
                                                                    "numBytes": {
                                                                        "type": "integer"
                                                                    },
                                                                    "numPackets": {
                                                                        "type": "integer"
                                                                    },
                                                                    "offeredRate": {
                                                                        "type": "integer"
                                                                    },
                                                                    "queueBandwidthbps": {
                                                                        "type": "string"
                                                                    },
                                                                    "queueDepth": {
                                                                        "type": "integer"
                                                                    },
                                                                    "queueNoBufferDrops": {
                                                                        "type": "integer"
                                                                    },
                                                                    "queueTotalDrops": {
                                                                        "type": "integer"
                                                                    },
                                                                    "refreshedAt": {
                                                                        "type": "integer"
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "qosStatsCollection": {
                                                            "type": "string"
                                                        },
                                                        "qosStatsCollectionFailureReason": {
                                                            "type": "string"
                                                        },
                                                        "usedVlan": {
                                                            "type": "string"
                                                        },
                                                        "vrfName": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "ip": {
                                        "type": "string"
                                    },
                                    "linkInformationSource": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "perfMonCollection": {
                                        "type": "string"
                                    },
                                    "perfMonCollectionFailureReason": {
                                        "type": "string"
                                    },
                                    "perfMonitorStatistics": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "byteRate": {
                                                    "type": "integer"
                                                },
                                                "destIpAddress": {
                                                    "type": "string"
                                                },
                                                "destPort": {
                                                    "type": "string"
                                                },
                                                "inputInterface": {
                                                    "type": "string"
                                                },
                                                "ipv4DSCP": {
                                                    "type": "string"
                                                },
                                                "ipv4TTL": {
                                                    "type": "integer"
                                                },
                                                "outputInterface": {
                                                    "type": "string"
                                                },
                                                "packetBytes": {
                                                    "type": "integer"
                                                },
                                                "packetCount": {
                                                    "type": "integer"
                                                },
                                                "packetLoss": {
                                                    "type": "integer"
                                                },
                                                "packetLossPercentage": {
                                                    "type": "number"
                                                },
                                                "protocol": {
                                                    "type": "string"
                                                },
                                                "refreshedAt": {
                                                    "type": "integer"
                                                },
                                                "rtpJitterMax": {
                                                    "type": "integer"
                                                },
                                                "rtpJitterMean": {
                                                    "type": "integer"
                                                },
                                                "rtpJitterMin": {
                                                    "type": "integer"
                                                },
                                                "sourceIpAddress": {
                                                    "type": "string"
                                                },
                                                "sourcePort": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "role": {
                                        "type": "string"
                                    },
                                    "ssid": {
                                        "type": "string"
                                    },
                                    "tunnels": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "type": {
                                        "type": "string"
                                    },
                                    "wlanId": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "properties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "request": {
                            "type": "object",
                            "properties": {
                                "controlPath": {
                                    "type": "boolean"
                                },
                                "createTime": {
                                    "type": "integer"
                                },
                                "destIP": {
                                    "type": "string"
                                },
                                "destPort": {
                                    "type": "string"
                                },
                                "failureReason": {
                                    "type": "string"
                                },
                                "id": {
                                    "type": "string"
                                },
                                "inclusions": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "lastUpdateTime": {
                                    "type": "integer"
                                },
                                "periodicRefresh": {
                                    "type": "boolean"
                                },
                                "protocol": {
                                    "type": "string"
                                },
                                "sourceIP": {
                                    "type": "string"
                                },
                                "sourcePort": {
                                    "type": "string"
                                },
                                "status": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "RetrievesAllNetworkDevicesResponse": {
            "type": "object",
            "properties": {}
        },
        "GetOverallNetworkHealthResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "object",
                    "properties": {
                        "measuredBy": {
                            "type": "string"
                        },
                        "latestMeasuredByEntity": {
                            "type": "string"
                        },
                        "latestHealthScore": {
                            "type": "string"
                        },
                        "monitoredDevices": {
                            "type": "string"
                        },
                        "unMonitoredDevices": {
                            "type": "string"
                        },
                        "healthDistirubution": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "category": {
                                        "type": "string"
                                    },
                                    "totalCount": {
                                        "type": "string"
                                    },
                                    "healthScore": {
                                        "type": "string"
                                    },
                                    "goodPercentage": {
                                        "type": "string"
                                    },
                                    "badPercentage": {
                                        "type": "string"
                                    },
                                    "fairPercentage": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "CreateSiteRequest": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "area",
                        "building",
                        "floor"
                    ]
                },
                "site": {
                    "type": "object",
                    "properties": {
                        "area": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "parentName": {
                                    "type": "string"
                                }
                            }
                        },
                        "building": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "address": {
                                    "type": "string"
                                }
                            }
                        },
                        "floor": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "parentName": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "CreateSiteResponse": {
            "type": "object",
            "properties": {
                "executionId": {
                    "type": "string"
                },
                "executionStatusUrl": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "GetOverallClientHealthResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "siteId": {
                                "type": "string"
                            },
                            "scoreDetail": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "scoreCategory": {
                                            "type": "object",
                                            "properties": {
                                                "scoreCategory": {
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "scoreValue": {
                                            "type": "string"
                                        },
                                        "clientCount": {
                                            "type": "string"
                                        },
                                        "clientUniqueCount": {
                                            "type": "string"
                                        },
                                        "starttime": {
                                            "type": "string"
                                        },
                                        "endtime": {
                                            "type": "string"
                                        },
                                        "scoreList": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "GetDeviceDetailResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "object",
                    "properties": {
                        "managementIpAddr": {
                            "type": "string"
                        },
                        "serialNumber": {
                            "type": "string"
                        },
                        "nwDeviceName": {
                            "type": "string"
                        },
                        "opState": {
                            "type": "string"
                        },
                        "platformId": {
                            "type": "string"
                        },
                        "nwDeviceId": {
                            "type": "string"
                        },
                        "sysUptime": {
                            "type": "string"
                        },
                        "mode": {
                            "type": "string"
                        },
                        "resetReason": {
                            "type": "string"
                        },
                        "nwDeviceRole": {
                            "type": "string"
                        },
                        "upTime": {
                            "type": "string"
                        },
                        "nwDeviceFamily": {
                            "type": "string"
                        },
                        "macAddress": {
                            "type": "string"
                        },
                        "connectedTime": {
                            "type": "string"
                        },
                        "softwareVersion": {
                            "type": "string"
                        },
                        "subMode": {
                            "type": "string"
                        },
                        "nwDeviceType": {
                            "type": "string"
                        },
                        "overallHealth": {
                            "type": "string"
                        },
                        "memoryScore": {
                            "type": "string"
                        },
                        "cpuScore": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "SuccessResultList": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "Settings": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "aaaCredentials": {
                    "type": "object",
                    "properties": {
                        "password": {
                            "type": "string"
                        },
                        "username": {
                            "type": "string"
                        }
                    }
                },
                "acceptEula": {
                    "type": "boolean"
                },
                "defaultProfile": {
                    "type": "object",
                    "properties": {
                        "cert": {
                            "type": "string"
                        },
                        "fqdnAddresses": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "ipAddresses": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "port": {
                            "type": "integer"
                        },
                        "proxy": {
                            "type": "boolean"
                        }
                    }
                },
                "savaMappingList": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "autoSyncPeriod": {
                                "type": "integer"
                            },
                            "ccoUser": {
                                "type": "string"
                            },
                            "expiry": {
                                "type": "integer"
                            },
                            "lastSync": {
                                "type": "integer"
                            },
                            "profile": {
                                "type": "object",
                                "properties": {
                                    "addressFqdn": {
                                        "type": "string"
                                    },
                                    "addressIpV4": {
                                        "type": "string"
                                    },
                                    "cert": {
                                        "type": "string"
                                    },
                                    "makeDefault": {
                                        "type": "boolean"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "port": {
                                        "type": "integer"
                                    },
                                    "profileId": {
                                        "type": "string"
                                    },
                                    "proxy": {
                                        "type": "boolean"
                                    }
                                }
                            },
                            "smartAccountId": {
                                "type": "string"
                            },
                            "syncResult": {
                                "type": "object",
                                "properties": {
                                    "syncList": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "deviceSnList": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "syncType": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Add",
                                                        "Update",
                                                        "Delete",
                                                        "MismatchError"
                                                    ]
                                                }
                                            }
                                        }
                                    },
                                    "syncMsg": {
                                        "type": "string"
                                    }
                                }
                            },
                            "syncResultStr": {
                                "type": "string"
                            },
                            "syncStartTime": {
                                "type": "integer"
                            },
                            "syncStatus": {
                                "type": "string",
                                "enum": [
                                    "NOT_SYNCED",
                                    "SYNCING",
                                    "SUCCESS",
                                    "FAILURE"
                                ]
                            },
                            "tenantId": {
                                "type": "string"
                            },
                            "token": {
                                "type": "string"
                            },
                            "virtualAccountId": {
                                "type": "string"
                            }
                        }
                    }
                },
                "taskTimeOuts": {
                    "type": "object",
                    "properties": {
                        "configTimeOut": {
                            "type": "integer"
                        },
                        "generalTimeOut": {
                            "type": "integer"
                        },
                        "imageDownloadTimeOut": {
                            "type": "integer"
                        }
                    }
                },
                "tenantId": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "UpdatePnPGlobalSettingsResponse": {
            "type": "object",
            "properties": {
                "savaMappingList": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "syncStatus": {
                                "type": "string"
                            },
                            "syncStartTime": {
                                "type": "number"
                            },
                            "syncResult": {
                                "type": "object",
                                "properties": {
                                    "syncList": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "syncType": {
                                                    "type": "string"
                                                },
                                                "deviceSnList": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "syncMsg": {
                                        "type": "string"
                                    }
                                }
                            },
                            "lastSync": {
                                "type": "number"
                            },
                            "tenantId": {
                                "type": "string"
                            },
                            "profile": {
                                "type": "object",
                                "properties": {
                                    "port": {
                                        "type": "number"
                                    },
                                    "addressIpV4": {
                                        "type": "string"
                                    },
                                    "addressFqdn": {
                                        "type": "string"
                                    },
                                    "profileId": {
                                        "type": "string"
                                    },
                                    "proxy": {
                                        "type": "boolean"
                                    },
                                    "makeDefault": {
                                        "type": "boolean"
                                    },
                                    "cert": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            },
                            "token": {
                                "type": "string"
                            },
                            "expiry": {
                                "type": "number"
                            },
                            "ccoUser": {
                                "type": "string"
                            },
                            "smartAccountId": {
                                "type": "string"
                            },
                            "virtualAccountId": {
                                "type": "string"
                            },
                            "autoSyncPeriod": {
                                "type": "number"
                            },
                            "syncResultStr": {
                                "type": "string"
                            }
                        }
                    }
                },
                "taskTimeOuts": {
                    "type": "object",
                    "properties": {
                        "imageDownloadTimeOut": {
                            "type": "number"
                        },
                        "configTimeOut": {
                            "type": "number"
                        },
                        "generalTimeOut": {
                            "type": "number"
                        }
                    }
                },
                "tenantId": {
                    "type": "string"
                },
                "aaaCredentials": {
                    "type": "object",
                    "properties": {
                        "password": {
                            "type": "string"
                        },
                        "username": {
                            "type": "string"
                        }
                    }
                },
                "defaultProfile": {
                    "type": "object",
                    "properties": {
                        "fqdnAddresses": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "proxy": {
                            "type": "boolean"
                        },
                        "cert": {
                            "type": "string"
                        },
                        "ipAddresses": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "port": {
                            "type": "number"
                        }
                    }
                },
                "acceptEula": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "_id": {
                    "type": "string"
                },
                "version": {
                    "type": "number"
                }
            }
        },
        "DownloadAFileByFileIdResponse": {
            "type": "object"
        },
        "SyncVirtualAccountDevicesResponse": {
            "type": "object",
            "properties": {
                "virtualAccountId": {
                    "type": "string"
                },
                "autoSyncPeriod": {
                    "type": "number"
                },
                "syncResultStr": {
                    "type": "string"
                },
                "profile": {
                    "type": "object",
                    "properties": {
                        "proxy": {
                            "type": "boolean"
                        },
                        "makeDefault": {
                            "type": "boolean"
                        },
                        "port": {
                            "type": "number"
                        },
                        "profileId": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "addressIpV4": {
                            "type": "string"
                        },
                        "cert": {
                            "type": "string"
                        },
                        "addressFqdn": {
                            "type": "string"
                        }
                    }
                },
                "ccoUser": {
                    "type": "string"
                },
                "syncResult": {
                    "type": "object",
                    "properties": {
                        "syncList": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "syncType": {
                                        "type": "string"
                                    },
                                    "deviceSnList": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "syncMsg": {
                            "type": "string"
                        }
                    }
                },
                "token": {
                    "type": "string"
                },
                "syncStartTime": {
                    "type": "number"
                },
                "lastSync": {
                    "type": "number"
                },
                "tenantId": {
                    "type": "string"
                },
                "smartAccountId": {
                    "type": "string"
                },
                "expiry": {
                    "type": "number"
                },
                "syncStatus": {
                    "type": "string"
                }
            }
        },
        "AuthenticationAPIResponse": {
            "type": "object",
            "properties": {
                "Token": {
                    "type": "string"
                }
            }
        },
        "ProvisionNFVRequest": {
            "type": "object",
            "properties": {
                "siteProfile": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "siteProfileName": {
                                "type": "string"
                            },
                            "device": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "deviceType": {
                                            "type": "string",
                                            "enum": [
                                                "ENCS5100",
                                                "ENCS5400"
                                            ]
                                        },
                                        "tagName": {
                                            "type": "string"
                                        },
                                        "serviceProviders": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "serviceProvider": {
                                                        "type": "string"
                                                    },
                                                    "linkType": {
                                                        "type": "string",
                                                        "enum": [
                                                            "GigabitEthernet"
                                                        ]
                                                    },
                                                    "connect": {
                                                        "type": "boolean"
                                                    },
                                                    "defaultGateway": {
                                                        "type": "boolean"
                                                    }
                                                }
                                            }
                                        },
                                        "dia": {
                                            "type": "boolean"
                                        },
                                        "services": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "isr",
                                                            "vedge",
                                                            "waas",
                                                            "asa",
                                                            "ngfw",
                                                            "paloalto",
                                                            "fortinet",
                                                            "checkpoint",
                                                            "riverbed",
                                                            "silverpeak"
                                                        ]
                                                    },
                                                    "profile": {
                                                        "type": "string"
                                                    },
                                                    "mode": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "customServices": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "applicationType": {
                                                        "type": "string"
                                                    },
                                                    "profile": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "customNetworks": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "servicesToConnect": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "service": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "vlan": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "customTemplate": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "deviceType": {
                                            "type": "string",
                                            "enum": [
                                                "NFVIS",
                                                "ASAv"
                                            ]
                                        },
                                        "template": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "provisioning": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "site": {
                                "type": "object",
                                "properties": {
                                    "siteProfileName": {
                                        "type": "string"
                                    },
                                    "area": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string"
                                            },
                                            "parentName": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "building": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string"
                                            },
                                            "address": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "floor": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string"
                                            },
                                            "parentName": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            },
                            "templateParam": {
                                "type": "object",
                                "properties": {
                                    "nfvis": {
                                        "type": "object",
                                        "properties": {
                                            "var1": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "asav": {
                                        "type": "object",
                                        "properties": {
                                            "var1": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            },
                            "networksettings": {
                                "type": "object",
                                "properties": {
                                    "ipPool": {
                                        "type": "object",
                                        "properties": {
                                            "globalPool": {
                                                "type": "object",
                                                "properties": {
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "device": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "ip": {
                                            "type": "string"
                                        },
                                        "deviceSerialNumber": {
                                            "type": "string"
                                        },
                                        "tagName": {
                                            "type": "string"
                                        },
                                        "serviceProviders": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "serviceProvider": {
                                                        "type": "string"
                                                    },
                                                    "wanInterface": {
                                                        "type": "object",
                                                        "properties": {
                                                            "ipAddress": {
                                                                "type": "string"
                                                            },
                                                            "interfaceName": {
                                                                "type": "string"
                                                            },
                                                            "subnetmask": {
                                                                "type": "string"
                                                            },
                                                            "bandwidth": {
                                                                "type": "string"
                                                            },
                                                            "gateway": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "services": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "mode": {
                                                        "type": "string"
                                                    },
                                                    "systemIp": {
                                                        "type": "string"
                                                    },
                                                    "centralManagerIP": {
                                                        "type": "string"
                                                    },
                                                    "centralRegistrationKey": {
                                                        "type": "string"
                                                    },
                                                    "commonKey": {
                                                        "type": "string"
                                                    },
                                                    "adminPasswordHash": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "vlan": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string"
                                                    },
                                                    "interfaces": {
                                                        "type": "string"
                                                    },
                                                    "network": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "subPools": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "Lan",
                                                            "Management",
                                                            "Service",
                                                            "Wan",
                                                            "Generic"
                                                        ]
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "ipSubnet": {
                                                        "type": "string"
                                                    },
                                                    "gateway": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "ProvisionNFVResponse": {
            "type": "object",
            "properties": {
                "executionId": {
                    "type": "string"
                },
                "executionStatusUrl": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "GetClientDetailResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "object",
                    "properties": {
                        "detail": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "connectionStatus": {
                                    "type": "string"
                                },
                                "hostType": {
                                    "type": "string"
                                },
                                "userId": {
                                    "type": "string"
                                },
                                "hostName": {
                                    "type": "string"
                                },
                                "hostOs": {
                                    "type": "string"
                                },
                                "hostVersion": {
                                    "type": "string"
                                },
                                "subType": {
                                    "type": "string"
                                },
                                "lastUpdated": {
                                    "type": "string"
                                },
                                "healthScore": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "healthType": {
                                                "type": "string"
                                            },
                                            "reason": {
                                                "type": "string"
                                            },
                                            "score": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "hostMac": {
                                    "type": "string"
                                },
                                "hostIpV4": {
                                    "type": "string"
                                },
                                "hostIpV6": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "authType": {
                                    "type": "string"
                                },
                                "vlanId": {
                                    "type": "string"
                                },
                                "ssid": {
                                    "type": "string"
                                },
                                "frequency": {
                                    "type": "string"
                                },
                                "channel": {
                                    "type": "string"
                                },
                                "apGroup": {
                                    "type": "string"
                                },
                                "location": {
                                    "type": "string"
                                },
                                "clientConnection": {
                                    "type": "string"
                                },
                                "connectedDevice": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "issueCount": {
                                    "type": "string"
                                },
                                "rssi": {
                                    "type": "string"
                                },
                                "avgRssi": {
                                    "type": "string"
                                },
                                "snr": {
                                    "type": "string"
                                },
                                "avgSnr": {
                                    "type": "string"
                                },
                                "dataRate": {
                                    "type": "string"
                                },
                                "txBytes": {
                                    "type": "string"
                                },
                                "rxBytes": {
                                    "type": "string"
                                },
                                "dnsSuccess": {
                                    "type": "string"
                                },
                                "dnsFailure": {
                                    "type": "string"
                                },
                                "onboarding": {
                                    "type": "object",
                                    "properties": {
                                        "averageRunDuration": {
                                            "type": "string"
                                        },
                                        "maxRunDuration": {
                                            "type": "string"
                                        },
                                        "averageAssocDuration": {
                                            "type": "string"
                                        },
                                        "maxAssocDuration": {
                                            "type": "string"
                                        },
                                        "averageAuthDuration": {
                                            "type": "string"
                                        },
                                        "maxAuthDuration": {
                                            "type": "string"
                                        },
                                        "averageDhcpDuration": {
                                            "type": "string"
                                        },
                                        "maxDhcpDuration": {
                                            "type": "string"
                                        },
                                        "aaaServerIp": {
                                            "type": "string"
                                        },
                                        "dhcpServerIp": {
                                            "type": "string"
                                        },
                                        "authDoneTime": {
                                            "type": "string"
                                        },
                                        "assocDoneTime": {
                                            "type": "string"
                                        },
                                        "dhcpDoneTime": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "onboardingTime": {
                                    "type": "string"
                                },
                                "port": {
                                    "type": "string"
                                }
                            }
                        },
                        "connectionInfo": {
                            "type": "object",
                            "properties": {
                                "hostType": {
                                    "type": "string"
                                },
                                "nwDeviceName": {
                                    "type": "string"
                                },
                                "nwDeviceMac": {
                                    "type": "string"
                                },
                                "protocol": {
                                    "type": "string"
                                },
                                "band": {
                                    "type": "string"
                                },
                                "spatialStream": {
                                    "type": "string"
                                },
                                "channel": {
                                    "type": "string"
                                },
                                "channelWidth": {
                                    "type": "string"
                                },
                                "wmm": {
                                    "type": "string"
                                },
                                "uapsd": {
                                    "type": "string"
                                },
                                "timestamp": {
                                    "type": "string"
                                }
                            }
                        },
                        "topology": {
                            "type": "object",
                            "properties": {
                                "nodes": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "role": {
                                                "type": "string"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "description": {
                                                "type": "string"
                                            },
                                            "deviceType": {
                                                "type": "string"
                                            },
                                            "platformId": {
                                                "type": "string"
                                            },
                                            "family": {
                                                "type": "string"
                                            },
                                            "ip": {
                                                "type": "string"
                                            },
                                            "softwareVersion": {
                                                "type": "string"
                                            },
                                            "userId": {
                                                "type": "string"
                                            },
                                            "nodeType": {
                                                "type": "string"
                                            },
                                            "radioFrequency": {
                                                "type": "string"
                                            },
                                            "clients": {
                                                "type": "string"
                                            },
                                            "count": {
                                                "type": "string"
                                            },
                                            "healthScore": {
                                                "type": "string"
                                            },
                                            "level": {
                                                "type": "string"
                                            },
                                            "fabricGroup": {
                                                "type": "string"
                                            },
                                            "connectedDevice": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "links": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "source": {
                                                "type": "string"
                                            },
                                            "linkStatus": {
                                                "type": "string"
                                            },
                                            "label": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "target": {
                                                "type": "string"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "portUtilization": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "GetDeviceHistoryResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "timestamp": {
                                "type": "number"
                            },
                            "details": {
                                "type": "string"
                            },
                            "historyTaskInfo": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    },
                                    "timeTaken": {
                                        "type": "number"
                                    },
                                    "workItemList": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "state": {
                                                    "type": "string"
                                                },
                                                "command": {
                                                    "type": "string"
                                                },
                                                "startTime": {
                                                    "type": "number"
                                                },
                                                "endTime": {
                                                    "type": "number"
                                                },
                                                "timeTaken": {
                                                    "type": "number"
                                                },
                                                "outputStr": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "addnDetails": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "key": {
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "errorFlag": {
                                "type": "boolean"
                            }
                        }
                    }
                },
                "statusCode": {
                    "type": "number"
                }
            }
        },
        "ActivateDTO": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "activateLowerImageVersion": {
                        "type": "boolean"
                    },
                    "deviceUpgradeMode": {
                        "type": "string"
                    },
                    "deviceUuid": {
                        "type": "string"
                    },
                    "distributeIfNeeded": {
                        "type": "boolean"
                    },
                    "imageUuidList": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "smuImageUuidList": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    }
}
