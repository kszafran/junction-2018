// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// ActivateDTO activate d t o
// swagger:model ActivateDTO
type ActivateDTO []*ActivateDTOItems0

// Validate validates this activate d t o
func (m ActivateDTO) Validate(formats strfmt.Registry) error {
	var res []error

	for i := 0; i < len(m); i++ {
		if swag.IsZero(m[i]) { // not required
			continue
		}

		if m[i] != nil {
			if err := m[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName(strconv.Itoa(i))
				}
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ActivateDTOItems0 activate d t o items0
// swagger:model ActivateDTOItems0
type ActivateDTOItems0 struct {

	// activate lower image version
	ActivateLowerImageVersion bool `json:"activateLowerImageVersion,omitempty"`

	// device upgrade mode
	DeviceUpgradeMode string `json:"deviceUpgradeMode,omitempty"`

	// device Uuid
	DeviceUUID string `json:"deviceUuid,omitempty"`

	// distribute if needed
	DistributeIfNeeded bool `json:"distributeIfNeeded,omitempty"`

	// image Uuid list
	ImageUUIDList []string `json:"imageUuidList"`

	// smu image Uuid list
	SmuImageUUIDList []string `json:"smuImageUuidList"`
}

// Validate validates this activate d t o items0
func (m *ActivateDTOItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ActivateDTOItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ActivateDTOItems0) UnmarshalBinary(b []byte) error {
	var res ActivateDTOItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
