// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// GetOverallClientHealthResponse get overall client health response
// swagger:model GetOverallClientHealthResponse
type GetOverallClientHealthResponse struct {

	// response
	Response []*GetOverallClientHealthResponseResponseItems0 `json:"response"`
}

// Validate validates this get overall client health response
func (m *GetOverallClientHealthResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateResponse(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetOverallClientHealthResponse) validateResponse(formats strfmt.Registry) error {

	if swag.IsZero(m.Response) { // not required
		return nil
	}

	for i := 0; i < len(m.Response); i++ {
		if swag.IsZero(m.Response[i]) { // not required
			continue
		}

		if m.Response[i] != nil {
			if err := m.Response[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("response" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *GetOverallClientHealthResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetOverallClientHealthResponse) UnmarshalBinary(b []byte) error {
	var res GetOverallClientHealthResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// GetOverallClientHealthResponseResponseItems0 get overall client health response response items0
// swagger:model GetOverallClientHealthResponseResponseItems0
type GetOverallClientHealthResponseResponseItems0 struct {

	// score detail
	ScoreDetail []*GetOverallClientHealthResponseResponseItems0ScoreDetailItems0 `json:"scoreDetail"`

	// site Id
	SiteID string `json:"siteId,omitempty"`
}

// Validate validates this get overall client health response response items0
func (m *GetOverallClientHealthResponseResponseItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateScoreDetail(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetOverallClientHealthResponseResponseItems0) validateScoreDetail(formats strfmt.Registry) error {

	if swag.IsZero(m.ScoreDetail) { // not required
		return nil
	}

	for i := 0; i < len(m.ScoreDetail); i++ {
		if swag.IsZero(m.ScoreDetail[i]) { // not required
			continue
		}

		if m.ScoreDetail[i] != nil {
			if err := m.ScoreDetail[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("scoreDetail" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *GetOverallClientHealthResponseResponseItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetOverallClientHealthResponseResponseItems0) UnmarshalBinary(b []byte) error {
	var res GetOverallClientHealthResponseResponseItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// GetOverallClientHealthResponseResponseItems0ScoreDetailItems0 get overall client health response response items0 score detail items0
// swagger:model GetOverallClientHealthResponseResponseItems0ScoreDetailItems0
type GetOverallClientHealthResponseResponseItems0ScoreDetailItems0 struct {

	// client count
	ClientCount string `json:"clientCount,omitempty"`

	// client unique count
	ClientUniqueCount string `json:"clientUniqueCount,omitempty"`

	// endtime
	Endtime string `json:"endtime,omitempty"`

	// score category
	ScoreCategory *GetOverallClientHealthResponseResponseItems0ScoreDetailItems0ScoreCategory `json:"scoreCategory,omitempty"`

	// score list
	ScoreList []string `json:"scoreList"`

	// score value
	ScoreValue string `json:"scoreValue,omitempty"`

	// starttime
	Starttime string `json:"starttime,omitempty"`
}

// Validate validates this get overall client health response response items0 score detail items0
func (m *GetOverallClientHealthResponseResponseItems0ScoreDetailItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateScoreCategory(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetOverallClientHealthResponseResponseItems0ScoreDetailItems0) validateScoreCategory(formats strfmt.Registry) error {

	if swag.IsZero(m.ScoreCategory) { // not required
		return nil
	}

	if m.ScoreCategory != nil {
		if err := m.ScoreCategory.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("scoreCategory")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GetOverallClientHealthResponseResponseItems0ScoreDetailItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetOverallClientHealthResponseResponseItems0ScoreDetailItems0) UnmarshalBinary(b []byte) error {
	var res GetOverallClientHealthResponseResponseItems0ScoreDetailItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// GetOverallClientHealthResponseResponseItems0ScoreDetailItems0ScoreCategory get overall client health response response items0 score detail items0 score category
// swagger:model GetOverallClientHealthResponseResponseItems0ScoreDetailItems0ScoreCategory
type GetOverallClientHealthResponseResponseItems0ScoreDetailItems0ScoreCategory struct {

	// score category
	ScoreCategory string `json:"scoreCategory,omitempty"`

	// value
	Value string `json:"value,omitempty"`
}

// Validate validates this get overall client health response response items0 score detail items0 score category
func (m *GetOverallClientHealthResponseResponseItems0ScoreDetailItems0ScoreCategory) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *GetOverallClientHealthResponseResponseItems0ScoreDetailItems0ScoreCategory) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetOverallClientHealthResponseResponseItems0ScoreDetailItems0ScoreCategory) UnmarshalBinary(b []byte) error {
	var res GetOverallClientHealthResponseResponseItems0ScoreDetailItems0ScoreCategory
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
