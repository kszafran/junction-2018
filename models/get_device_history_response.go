// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// GetDeviceHistoryResponse get device history response
// swagger:model GetDeviceHistoryResponse
type GetDeviceHistoryResponse struct {

	// response
	Response []*GetDeviceHistoryResponseResponseItems0 `json:"response"`

	// status code
	StatusCode float64 `json:"statusCode,omitempty"`
}

// Validate validates this get device history response
func (m *GetDeviceHistoryResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateResponse(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetDeviceHistoryResponse) validateResponse(formats strfmt.Registry) error {

	if swag.IsZero(m.Response) { // not required
		return nil
	}

	for i := 0; i < len(m.Response); i++ {
		if swag.IsZero(m.Response[i]) { // not required
			continue
		}

		if m.Response[i] != nil {
			if err := m.Response[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("response" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *GetDeviceHistoryResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetDeviceHistoryResponse) UnmarshalBinary(b []byte) error {
	var res GetDeviceHistoryResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// GetDeviceHistoryResponseResponseItems0 get device history response response items0
// swagger:model GetDeviceHistoryResponseResponseItems0
type GetDeviceHistoryResponseResponseItems0 struct {

	// details
	Details string `json:"details,omitempty"`

	// error flag
	ErrorFlag bool `json:"errorFlag,omitempty"`

	// history task info
	HistoryTaskInfo *GetDeviceHistoryResponseResponseItems0HistoryTaskInfo `json:"historyTaskInfo,omitempty"`

	// timestamp
	Timestamp float64 `json:"timestamp,omitempty"`
}

// Validate validates this get device history response response items0
func (m *GetDeviceHistoryResponseResponseItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateHistoryTaskInfo(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetDeviceHistoryResponseResponseItems0) validateHistoryTaskInfo(formats strfmt.Registry) error {

	if swag.IsZero(m.HistoryTaskInfo) { // not required
		return nil
	}

	if m.HistoryTaskInfo != nil {
		if err := m.HistoryTaskInfo.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("historyTaskInfo")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GetDeviceHistoryResponseResponseItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetDeviceHistoryResponseResponseItems0) UnmarshalBinary(b []byte) error {
	var res GetDeviceHistoryResponseResponseItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// GetDeviceHistoryResponseResponseItems0HistoryTaskInfo get device history response response items0 history task info
// swagger:model GetDeviceHistoryResponseResponseItems0HistoryTaskInfo
type GetDeviceHistoryResponseResponseItems0HistoryTaskInfo struct {

	// addn details
	AddnDetails []*GetDeviceHistoryResponseResponseItems0HistoryTaskInfoAddnDetailsItems0 `json:"addnDetails"`

	// name
	Name string `json:"name,omitempty"`

	// time taken
	TimeTaken float64 `json:"timeTaken,omitempty"`

	// type
	Type string `json:"type,omitempty"`

	// work item list
	WorkItemList []*GetDeviceHistoryResponseResponseItems0HistoryTaskInfoWorkItemListItems0 `json:"workItemList"`
}

// Validate validates this get device history response response items0 history task info
func (m *GetDeviceHistoryResponseResponseItems0HistoryTaskInfo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAddnDetails(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateWorkItemList(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetDeviceHistoryResponseResponseItems0HistoryTaskInfo) validateAddnDetails(formats strfmt.Registry) error {

	if swag.IsZero(m.AddnDetails) { // not required
		return nil
	}

	for i := 0; i < len(m.AddnDetails); i++ {
		if swag.IsZero(m.AddnDetails[i]) { // not required
			continue
		}

		if m.AddnDetails[i] != nil {
			if err := m.AddnDetails[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("historyTaskInfo" + "." + "addnDetails" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *GetDeviceHistoryResponseResponseItems0HistoryTaskInfo) validateWorkItemList(formats strfmt.Registry) error {

	if swag.IsZero(m.WorkItemList) { // not required
		return nil
	}

	for i := 0; i < len(m.WorkItemList); i++ {
		if swag.IsZero(m.WorkItemList[i]) { // not required
			continue
		}

		if m.WorkItemList[i] != nil {
			if err := m.WorkItemList[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("historyTaskInfo" + "." + "workItemList" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *GetDeviceHistoryResponseResponseItems0HistoryTaskInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetDeviceHistoryResponseResponseItems0HistoryTaskInfo) UnmarshalBinary(b []byte) error {
	var res GetDeviceHistoryResponseResponseItems0HistoryTaskInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// GetDeviceHistoryResponseResponseItems0HistoryTaskInfoAddnDetailsItems0 get device history response response items0 history task info addn details items0
// swagger:model GetDeviceHistoryResponseResponseItems0HistoryTaskInfoAddnDetailsItems0
type GetDeviceHistoryResponseResponseItems0HistoryTaskInfoAddnDetailsItems0 struct {

	// key
	Key string `json:"key,omitempty"`

	// value
	Value string `json:"value,omitempty"`
}

// Validate validates this get device history response response items0 history task info addn details items0
func (m *GetDeviceHistoryResponseResponseItems0HistoryTaskInfoAddnDetailsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *GetDeviceHistoryResponseResponseItems0HistoryTaskInfoAddnDetailsItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetDeviceHistoryResponseResponseItems0HistoryTaskInfoAddnDetailsItems0) UnmarshalBinary(b []byte) error {
	var res GetDeviceHistoryResponseResponseItems0HistoryTaskInfoAddnDetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// GetDeviceHistoryResponseResponseItems0HistoryTaskInfoWorkItemListItems0 get device history response response items0 history task info work item list items0
// swagger:model GetDeviceHistoryResponseResponseItems0HistoryTaskInfoWorkItemListItems0
type GetDeviceHistoryResponseResponseItems0HistoryTaskInfoWorkItemListItems0 struct {

	// command
	Command string `json:"command,omitempty"`

	// end time
	EndTime float64 `json:"endTime,omitempty"`

	// output str
	OutputStr string `json:"outputStr,omitempty"`

	// start time
	StartTime float64 `json:"startTime,omitempty"`

	// state
	State string `json:"state,omitempty"`

	// time taken
	TimeTaken float64 `json:"timeTaken,omitempty"`
}

// Validate validates this get device history response response items0 history task info work item list items0
func (m *GetDeviceHistoryResponseResponseItems0HistoryTaskInfoWorkItemListItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *GetDeviceHistoryResponseResponseItems0HistoryTaskInfoWorkItemListItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetDeviceHistoryResponseResponseItems0HistoryTaskInfoWorkItemListItems0) UnmarshalBinary(b []byte) error {
	var res GetDeviceHistoryResponseResponseItems0HistoryTaskInfoWorkItemListItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
