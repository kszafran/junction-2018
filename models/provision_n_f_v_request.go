// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ProvisionNFVRequest provision n f v request
// swagger:model ProvisionNFVRequest
type ProvisionNFVRequest struct {

	// provisioning
	Provisioning []*ProvisionNFVRequestProvisioningItems0 `json:"provisioning"`

	// site profile
	SiteProfile []*ProvisionNFVRequestSiteProfileItems0 `json:"siteProfile"`
}

// Validate validates this provision n f v request
func (m *ProvisionNFVRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateProvisioning(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSiteProfile(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ProvisionNFVRequest) validateProvisioning(formats strfmt.Registry) error {

	if swag.IsZero(m.Provisioning) { // not required
		return nil
	}

	for i := 0; i < len(m.Provisioning); i++ {
		if swag.IsZero(m.Provisioning[i]) { // not required
			continue
		}

		if m.Provisioning[i] != nil {
			if err := m.Provisioning[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("provisioning" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *ProvisionNFVRequest) validateSiteProfile(formats strfmt.Registry) error {

	if swag.IsZero(m.SiteProfile) { // not required
		return nil
	}

	for i := 0; i < len(m.SiteProfile); i++ {
		if swag.IsZero(m.SiteProfile[i]) { // not required
			continue
		}

		if m.SiteProfile[i] != nil {
			if err := m.SiteProfile[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("siteProfile" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *ProvisionNFVRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProvisionNFVRequest) UnmarshalBinary(b []byte) error {
	var res ProvisionNFVRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ProvisionNFVRequestProvisioningItems0 provision n f v request provisioning items0
// swagger:model ProvisionNFVRequestProvisioningItems0
type ProvisionNFVRequestProvisioningItems0 struct {

	// device
	Device []*ProvisionNFVRequestProvisioningItems0DeviceItems0 `json:"device"`

	// networksettings
	Networksettings *ProvisionNFVRequestProvisioningItems0Networksettings `json:"networksettings,omitempty"`

	// site
	Site *ProvisionNFVRequestProvisioningItems0Site `json:"site,omitempty"`

	// template param
	TemplateParam *ProvisionNFVRequestProvisioningItems0TemplateParam `json:"templateParam,omitempty"`
}

// Validate validates this provision n f v request provisioning items0
func (m *ProvisionNFVRequestProvisioningItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDevice(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNetworksettings(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSite(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTemplateParam(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ProvisionNFVRequestProvisioningItems0) validateDevice(formats strfmt.Registry) error {

	if swag.IsZero(m.Device) { // not required
		return nil
	}

	for i := 0; i < len(m.Device); i++ {
		if swag.IsZero(m.Device[i]) { // not required
			continue
		}

		if m.Device[i] != nil {
			if err := m.Device[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("device" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *ProvisionNFVRequestProvisioningItems0) validateNetworksettings(formats strfmt.Registry) error {

	if swag.IsZero(m.Networksettings) { // not required
		return nil
	}

	if m.Networksettings != nil {
		if err := m.Networksettings.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("networksettings")
			}
			return err
		}
	}

	return nil
}

func (m *ProvisionNFVRequestProvisioningItems0) validateSite(formats strfmt.Registry) error {

	if swag.IsZero(m.Site) { // not required
		return nil
	}

	if m.Site != nil {
		if err := m.Site.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("site")
			}
			return err
		}
	}

	return nil
}

func (m *ProvisionNFVRequestProvisioningItems0) validateTemplateParam(formats strfmt.Registry) error {

	if swag.IsZero(m.TemplateParam) { // not required
		return nil
	}

	if m.TemplateParam != nil {
		if err := m.TemplateParam.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("templateParam")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ProvisionNFVRequestProvisioningItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProvisionNFVRequestProvisioningItems0) UnmarshalBinary(b []byte) error {
	var res ProvisionNFVRequestProvisioningItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ProvisionNFVRequestProvisioningItems0DeviceItems0 provision n f v request provisioning items0 device items0
// swagger:model ProvisionNFVRequestProvisioningItems0DeviceItems0
type ProvisionNFVRequestProvisioningItems0DeviceItems0 struct {

	// device serial number
	DeviceSerialNumber string `json:"deviceSerialNumber,omitempty"`

	// ip
	IP string `json:"ip,omitempty"`

	// service providers
	ServiceProviders []*ProvisionNFVRequestProvisioningItems0DeviceItems0ServiceProvidersItems0 `json:"serviceProviders"`

	// services
	Services []*ProvisionNFVRequestProvisioningItems0DeviceItems0ServicesItems0 `json:"services"`

	// sub pools
	SubPools []*ProvisionNFVRequestProvisioningItems0DeviceItems0SubPoolsItems0 `json:"subPools"`

	// tag name
	TagName string `json:"tagName,omitempty"`

	// vlan
	Vlan []*ProvisionNFVRequestProvisioningItems0DeviceItems0VlanItems0 `json:"vlan"`
}

// Validate validates this provision n f v request provisioning items0 device items0
func (m *ProvisionNFVRequestProvisioningItems0DeviceItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateServiceProviders(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateServices(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSubPools(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateVlan(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ProvisionNFVRequestProvisioningItems0DeviceItems0) validateServiceProviders(formats strfmt.Registry) error {

	if swag.IsZero(m.ServiceProviders) { // not required
		return nil
	}

	for i := 0; i < len(m.ServiceProviders); i++ {
		if swag.IsZero(m.ServiceProviders[i]) { // not required
			continue
		}

		if m.ServiceProviders[i] != nil {
			if err := m.ServiceProviders[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("serviceProviders" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *ProvisionNFVRequestProvisioningItems0DeviceItems0) validateServices(formats strfmt.Registry) error {

	if swag.IsZero(m.Services) { // not required
		return nil
	}

	for i := 0; i < len(m.Services); i++ {
		if swag.IsZero(m.Services[i]) { // not required
			continue
		}

		if m.Services[i] != nil {
			if err := m.Services[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("services" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *ProvisionNFVRequestProvisioningItems0DeviceItems0) validateSubPools(formats strfmt.Registry) error {

	if swag.IsZero(m.SubPools) { // not required
		return nil
	}

	for i := 0; i < len(m.SubPools); i++ {
		if swag.IsZero(m.SubPools[i]) { // not required
			continue
		}

		if m.SubPools[i] != nil {
			if err := m.SubPools[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("subPools" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *ProvisionNFVRequestProvisioningItems0DeviceItems0) validateVlan(formats strfmt.Registry) error {

	if swag.IsZero(m.Vlan) { // not required
		return nil
	}

	for i := 0; i < len(m.Vlan); i++ {
		if swag.IsZero(m.Vlan[i]) { // not required
			continue
		}

		if m.Vlan[i] != nil {
			if err := m.Vlan[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("vlan" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *ProvisionNFVRequestProvisioningItems0DeviceItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProvisionNFVRequestProvisioningItems0DeviceItems0) UnmarshalBinary(b []byte) error {
	var res ProvisionNFVRequestProvisioningItems0DeviceItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ProvisionNFVRequestProvisioningItems0DeviceItems0ServiceProvidersItems0 provision n f v request provisioning items0 device items0 service providers items0
// swagger:model ProvisionNFVRequestProvisioningItems0DeviceItems0ServiceProvidersItems0
type ProvisionNFVRequestProvisioningItems0DeviceItems0ServiceProvidersItems0 struct {

	// service provider
	ServiceProvider string `json:"serviceProvider,omitempty"`

	// wan interface
	WanInterface *ProvisionNFVRequestProvisioningItems0DeviceItems0ServiceProvidersItems0WanInterface `json:"wanInterface,omitempty"`
}

// Validate validates this provision n f v request provisioning items0 device items0 service providers items0
func (m *ProvisionNFVRequestProvisioningItems0DeviceItems0ServiceProvidersItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateWanInterface(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ProvisionNFVRequestProvisioningItems0DeviceItems0ServiceProvidersItems0) validateWanInterface(formats strfmt.Registry) error {

	if swag.IsZero(m.WanInterface) { // not required
		return nil
	}

	if m.WanInterface != nil {
		if err := m.WanInterface.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("wanInterface")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ProvisionNFVRequestProvisioningItems0DeviceItems0ServiceProvidersItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProvisionNFVRequestProvisioningItems0DeviceItems0ServiceProvidersItems0) UnmarshalBinary(b []byte) error {
	var res ProvisionNFVRequestProvisioningItems0DeviceItems0ServiceProvidersItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ProvisionNFVRequestProvisioningItems0DeviceItems0ServiceProvidersItems0WanInterface provision n f v request provisioning items0 device items0 service providers items0 wan interface
// swagger:model ProvisionNFVRequestProvisioningItems0DeviceItems0ServiceProvidersItems0WanInterface
type ProvisionNFVRequestProvisioningItems0DeviceItems0ServiceProvidersItems0WanInterface struct {

	// bandwidth
	Bandwidth string `json:"bandwidth,omitempty"`

	// gateway
	Gateway string `json:"gateway,omitempty"`

	// interface name
	InterfaceName string `json:"interfaceName,omitempty"`

	// ip address
	IPAddress string `json:"ipAddress,omitempty"`

	// subnetmask
	Subnetmask string `json:"subnetmask,omitempty"`
}

// Validate validates this provision n f v request provisioning items0 device items0 service providers items0 wan interface
func (m *ProvisionNFVRequestProvisioningItems0DeviceItems0ServiceProvidersItems0WanInterface) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ProvisionNFVRequestProvisioningItems0DeviceItems0ServiceProvidersItems0WanInterface) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProvisionNFVRequestProvisioningItems0DeviceItems0ServiceProvidersItems0WanInterface) UnmarshalBinary(b []byte) error {
	var res ProvisionNFVRequestProvisioningItems0DeviceItems0ServiceProvidersItems0WanInterface
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ProvisionNFVRequestProvisioningItems0DeviceItems0ServicesItems0 provision n f v request provisioning items0 device items0 services items0
// swagger:model ProvisionNFVRequestProvisioningItems0DeviceItems0ServicesItems0
type ProvisionNFVRequestProvisioningItems0DeviceItems0ServicesItems0 struct {

	// admin password hash
	AdminPasswordHash string `json:"adminPasswordHash,omitempty"`

	// central manager IP
	CentralManagerIP string `json:"centralManagerIP,omitempty"`

	// central registration key
	CentralRegistrationKey string `json:"centralRegistrationKey,omitempty"`

	// common key
	CommonKey string `json:"commonKey,omitempty"`

	// mode
	Mode string `json:"mode,omitempty"`

	// system Ip
	SystemIP string `json:"systemIp,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this provision n f v request provisioning items0 device items0 services items0
func (m *ProvisionNFVRequestProvisioningItems0DeviceItems0ServicesItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ProvisionNFVRequestProvisioningItems0DeviceItems0ServicesItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProvisionNFVRequestProvisioningItems0DeviceItems0ServicesItems0) UnmarshalBinary(b []byte) error {
	var res ProvisionNFVRequestProvisioningItems0DeviceItems0ServicesItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ProvisionNFVRequestProvisioningItems0DeviceItems0SubPoolsItems0 provision n f v request provisioning items0 device items0 sub pools items0
// swagger:model ProvisionNFVRequestProvisioningItems0DeviceItems0SubPoolsItems0
type ProvisionNFVRequestProvisioningItems0DeviceItems0SubPoolsItems0 struct {

	// gateway
	Gateway string `json:"gateway,omitempty"`

	// ip subnet
	IPSubnet string `json:"ipSubnet,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// type
	// Enum: [Lan Management Service Wan Generic]
	Type string `json:"type,omitempty"`
}

// Validate validates this provision n f v request provisioning items0 device items0 sub pools items0
func (m *ProvisionNFVRequestProvisioningItems0DeviceItems0SubPoolsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var provisionNFVRequestProvisioningItems0DeviceItems0SubPoolsItems0TypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Lan","Management","Service","Wan","Generic"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		provisionNFVRequestProvisioningItems0DeviceItems0SubPoolsItems0TypeTypePropEnum = append(provisionNFVRequestProvisioningItems0DeviceItems0SubPoolsItems0TypeTypePropEnum, v)
	}
}

const (

	// ProvisionNFVRequestProvisioningItems0DeviceItems0SubPoolsItems0TypeLan captures enum value "Lan"
	ProvisionNFVRequestProvisioningItems0DeviceItems0SubPoolsItems0TypeLan string = "Lan"

	// ProvisionNFVRequestProvisioningItems0DeviceItems0SubPoolsItems0TypeManagement captures enum value "Management"
	ProvisionNFVRequestProvisioningItems0DeviceItems0SubPoolsItems0TypeManagement string = "Management"

	// ProvisionNFVRequestProvisioningItems0DeviceItems0SubPoolsItems0TypeService captures enum value "Service"
	ProvisionNFVRequestProvisioningItems0DeviceItems0SubPoolsItems0TypeService string = "Service"

	// ProvisionNFVRequestProvisioningItems0DeviceItems0SubPoolsItems0TypeWan captures enum value "Wan"
	ProvisionNFVRequestProvisioningItems0DeviceItems0SubPoolsItems0TypeWan string = "Wan"

	// ProvisionNFVRequestProvisioningItems0DeviceItems0SubPoolsItems0TypeGeneric captures enum value "Generic"
	ProvisionNFVRequestProvisioningItems0DeviceItems0SubPoolsItems0TypeGeneric string = "Generic"
)

// prop value enum
func (m *ProvisionNFVRequestProvisioningItems0DeviceItems0SubPoolsItems0) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, provisionNFVRequestProvisioningItems0DeviceItems0SubPoolsItems0TypeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ProvisionNFVRequestProvisioningItems0DeviceItems0SubPoolsItems0) validateType(formats strfmt.Registry) error {

	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ProvisionNFVRequestProvisioningItems0DeviceItems0SubPoolsItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProvisionNFVRequestProvisioningItems0DeviceItems0SubPoolsItems0) UnmarshalBinary(b []byte) error {
	var res ProvisionNFVRequestProvisioningItems0DeviceItems0SubPoolsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ProvisionNFVRequestProvisioningItems0DeviceItems0VlanItems0 provision n f v request provisioning items0 device items0 vlan items0
// swagger:model ProvisionNFVRequestProvisioningItems0DeviceItems0VlanItems0
type ProvisionNFVRequestProvisioningItems0DeviceItems0VlanItems0 struct {

	// id
	ID string `json:"id,omitempty"`

	// interfaces
	Interfaces string `json:"interfaces,omitempty"`

	// network
	Network string `json:"network,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this provision n f v request provisioning items0 device items0 vlan items0
func (m *ProvisionNFVRequestProvisioningItems0DeviceItems0VlanItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ProvisionNFVRequestProvisioningItems0DeviceItems0VlanItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProvisionNFVRequestProvisioningItems0DeviceItems0VlanItems0) UnmarshalBinary(b []byte) error {
	var res ProvisionNFVRequestProvisioningItems0DeviceItems0VlanItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ProvisionNFVRequestProvisioningItems0Networksettings provision n f v request provisioning items0 networksettings
// swagger:model ProvisionNFVRequestProvisioningItems0Networksettings
type ProvisionNFVRequestProvisioningItems0Networksettings struct {

	// ip pool
	IPPool *ProvisionNFVRequestProvisioningItems0NetworksettingsIPPool `json:"ipPool,omitempty"`
}

// Validate validates this provision n f v request provisioning items0 networksettings
func (m *ProvisionNFVRequestProvisioningItems0Networksettings) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateIPPool(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ProvisionNFVRequestProvisioningItems0Networksettings) validateIPPool(formats strfmt.Registry) error {

	if swag.IsZero(m.IPPool) { // not required
		return nil
	}

	if m.IPPool != nil {
		if err := m.IPPool.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("networksettings" + "." + "ipPool")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ProvisionNFVRequestProvisioningItems0Networksettings) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProvisionNFVRequestProvisioningItems0Networksettings) UnmarshalBinary(b []byte) error {
	var res ProvisionNFVRequestProvisioningItems0Networksettings
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ProvisionNFVRequestProvisioningItems0NetworksettingsIPPool provision n f v request provisioning items0 networksettings IP pool
// swagger:model ProvisionNFVRequestProvisioningItems0NetworksettingsIPPool
type ProvisionNFVRequestProvisioningItems0NetworksettingsIPPool struct {

	// global pool
	GlobalPool *ProvisionNFVRequestProvisioningItems0NetworksettingsIPPoolGlobalPool `json:"globalPool,omitempty"`
}

// Validate validates this provision n f v request provisioning items0 networksettings IP pool
func (m *ProvisionNFVRequestProvisioningItems0NetworksettingsIPPool) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateGlobalPool(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ProvisionNFVRequestProvisioningItems0NetworksettingsIPPool) validateGlobalPool(formats strfmt.Registry) error {

	if swag.IsZero(m.GlobalPool) { // not required
		return nil
	}

	if m.GlobalPool != nil {
		if err := m.GlobalPool.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("networksettings" + "." + "ipPool" + "." + "globalPool")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ProvisionNFVRequestProvisioningItems0NetworksettingsIPPool) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProvisionNFVRequestProvisioningItems0NetworksettingsIPPool) UnmarshalBinary(b []byte) error {
	var res ProvisionNFVRequestProvisioningItems0NetworksettingsIPPool
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ProvisionNFVRequestProvisioningItems0NetworksettingsIPPoolGlobalPool provision n f v request provisioning items0 networksettings IP pool global pool
// swagger:model ProvisionNFVRequestProvisioningItems0NetworksettingsIPPoolGlobalPool
type ProvisionNFVRequestProvisioningItems0NetworksettingsIPPoolGlobalPool struct {

	// name
	Name string `json:"name,omitempty"`
}

// Validate validates this provision n f v request provisioning items0 networksettings IP pool global pool
func (m *ProvisionNFVRequestProvisioningItems0NetworksettingsIPPoolGlobalPool) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ProvisionNFVRequestProvisioningItems0NetworksettingsIPPoolGlobalPool) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProvisionNFVRequestProvisioningItems0NetworksettingsIPPoolGlobalPool) UnmarshalBinary(b []byte) error {
	var res ProvisionNFVRequestProvisioningItems0NetworksettingsIPPoolGlobalPool
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ProvisionNFVRequestProvisioningItems0Site provision n f v request provisioning items0 site
// swagger:model ProvisionNFVRequestProvisioningItems0Site
type ProvisionNFVRequestProvisioningItems0Site struct {

	// area
	Area *ProvisionNFVRequestProvisioningItems0SiteArea `json:"area,omitempty"`

	// building
	Building *ProvisionNFVRequestProvisioningItems0SiteBuilding `json:"building,omitempty"`

	// floor
	Floor *ProvisionNFVRequestProvisioningItems0SiteFloor `json:"floor,omitempty"`

	// site profile name
	SiteProfileName string `json:"siteProfileName,omitempty"`
}

// Validate validates this provision n f v request provisioning items0 site
func (m *ProvisionNFVRequestProvisioningItems0Site) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateArea(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateBuilding(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateFloor(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ProvisionNFVRequestProvisioningItems0Site) validateArea(formats strfmt.Registry) error {

	if swag.IsZero(m.Area) { // not required
		return nil
	}

	if m.Area != nil {
		if err := m.Area.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("site" + "." + "area")
			}
			return err
		}
	}

	return nil
}

func (m *ProvisionNFVRequestProvisioningItems0Site) validateBuilding(formats strfmt.Registry) error {

	if swag.IsZero(m.Building) { // not required
		return nil
	}

	if m.Building != nil {
		if err := m.Building.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("site" + "." + "building")
			}
			return err
		}
	}

	return nil
}

func (m *ProvisionNFVRequestProvisioningItems0Site) validateFloor(formats strfmt.Registry) error {

	if swag.IsZero(m.Floor) { // not required
		return nil
	}

	if m.Floor != nil {
		if err := m.Floor.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("site" + "." + "floor")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ProvisionNFVRequestProvisioningItems0Site) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProvisionNFVRequestProvisioningItems0Site) UnmarshalBinary(b []byte) error {
	var res ProvisionNFVRequestProvisioningItems0Site
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ProvisionNFVRequestProvisioningItems0SiteArea provision n f v request provisioning items0 site area
// swagger:model ProvisionNFVRequestProvisioningItems0SiteArea
type ProvisionNFVRequestProvisioningItems0SiteArea struct {

	// name
	Name string `json:"name,omitempty"`

	// parent name
	ParentName string `json:"parentName,omitempty"`
}

// Validate validates this provision n f v request provisioning items0 site area
func (m *ProvisionNFVRequestProvisioningItems0SiteArea) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ProvisionNFVRequestProvisioningItems0SiteArea) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProvisionNFVRequestProvisioningItems0SiteArea) UnmarshalBinary(b []byte) error {
	var res ProvisionNFVRequestProvisioningItems0SiteArea
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ProvisionNFVRequestProvisioningItems0SiteBuilding provision n f v request provisioning items0 site building
// swagger:model ProvisionNFVRequestProvisioningItems0SiteBuilding
type ProvisionNFVRequestProvisioningItems0SiteBuilding struct {

	// address
	Address string `json:"address,omitempty"`

	// name
	Name string `json:"name,omitempty"`
}

// Validate validates this provision n f v request provisioning items0 site building
func (m *ProvisionNFVRequestProvisioningItems0SiteBuilding) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ProvisionNFVRequestProvisioningItems0SiteBuilding) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProvisionNFVRequestProvisioningItems0SiteBuilding) UnmarshalBinary(b []byte) error {
	var res ProvisionNFVRequestProvisioningItems0SiteBuilding
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ProvisionNFVRequestProvisioningItems0SiteFloor provision n f v request provisioning items0 site floor
// swagger:model ProvisionNFVRequestProvisioningItems0SiteFloor
type ProvisionNFVRequestProvisioningItems0SiteFloor struct {

	// name
	Name string `json:"name,omitempty"`

	// parent name
	ParentName string `json:"parentName,omitempty"`
}

// Validate validates this provision n f v request provisioning items0 site floor
func (m *ProvisionNFVRequestProvisioningItems0SiteFloor) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ProvisionNFVRequestProvisioningItems0SiteFloor) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProvisionNFVRequestProvisioningItems0SiteFloor) UnmarshalBinary(b []byte) error {
	var res ProvisionNFVRequestProvisioningItems0SiteFloor
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ProvisionNFVRequestProvisioningItems0TemplateParam provision n f v request provisioning items0 template param
// swagger:model ProvisionNFVRequestProvisioningItems0TemplateParam
type ProvisionNFVRequestProvisioningItems0TemplateParam struct {

	// asav
	Asav *ProvisionNFVRequestProvisioningItems0TemplateParamAsav `json:"asav,omitempty"`

	// nfvis
	Nfvis *ProvisionNFVRequestProvisioningItems0TemplateParamNfvis `json:"nfvis,omitempty"`
}

// Validate validates this provision n f v request provisioning items0 template param
func (m *ProvisionNFVRequestProvisioningItems0TemplateParam) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAsav(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNfvis(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ProvisionNFVRequestProvisioningItems0TemplateParam) validateAsav(formats strfmt.Registry) error {

	if swag.IsZero(m.Asav) { // not required
		return nil
	}

	if m.Asav != nil {
		if err := m.Asav.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("templateParam" + "." + "asav")
			}
			return err
		}
	}

	return nil
}

func (m *ProvisionNFVRequestProvisioningItems0TemplateParam) validateNfvis(formats strfmt.Registry) error {

	if swag.IsZero(m.Nfvis) { // not required
		return nil
	}

	if m.Nfvis != nil {
		if err := m.Nfvis.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("templateParam" + "." + "nfvis")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ProvisionNFVRequestProvisioningItems0TemplateParam) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProvisionNFVRequestProvisioningItems0TemplateParam) UnmarshalBinary(b []byte) error {
	var res ProvisionNFVRequestProvisioningItems0TemplateParam
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ProvisionNFVRequestProvisioningItems0TemplateParamAsav provision n f v request provisioning items0 template param asav
// swagger:model ProvisionNFVRequestProvisioningItems0TemplateParamAsav
type ProvisionNFVRequestProvisioningItems0TemplateParamAsav struct {

	// var1
	Var1 string `json:"var1,omitempty"`
}

// Validate validates this provision n f v request provisioning items0 template param asav
func (m *ProvisionNFVRequestProvisioningItems0TemplateParamAsav) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ProvisionNFVRequestProvisioningItems0TemplateParamAsav) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProvisionNFVRequestProvisioningItems0TemplateParamAsav) UnmarshalBinary(b []byte) error {
	var res ProvisionNFVRequestProvisioningItems0TemplateParamAsav
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ProvisionNFVRequestProvisioningItems0TemplateParamNfvis provision n f v request provisioning items0 template param nfvis
// swagger:model ProvisionNFVRequestProvisioningItems0TemplateParamNfvis
type ProvisionNFVRequestProvisioningItems0TemplateParamNfvis struct {

	// var1
	Var1 string `json:"var1,omitempty"`
}

// Validate validates this provision n f v request provisioning items0 template param nfvis
func (m *ProvisionNFVRequestProvisioningItems0TemplateParamNfvis) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ProvisionNFVRequestProvisioningItems0TemplateParamNfvis) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProvisionNFVRequestProvisioningItems0TemplateParamNfvis) UnmarshalBinary(b []byte) error {
	var res ProvisionNFVRequestProvisioningItems0TemplateParamNfvis
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ProvisionNFVRequestSiteProfileItems0 provision n f v request site profile items0
// swagger:model ProvisionNFVRequestSiteProfileItems0
type ProvisionNFVRequestSiteProfileItems0 struct {

	// custom template
	CustomTemplate []*ProvisionNFVRequestSiteProfileItems0CustomTemplateItems0 `json:"customTemplate"`

	// device
	Device []*ProvisionNFVRequestSiteProfileItems0DeviceItems0 `json:"device"`

	// site profile name
	SiteProfileName string `json:"siteProfileName,omitempty"`
}

// Validate validates this provision n f v request site profile items0
func (m *ProvisionNFVRequestSiteProfileItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCustomTemplate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDevice(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ProvisionNFVRequestSiteProfileItems0) validateCustomTemplate(formats strfmt.Registry) error {

	if swag.IsZero(m.CustomTemplate) { // not required
		return nil
	}

	for i := 0; i < len(m.CustomTemplate); i++ {
		if swag.IsZero(m.CustomTemplate[i]) { // not required
			continue
		}

		if m.CustomTemplate[i] != nil {
			if err := m.CustomTemplate[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("customTemplate" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *ProvisionNFVRequestSiteProfileItems0) validateDevice(formats strfmt.Registry) error {

	if swag.IsZero(m.Device) { // not required
		return nil
	}

	for i := 0; i < len(m.Device); i++ {
		if swag.IsZero(m.Device[i]) { // not required
			continue
		}

		if m.Device[i] != nil {
			if err := m.Device[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("device" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *ProvisionNFVRequestSiteProfileItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProvisionNFVRequestSiteProfileItems0) UnmarshalBinary(b []byte) error {
	var res ProvisionNFVRequestSiteProfileItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ProvisionNFVRequestSiteProfileItems0CustomTemplateItems0 provision n f v request site profile items0 custom template items0
// swagger:model ProvisionNFVRequestSiteProfileItems0CustomTemplateItems0
type ProvisionNFVRequestSiteProfileItems0CustomTemplateItems0 struct {

	// device type
	// Enum: [NFVIS ASAv]
	DeviceType string `json:"deviceType,omitempty"`

	// template
	Template string `json:"template,omitempty"`
}

// Validate validates this provision n f v request site profile items0 custom template items0
func (m *ProvisionNFVRequestSiteProfileItems0CustomTemplateItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDeviceType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var provisionNFVRequestSiteProfileItems0CustomTemplateItems0TypeDeviceTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["NFVIS","ASAv"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		provisionNFVRequestSiteProfileItems0CustomTemplateItems0TypeDeviceTypePropEnum = append(provisionNFVRequestSiteProfileItems0CustomTemplateItems0TypeDeviceTypePropEnum, v)
	}
}

const (

	// ProvisionNFVRequestSiteProfileItems0CustomTemplateItems0DeviceTypeNFVIS captures enum value "NFVIS"
	ProvisionNFVRequestSiteProfileItems0CustomTemplateItems0DeviceTypeNFVIS string = "NFVIS"

	// ProvisionNFVRequestSiteProfileItems0CustomTemplateItems0DeviceTypeASAv captures enum value "ASAv"
	ProvisionNFVRequestSiteProfileItems0CustomTemplateItems0DeviceTypeASAv string = "ASAv"
)

// prop value enum
func (m *ProvisionNFVRequestSiteProfileItems0CustomTemplateItems0) validateDeviceTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, provisionNFVRequestSiteProfileItems0CustomTemplateItems0TypeDeviceTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ProvisionNFVRequestSiteProfileItems0CustomTemplateItems0) validateDeviceType(formats strfmt.Registry) error {

	if swag.IsZero(m.DeviceType) { // not required
		return nil
	}

	// value enum
	if err := m.validateDeviceTypeEnum("deviceType", "body", m.DeviceType); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ProvisionNFVRequestSiteProfileItems0CustomTemplateItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProvisionNFVRequestSiteProfileItems0CustomTemplateItems0) UnmarshalBinary(b []byte) error {
	var res ProvisionNFVRequestSiteProfileItems0CustomTemplateItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ProvisionNFVRequestSiteProfileItems0DeviceItems0 provision n f v request site profile items0 device items0
// swagger:model ProvisionNFVRequestSiteProfileItems0DeviceItems0
type ProvisionNFVRequestSiteProfileItems0DeviceItems0 struct {

	// custom networks
	CustomNetworks []*ProvisionNFVRequestSiteProfileItems0DeviceItems0CustomNetworksItems0 `json:"customNetworks"`

	// custom services
	CustomServices []*ProvisionNFVRequestSiteProfileItems0DeviceItems0CustomServicesItems0 `json:"customServices"`

	// device type
	// Enum: [ENCS5100 ENCS5400]
	DeviceType string `json:"deviceType,omitempty"`

	// dia
	Dia bool `json:"dia,omitempty"`

	// service providers
	ServiceProviders []*ProvisionNFVRequestSiteProfileItems0DeviceItems0ServiceProvidersItems0 `json:"serviceProviders"`

	// services
	Services []*ProvisionNFVRequestSiteProfileItems0DeviceItems0ServicesItems0 `json:"services"`

	// tag name
	TagName string `json:"tagName,omitempty"`

	// vlan
	Vlan []*ProvisionNFVRequestSiteProfileItems0DeviceItems0VlanItems0 `json:"vlan"`
}

// Validate validates this provision n f v request site profile items0 device items0
func (m *ProvisionNFVRequestSiteProfileItems0DeviceItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCustomNetworks(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCustomServices(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDeviceType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateServiceProviders(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateServices(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateVlan(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ProvisionNFVRequestSiteProfileItems0DeviceItems0) validateCustomNetworks(formats strfmt.Registry) error {

	if swag.IsZero(m.CustomNetworks) { // not required
		return nil
	}

	for i := 0; i < len(m.CustomNetworks); i++ {
		if swag.IsZero(m.CustomNetworks[i]) { // not required
			continue
		}

		if m.CustomNetworks[i] != nil {
			if err := m.CustomNetworks[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("customNetworks" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *ProvisionNFVRequestSiteProfileItems0DeviceItems0) validateCustomServices(formats strfmt.Registry) error {

	if swag.IsZero(m.CustomServices) { // not required
		return nil
	}

	for i := 0; i < len(m.CustomServices); i++ {
		if swag.IsZero(m.CustomServices[i]) { // not required
			continue
		}

		if m.CustomServices[i] != nil {
			if err := m.CustomServices[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("customServices" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

var provisionNFVRequestSiteProfileItems0DeviceItems0TypeDeviceTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["ENCS5100","ENCS5400"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		provisionNFVRequestSiteProfileItems0DeviceItems0TypeDeviceTypePropEnum = append(provisionNFVRequestSiteProfileItems0DeviceItems0TypeDeviceTypePropEnum, v)
	}
}

const (

	// ProvisionNFVRequestSiteProfileItems0DeviceItems0DeviceTypeENCS5100 captures enum value "ENCS5100"
	ProvisionNFVRequestSiteProfileItems0DeviceItems0DeviceTypeENCS5100 string = "ENCS5100"

	// ProvisionNFVRequestSiteProfileItems0DeviceItems0DeviceTypeENCS5400 captures enum value "ENCS5400"
	ProvisionNFVRequestSiteProfileItems0DeviceItems0DeviceTypeENCS5400 string = "ENCS5400"
)

// prop value enum
func (m *ProvisionNFVRequestSiteProfileItems0DeviceItems0) validateDeviceTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, provisionNFVRequestSiteProfileItems0DeviceItems0TypeDeviceTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ProvisionNFVRequestSiteProfileItems0DeviceItems0) validateDeviceType(formats strfmt.Registry) error {

	if swag.IsZero(m.DeviceType) { // not required
		return nil
	}

	// value enum
	if err := m.validateDeviceTypeEnum("deviceType", "body", m.DeviceType); err != nil {
		return err
	}

	return nil
}

func (m *ProvisionNFVRequestSiteProfileItems0DeviceItems0) validateServiceProviders(formats strfmt.Registry) error {

	if swag.IsZero(m.ServiceProviders) { // not required
		return nil
	}

	for i := 0; i < len(m.ServiceProviders); i++ {
		if swag.IsZero(m.ServiceProviders[i]) { // not required
			continue
		}

		if m.ServiceProviders[i] != nil {
			if err := m.ServiceProviders[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("serviceProviders" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *ProvisionNFVRequestSiteProfileItems0DeviceItems0) validateServices(formats strfmt.Registry) error {

	if swag.IsZero(m.Services) { // not required
		return nil
	}

	for i := 0; i < len(m.Services); i++ {
		if swag.IsZero(m.Services[i]) { // not required
			continue
		}

		if m.Services[i] != nil {
			if err := m.Services[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("services" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *ProvisionNFVRequestSiteProfileItems0DeviceItems0) validateVlan(formats strfmt.Registry) error {

	if swag.IsZero(m.Vlan) { // not required
		return nil
	}

	for i := 0; i < len(m.Vlan); i++ {
		if swag.IsZero(m.Vlan[i]) { // not required
			continue
		}

		if m.Vlan[i] != nil {
			if err := m.Vlan[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("vlan" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *ProvisionNFVRequestSiteProfileItems0DeviceItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProvisionNFVRequestSiteProfileItems0DeviceItems0) UnmarshalBinary(b []byte) error {
	var res ProvisionNFVRequestSiteProfileItems0DeviceItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ProvisionNFVRequestSiteProfileItems0DeviceItems0CustomNetworksItems0 provision n f v request site profile items0 device items0 custom networks items0
// swagger:model ProvisionNFVRequestSiteProfileItems0DeviceItems0CustomNetworksItems0
type ProvisionNFVRequestSiteProfileItems0DeviceItems0CustomNetworksItems0 struct {

	// name
	Name string `json:"name,omitempty"`

	// services to connect
	ServicesToConnect []*ProvisionNFVRequestSiteProfileItems0DeviceItems0CustomNetworksItems0ServicesToConnectItems0 `json:"servicesToConnect"`
}

// Validate validates this provision n f v request site profile items0 device items0 custom networks items0
func (m *ProvisionNFVRequestSiteProfileItems0DeviceItems0CustomNetworksItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateServicesToConnect(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ProvisionNFVRequestSiteProfileItems0DeviceItems0CustomNetworksItems0) validateServicesToConnect(formats strfmt.Registry) error {

	if swag.IsZero(m.ServicesToConnect) { // not required
		return nil
	}

	for i := 0; i < len(m.ServicesToConnect); i++ {
		if swag.IsZero(m.ServicesToConnect[i]) { // not required
			continue
		}

		if m.ServicesToConnect[i] != nil {
			if err := m.ServicesToConnect[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("servicesToConnect" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *ProvisionNFVRequestSiteProfileItems0DeviceItems0CustomNetworksItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProvisionNFVRequestSiteProfileItems0DeviceItems0CustomNetworksItems0) UnmarshalBinary(b []byte) error {
	var res ProvisionNFVRequestSiteProfileItems0DeviceItems0CustomNetworksItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ProvisionNFVRequestSiteProfileItems0DeviceItems0CustomNetworksItems0ServicesToConnectItems0 provision n f v request site profile items0 device items0 custom networks items0 services to connect items0
// swagger:model ProvisionNFVRequestSiteProfileItems0DeviceItems0CustomNetworksItems0ServicesToConnectItems0
type ProvisionNFVRequestSiteProfileItems0DeviceItems0CustomNetworksItems0ServicesToConnectItems0 struct {

	// service
	Service string `json:"service,omitempty"`
}

// Validate validates this provision n f v request site profile items0 device items0 custom networks items0 services to connect items0
func (m *ProvisionNFVRequestSiteProfileItems0DeviceItems0CustomNetworksItems0ServicesToConnectItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ProvisionNFVRequestSiteProfileItems0DeviceItems0CustomNetworksItems0ServicesToConnectItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProvisionNFVRequestSiteProfileItems0DeviceItems0CustomNetworksItems0ServicesToConnectItems0) UnmarshalBinary(b []byte) error {
	var res ProvisionNFVRequestSiteProfileItems0DeviceItems0CustomNetworksItems0ServicesToConnectItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ProvisionNFVRequestSiteProfileItems0DeviceItems0CustomServicesItems0 provision n f v request site profile items0 device items0 custom services items0
// swagger:model ProvisionNFVRequestSiteProfileItems0DeviceItems0CustomServicesItems0
type ProvisionNFVRequestSiteProfileItems0DeviceItems0CustomServicesItems0 struct {

	// application type
	ApplicationType string `json:"applicationType,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// profile
	Profile string `json:"profile,omitempty"`
}

// Validate validates this provision n f v request site profile items0 device items0 custom services items0
func (m *ProvisionNFVRequestSiteProfileItems0DeviceItems0CustomServicesItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ProvisionNFVRequestSiteProfileItems0DeviceItems0CustomServicesItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProvisionNFVRequestSiteProfileItems0DeviceItems0CustomServicesItems0) UnmarshalBinary(b []byte) error {
	var res ProvisionNFVRequestSiteProfileItems0DeviceItems0CustomServicesItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ProvisionNFVRequestSiteProfileItems0DeviceItems0ServiceProvidersItems0 provision n f v request site profile items0 device items0 service providers items0
// swagger:model ProvisionNFVRequestSiteProfileItems0DeviceItems0ServiceProvidersItems0
type ProvisionNFVRequestSiteProfileItems0DeviceItems0ServiceProvidersItems0 struct {

	// connect
	Connect bool `json:"connect,omitempty"`

	// default gateway
	DefaultGateway bool `json:"defaultGateway,omitempty"`

	// link type
	// Enum: [GigabitEthernet]
	LinkType string `json:"linkType,omitempty"`

	// service provider
	ServiceProvider string `json:"serviceProvider,omitempty"`
}

// Validate validates this provision n f v request site profile items0 device items0 service providers items0
func (m *ProvisionNFVRequestSiteProfileItems0DeviceItems0ServiceProvidersItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLinkType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var provisionNFVRequestSiteProfileItems0DeviceItems0ServiceProvidersItems0TypeLinkTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["GigabitEthernet"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		provisionNFVRequestSiteProfileItems0DeviceItems0ServiceProvidersItems0TypeLinkTypePropEnum = append(provisionNFVRequestSiteProfileItems0DeviceItems0ServiceProvidersItems0TypeLinkTypePropEnum, v)
	}
}

const (

	// ProvisionNFVRequestSiteProfileItems0DeviceItems0ServiceProvidersItems0LinkTypeGigabitEthernet captures enum value "GigabitEthernet"
	ProvisionNFVRequestSiteProfileItems0DeviceItems0ServiceProvidersItems0LinkTypeGigabitEthernet string = "GigabitEthernet"
)

// prop value enum
func (m *ProvisionNFVRequestSiteProfileItems0DeviceItems0ServiceProvidersItems0) validateLinkTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, provisionNFVRequestSiteProfileItems0DeviceItems0ServiceProvidersItems0TypeLinkTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ProvisionNFVRequestSiteProfileItems0DeviceItems0ServiceProvidersItems0) validateLinkType(formats strfmt.Registry) error {

	if swag.IsZero(m.LinkType) { // not required
		return nil
	}

	// value enum
	if err := m.validateLinkTypeEnum("linkType", "body", m.LinkType); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ProvisionNFVRequestSiteProfileItems0DeviceItems0ServiceProvidersItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProvisionNFVRequestSiteProfileItems0DeviceItems0ServiceProvidersItems0) UnmarshalBinary(b []byte) error {
	var res ProvisionNFVRequestSiteProfileItems0DeviceItems0ServiceProvidersItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ProvisionNFVRequestSiteProfileItems0DeviceItems0ServicesItems0 provision n f v request site profile items0 device items0 services items0
// swagger:model ProvisionNFVRequestSiteProfileItems0DeviceItems0ServicesItems0
type ProvisionNFVRequestSiteProfileItems0DeviceItems0ServicesItems0 struct {

	// mode
	Mode string `json:"mode,omitempty"`

	// profile
	Profile string `json:"profile,omitempty"`

	// type
	// Enum: [isr vedge waas asa ngfw paloalto fortinet checkpoint riverbed silverpeak]
	Type string `json:"type,omitempty"`
}

// Validate validates this provision n f v request site profile items0 device items0 services items0
func (m *ProvisionNFVRequestSiteProfileItems0DeviceItems0ServicesItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var provisionNFVRequestSiteProfileItems0DeviceItems0ServicesItems0TypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["isr","vedge","waas","asa","ngfw","paloalto","fortinet","checkpoint","riverbed","silverpeak"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		provisionNFVRequestSiteProfileItems0DeviceItems0ServicesItems0TypeTypePropEnum = append(provisionNFVRequestSiteProfileItems0DeviceItems0ServicesItems0TypeTypePropEnum, v)
	}
}

const (

	// ProvisionNFVRequestSiteProfileItems0DeviceItems0ServicesItems0TypeIsr captures enum value "isr"
	ProvisionNFVRequestSiteProfileItems0DeviceItems0ServicesItems0TypeIsr string = "isr"

	// ProvisionNFVRequestSiteProfileItems0DeviceItems0ServicesItems0TypeVedge captures enum value "vedge"
	ProvisionNFVRequestSiteProfileItems0DeviceItems0ServicesItems0TypeVedge string = "vedge"

	// ProvisionNFVRequestSiteProfileItems0DeviceItems0ServicesItems0TypeWaas captures enum value "waas"
	ProvisionNFVRequestSiteProfileItems0DeviceItems0ServicesItems0TypeWaas string = "waas"

	// ProvisionNFVRequestSiteProfileItems0DeviceItems0ServicesItems0TypeAsa captures enum value "asa"
	ProvisionNFVRequestSiteProfileItems0DeviceItems0ServicesItems0TypeAsa string = "asa"

	// ProvisionNFVRequestSiteProfileItems0DeviceItems0ServicesItems0TypeNgfw captures enum value "ngfw"
	ProvisionNFVRequestSiteProfileItems0DeviceItems0ServicesItems0TypeNgfw string = "ngfw"

	// ProvisionNFVRequestSiteProfileItems0DeviceItems0ServicesItems0TypePaloalto captures enum value "paloalto"
	ProvisionNFVRequestSiteProfileItems0DeviceItems0ServicesItems0TypePaloalto string = "paloalto"

	// ProvisionNFVRequestSiteProfileItems0DeviceItems0ServicesItems0TypeFortinet captures enum value "fortinet"
	ProvisionNFVRequestSiteProfileItems0DeviceItems0ServicesItems0TypeFortinet string = "fortinet"

	// ProvisionNFVRequestSiteProfileItems0DeviceItems0ServicesItems0TypeCheckpoint captures enum value "checkpoint"
	ProvisionNFVRequestSiteProfileItems0DeviceItems0ServicesItems0TypeCheckpoint string = "checkpoint"

	// ProvisionNFVRequestSiteProfileItems0DeviceItems0ServicesItems0TypeRiverbed captures enum value "riverbed"
	ProvisionNFVRequestSiteProfileItems0DeviceItems0ServicesItems0TypeRiverbed string = "riverbed"

	// ProvisionNFVRequestSiteProfileItems0DeviceItems0ServicesItems0TypeSilverpeak captures enum value "silverpeak"
	ProvisionNFVRequestSiteProfileItems0DeviceItems0ServicesItems0TypeSilverpeak string = "silverpeak"
)

// prop value enum
func (m *ProvisionNFVRequestSiteProfileItems0DeviceItems0ServicesItems0) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, provisionNFVRequestSiteProfileItems0DeviceItems0ServicesItems0TypeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ProvisionNFVRequestSiteProfileItems0DeviceItems0ServicesItems0) validateType(formats strfmt.Registry) error {

	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ProvisionNFVRequestSiteProfileItems0DeviceItems0ServicesItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProvisionNFVRequestSiteProfileItems0DeviceItems0ServicesItems0) UnmarshalBinary(b []byte) error {
	var res ProvisionNFVRequestSiteProfileItems0DeviceItems0ServicesItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ProvisionNFVRequestSiteProfileItems0DeviceItems0VlanItems0 provision n f v request site profile items0 device items0 vlan items0
// swagger:model ProvisionNFVRequestSiteProfileItems0DeviceItems0VlanItems0
type ProvisionNFVRequestSiteProfileItems0DeviceItems0VlanItems0 struct {

	// id
	ID string `json:"id,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this provision n f v request site profile items0 device items0 vlan items0
func (m *ProvisionNFVRequestSiteProfileItems0DeviceItems0VlanItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ProvisionNFVRequestSiteProfileItems0DeviceItems0VlanItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProvisionNFVRequestSiteProfileItems0DeviceItems0VlanItems0) UnmarshalBinary(b []byte) error {
	var res ProvisionNFVRequestSiteProfileItems0DeviceItems0VlanItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
