// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ExportDeviceDTO export device d t o
// swagger:model ExportDeviceDTO
type ExportDeviceDTO struct {

	// device uuids
	DeviceUuids []string `json:"deviceUuids"`

	// id
	ID string `json:"id,omitempty"`

	// operation enum
	// Enum: [CREDENTIALDETAILS DEVICEDETAILS]
	OperationEnum string `json:"operationEnum,omitempty"`

	// parameters
	Parameters []string `json:"parameters"`

	// password
	Password string `json:"password,omitempty"`
}

// Validate validates this export device d t o
func (m *ExportDeviceDTO) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateOperationEnum(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var exportDeviceDTOTypeOperationEnumPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["CREDENTIALDETAILS","DEVICEDETAILS"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		exportDeviceDTOTypeOperationEnumPropEnum = append(exportDeviceDTOTypeOperationEnumPropEnum, v)
	}
}

const (

	// ExportDeviceDTOOperationEnumCREDENTIALDETAILS captures enum value "CREDENTIALDETAILS"
	ExportDeviceDTOOperationEnumCREDENTIALDETAILS string = "CREDENTIALDETAILS"

	// ExportDeviceDTOOperationEnumDEVICEDETAILS captures enum value "DEVICEDETAILS"
	ExportDeviceDTOOperationEnumDEVICEDETAILS string = "DEVICEDETAILS"
)

// prop value enum
func (m *ExportDeviceDTO) validateOperationEnumEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, exportDeviceDTOTypeOperationEnumPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ExportDeviceDTO) validateOperationEnum(formats strfmt.Registry) error {

	if swag.IsZero(m.OperationEnum) { // not required
		return nil
	}

	// value enum
	if err := m.validateOperationEnumEnum("operationEnum", "body", m.OperationEnum); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ExportDeviceDTO) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ExportDeviceDTO) UnmarshalBinary(b []byte) error {
	var res ExportDeviceDTO
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
