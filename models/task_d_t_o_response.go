// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// TaskDTOResponse task d t o response
// swagger:model TaskDTOResponse
type TaskDTOResponse struct {

	// response
	Response *TaskDTOResponseResponse `json:"response,omitempty"`

	// version
	Version string `json:"version,omitempty"`
}

// Validate validates this task d t o response
func (m *TaskDTOResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateResponse(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TaskDTOResponse) validateResponse(formats strfmt.Registry) error {

	if swag.IsZero(m.Response) { // not required
		return nil
	}

	if m.Response != nil {
		if err := m.Response.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("response")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TaskDTOResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TaskDTOResponse) UnmarshalBinary(b []byte) error {
	var res TaskDTOResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// TaskDTOResponseResponse task d t o response response
// swagger:model TaskDTOResponseResponse
type TaskDTOResponseResponse struct {

	// additional status URL
	AdditionalStatusURL string `json:"additionalStatusURL,omitempty"`

	// data
	Data string `json:"data,omitempty"`

	// end time
	EndTime string `json:"endTime,omitempty"`

	// error code
	ErrorCode string `json:"errorCode,omitempty"`

	// error key
	ErrorKey string `json:"errorKey,omitempty"`

	// failure reason
	FailureReason string `json:"failureReason,omitempty"`

	// id
	ID string `json:"id,omitempty"`

	// instance tenant Id
	InstanceTenantID string `json:"instanceTenantId,omitempty"`

	// is error
	IsError bool `json:"isError,omitempty"`

	// last update
	LastUpdate string `json:"lastUpdate,omitempty"`

	// operation Id list
	OperationIDList interface{} `json:"operationIdList,omitempty"`

	// parent Id
	ParentID string `json:"parentId,omitempty"`

	// progress
	Progress string `json:"progress,omitempty"`

	// root Id
	RootID string `json:"rootId,omitempty"`

	// service type
	ServiceType string `json:"serviceType,omitempty"`

	// start time
	StartTime string `json:"startTime,omitempty"`

	// username
	Username string `json:"username,omitempty"`

	// version
	Version int64 `json:"version,omitempty"`
}

// Validate validates this task d t o response response
func (m *TaskDTOResponseResponse) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *TaskDTOResponseResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TaskDTOResponseResponse) UnmarshalBinary(b []byte) error {
	var res TaskDTOResponseResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
