// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SNMPvReadCommunityDTO s n m pv read community d t o
// swagger:model SNMPvReadCommunityDTO
type SNMPvReadCommunityDTO []*SNMPvReadCommunityDTOItems0

// Validate validates this s n m pv read community d t o
func (m SNMPvReadCommunityDTO) Validate(formats strfmt.Registry) error {
	var res []error

	for i := 0; i < len(m); i++ {
		if swag.IsZero(m[i]) { // not required
			continue
		}

		if m[i] != nil {
			if err := m[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName(strconv.Itoa(i))
				}
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// SNMPvReadCommunityDTOItems0 s n m pv read community d t o items0
// swagger:model SNMPvReadCommunityDTOItems0
type SNMPvReadCommunityDTOItems0 struct {

	// comments
	Comments string `json:"comments,omitempty"`

	// credential type
	// Enum: [GLOBAL APP]
	CredentialType string `json:"credentialType,omitempty"`

	// description
	Description string `json:"description,omitempty"`

	// id
	ID string `json:"id,omitempty"`

	// instance tenant Id
	InstanceTenantID string `json:"instanceTenantId,omitempty"`

	// instance Uuid
	InstanceUUID string `json:"instanceUuid,omitempty"`

	// read community
	ReadCommunity string `json:"readCommunity,omitempty"`
}

// Validate validates this s n m pv read community d t o items0
func (m *SNMPvReadCommunityDTOItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCredentialType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var sNMPvReadCommunityDTOItems0TypeCredentialTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["GLOBAL","APP"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		sNMPvReadCommunityDTOItems0TypeCredentialTypePropEnum = append(sNMPvReadCommunityDTOItems0TypeCredentialTypePropEnum, v)
	}
}

const (

	// SNMPvReadCommunityDTOItems0CredentialTypeGLOBAL captures enum value "GLOBAL"
	SNMPvReadCommunityDTOItems0CredentialTypeGLOBAL string = "GLOBAL"

	// SNMPvReadCommunityDTOItems0CredentialTypeAPP captures enum value "APP"
	SNMPvReadCommunityDTOItems0CredentialTypeAPP string = "APP"
)

// prop value enum
func (m *SNMPvReadCommunityDTOItems0) validateCredentialTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, sNMPvReadCommunityDTOItems0TypeCredentialTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *SNMPvReadCommunityDTOItems0) validateCredentialType(formats strfmt.Registry) error {

	if swag.IsZero(m.CredentialType) { // not required
		return nil
	}

	// value enum
	if err := m.validateCredentialTypeEnum("credentialType", "body", m.CredentialType); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *SNMPvReadCommunityDTOItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SNMPvReadCommunityDTOItems0) UnmarshalBinary(b []byte) error {
	var res SNMPvReadCommunityDTOItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
