// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// SyncVirtualAccountDevicesResponse sync virtual account devices response
// swagger:model SyncVirtualAccountDevicesResponse
type SyncVirtualAccountDevicesResponse struct {

	// auto sync period
	AutoSyncPeriod float64 `json:"autoSyncPeriod,omitempty"`

	// cco user
	CcoUser string `json:"ccoUser,omitempty"`

	// expiry
	Expiry float64 `json:"expiry,omitempty"`

	// last sync
	LastSync float64 `json:"lastSync,omitempty"`

	// profile
	Profile *SyncVirtualAccountDevicesResponseProfile `json:"profile,omitempty"`

	// smart account Id
	SmartAccountID string `json:"smartAccountId,omitempty"`

	// sync result
	SyncResult *SyncVirtualAccountDevicesResponseSyncResult `json:"syncResult,omitempty"`

	// sync result str
	SyncResultStr string `json:"syncResultStr,omitempty"`

	// sync start time
	SyncStartTime float64 `json:"syncStartTime,omitempty"`

	// sync status
	SyncStatus string `json:"syncStatus,omitempty"`

	// tenant Id
	TenantID string `json:"tenantId,omitempty"`

	// token
	Token string `json:"token,omitempty"`

	// virtual account Id
	VirtualAccountID string `json:"virtualAccountId,omitempty"`
}

// Validate validates this sync virtual account devices response
func (m *SyncVirtualAccountDevicesResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateProfile(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSyncResult(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SyncVirtualAccountDevicesResponse) validateProfile(formats strfmt.Registry) error {

	if swag.IsZero(m.Profile) { // not required
		return nil
	}

	if m.Profile != nil {
		if err := m.Profile.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("profile")
			}
			return err
		}
	}

	return nil
}

func (m *SyncVirtualAccountDevicesResponse) validateSyncResult(formats strfmt.Registry) error {

	if swag.IsZero(m.SyncResult) { // not required
		return nil
	}

	if m.SyncResult != nil {
		if err := m.SyncResult.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("syncResult")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *SyncVirtualAccountDevicesResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SyncVirtualAccountDevicesResponse) UnmarshalBinary(b []byte) error {
	var res SyncVirtualAccountDevicesResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// SyncVirtualAccountDevicesResponseProfile sync virtual account devices response profile
// swagger:model SyncVirtualAccountDevicesResponseProfile
type SyncVirtualAccountDevicesResponseProfile struct {

	// address fqdn
	AddressFqdn string `json:"addressFqdn,omitempty"`

	// address Ip v4
	AddressIPV4 string `json:"addressIpV4,omitempty"`

	// cert
	Cert string `json:"cert,omitempty"`

	// make default
	MakeDefault bool `json:"makeDefault,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// port
	Port float64 `json:"port,omitempty"`

	// profile Id
	ProfileID string `json:"profileId,omitempty"`

	// proxy
	Proxy bool `json:"proxy,omitempty"`
}

// Validate validates this sync virtual account devices response profile
func (m *SyncVirtualAccountDevicesResponseProfile) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SyncVirtualAccountDevicesResponseProfile) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SyncVirtualAccountDevicesResponseProfile) UnmarshalBinary(b []byte) error {
	var res SyncVirtualAccountDevicesResponseProfile
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// SyncVirtualAccountDevicesResponseSyncResult sync virtual account devices response sync result
// swagger:model SyncVirtualAccountDevicesResponseSyncResult
type SyncVirtualAccountDevicesResponseSyncResult struct {

	// sync list
	SyncList []*SyncVirtualAccountDevicesResponseSyncResultSyncListItems0 `json:"syncList"`

	// sync msg
	SyncMsg string `json:"syncMsg,omitempty"`
}

// Validate validates this sync virtual account devices response sync result
func (m *SyncVirtualAccountDevicesResponseSyncResult) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSyncList(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SyncVirtualAccountDevicesResponseSyncResult) validateSyncList(formats strfmt.Registry) error {

	if swag.IsZero(m.SyncList) { // not required
		return nil
	}

	for i := 0; i < len(m.SyncList); i++ {
		if swag.IsZero(m.SyncList[i]) { // not required
			continue
		}

		if m.SyncList[i] != nil {
			if err := m.SyncList[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("syncResult" + "." + "syncList" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *SyncVirtualAccountDevicesResponseSyncResult) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SyncVirtualAccountDevicesResponseSyncResult) UnmarshalBinary(b []byte) error {
	var res SyncVirtualAccountDevicesResponseSyncResult
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// SyncVirtualAccountDevicesResponseSyncResultSyncListItems0 sync virtual account devices response sync result sync list items0
// swagger:model SyncVirtualAccountDevicesResponseSyncResultSyncListItems0
type SyncVirtualAccountDevicesResponseSyncResultSyncListItems0 struct {

	// device sn list
	DeviceSnList []string `json:"deviceSnList"`

	// sync type
	SyncType string `json:"syncType,omitempty"`
}

// Validate validates this sync virtual account devices response sync result sync list items0
func (m *SyncVirtualAccountDevicesResponseSyncResultSyncListItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SyncVirtualAccountDevicesResponseSyncResultSyncListItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SyncVirtualAccountDevicesResponseSyncResultSyncListItems0) UnmarshalBinary(b []byte) error {
	var res SyncVirtualAccountDevicesResponseSyncResultSyncListItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
