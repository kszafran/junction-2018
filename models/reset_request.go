// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// ResetRequest reset request
// swagger:model ResetRequest
type ResetRequest struct {

	// device reset list
	DeviceResetList []*ResetRequestDeviceResetListItems0 `json:"deviceResetList"`

	// project Id
	ProjectID string `json:"projectId,omitempty"`

	// workflow Id
	WorkflowID string `json:"workflowId,omitempty"`
}

// Validate validates this reset request
func (m *ResetRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDeviceResetList(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ResetRequest) validateDeviceResetList(formats strfmt.Registry) error {

	if swag.IsZero(m.DeviceResetList) { // not required
		return nil
	}

	for i := 0; i < len(m.DeviceResetList); i++ {
		if swag.IsZero(m.DeviceResetList[i]) { // not required
			continue
		}

		if m.DeviceResetList[i] != nil {
			if err := m.DeviceResetList[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("deviceResetList" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *ResetRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ResetRequest) UnmarshalBinary(b []byte) error {
	var res ResetRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ResetRequestDeviceResetListItems0 reset request device reset list items0
// swagger:model ResetRequestDeviceResetListItems0
type ResetRequestDeviceResetListItems0 struct {

	// config list
	ConfigList []*ResetRequestDeviceResetListItems0ConfigListItems0 `json:"configList"`

	// device Id
	DeviceID string `json:"deviceId,omitempty"`

	// license level
	LicenseLevel string `json:"licenseLevel,omitempty"`

	// license type
	LicenseType string `json:"licenseType,omitempty"`

	// top of stack serial number
	TopOfStackSerialNumber string `json:"topOfStackSerialNumber,omitempty"`
}

// Validate validates this reset request device reset list items0
func (m *ResetRequestDeviceResetListItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateConfigList(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ResetRequestDeviceResetListItems0) validateConfigList(formats strfmt.Registry) error {

	if swag.IsZero(m.ConfigList) { // not required
		return nil
	}

	for i := 0; i < len(m.ConfigList); i++ {
		if swag.IsZero(m.ConfigList[i]) { // not required
			continue
		}

		if m.ConfigList[i] != nil {
			if err := m.ConfigList[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("configList" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *ResetRequestDeviceResetListItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ResetRequestDeviceResetListItems0) UnmarshalBinary(b []byte) error {
	var res ResetRequestDeviceResetListItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ResetRequestDeviceResetListItems0ConfigListItems0 reset request device reset list items0 config list items0
// swagger:model ResetRequestDeviceResetListItems0ConfigListItems0
type ResetRequestDeviceResetListItems0ConfigListItems0 struct {

	// config Id
	ConfigID string `json:"configId,omitempty"`

	// config parameters
	ConfigParameters []*ResetRequestDeviceResetListItems0ConfigListItems0ConfigParametersItems0 `json:"configParameters"`
}

// Validate validates this reset request device reset list items0 config list items0
func (m *ResetRequestDeviceResetListItems0ConfigListItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateConfigParameters(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ResetRequestDeviceResetListItems0ConfigListItems0) validateConfigParameters(formats strfmt.Registry) error {

	if swag.IsZero(m.ConfigParameters) { // not required
		return nil
	}

	for i := 0; i < len(m.ConfigParameters); i++ {
		if swag.IsZero(m.ConfigParameters[i]) { // not required
			continue
		}

		if m.ConfigParameters[i] != nil {
			if err := m.ConfigParameters[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("configParameters" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *ResetRequestDeviceResetListItems0ConfigListItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ResetRequestDeviceResetListItems0ConfigListItems0) UnmarshalBinary(b []byte) error {
	var res ResetRequestDeviceResetListItems0ConfigListItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ResetRequestDeviceResetListItems0ConfigListItems0ConfigParametersItems0 reset request device reset list items0 config list items0 config parameters items0
// swagger:model ResetRequestDeviceResetListItems0ConfigListItems0ConfigParametersItems0
type ResetRequestDeviceResetListItems0ConfigListItems0ConfigParametersItems0 struct {

	// key
	Key string `json:"key,omitempty"`

	// value
	Value string `json:"value,omitempty"`
}

// Validate validates this reset request device reset list items0 config list items0 config parameters items0
func (m *ResetRequestDeviceResetListItems0ConfigListItems0ConfigParametersItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ResetRequestDeviceResetListItems0ConfigListItems0ConfigParametersItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ResetRequestDeviceResetListItems0ConfigListItems0ConfigParametersItems0) UnmarshalBinary(b []byte) error {
	var res ResetRequestDeviceResetListItems0ConfigListItems0ConfigParametersItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
