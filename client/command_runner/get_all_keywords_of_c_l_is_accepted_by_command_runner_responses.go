// Code generated by go-swagger; DO NOT EDIT.

package command_runner

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// GetAllKeywordsOfCLIsAcceptedByCommandRunnerReader is a Reader for the GetAllKeywordsOfCLIsAcceptedByCommandRunner structure.
type GetAllKeywordsOfCLIsAcceptedByCommandRunnerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllKeywordsOfCLIsAcceptedByCommandRunnerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetAllKeywordsOfCLIsAcceptedByCommandRunnerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewGetAllKeywordsOfCLIsAcceptedByCommandRunnerNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewGetAllKeywordsOfCLIsAcceptedByCommandRunnerPartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetAllKeywordsOfCLIsAcceptedByCommandRunnerBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetAllKeywordsOfCLIsAcceptedByCommandRunnerUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetAllKeywordsOfCLIsAcceptedByCommandRunnerForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetAllKeywordsOfCLIsAcceptedByCommandRunnerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewGetAllKeywordsOfCLIsAcceptedByCommandRunnerConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewGetAllKeywordsOfCLIsAcceptedByCommandRunnerUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetAllKeywordsOfCLIsAcceptedByCommandRunnerInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewGetAllKeywordsOfCLIsAcceptedByCommandRunnerNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetAllKeywordsOfCLIsAcceptedByCommandRunnerServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetAllKeywordsOfCLIsAcceptedByCommandRunnerGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetAllKeywordsOfCLIsAcceptedByCommandRunnerOK creates a GetAllKeywordsOfCLIsAcceptedByCommandRunnerOK with default headers values
func NewGetAllKeywordsOfCLIsAcceptedByCommandRunnerOK() *GetAllKeywordsOfCLIsAcceptedByCommandRunnerOK {
	return &GetAllKeywordsOfCLIsAcceptedByCommandRunnerOK{}
}

/*GetAllKeywordsOfCLIsAcceptedByCommandRunnerOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type GetAllKeywordsOfCLIsAcceptedByCommandRunnerOK struct {
	Payload *models.LegitCliKeyResult
}

func (o *GetAllKeywordsOfCLIsAcceptedByCommandRunnerOK) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device-poller/cli/legit-reads][%d] getAllKeywordsOfCLIsAcceptedByCommandRunnerOK  %+v", 200, o.Payload)
}

func (o *GetAllKeywordsOfCLIsAcceptedByCommandRunnerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LegitCliKeyResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllKeywordsOfCLIsAcceptedByCommandRunnerNoContent creates a GetAllKeywordsOfCLIsAcceptedByCommandRunnerNoContent with default headers values
func NewGetAllKeywordsOfCLIsAcceptedByCommandRunnerNoContent() *GetAllKeywordsOfCLIsAcceptedByCommandRunnerNoContent {
	return &GetAllKeywordsOfCLIsAcceptedByCommandRunnerNoContent{}
}

/*GetAllKeywordsOfCLIsAcceptedByCommandRunnerNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type GetAllKeywordsOfCLIsAcceptedByCommandRunnerNoContent struct {
}

func (o *GetAllKeywordsOfCLIsAcceptedByCommandRunnerNoContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device-poller/cli/legit-reads][%d] getAllKeywordsOfCLIsAcceptedByCommandRunnerNoContent ", 204)
}

func (o *GetAllKeywordsOfCLIsAcceptedByCommandRunnerNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllKeywordsOfCLIsAcceptedByCommandRunnerPartialContent creates a GetAllKeywordsOfCLIsAcceptedByCommandRunnerPartialContent with default headers values
func NewGetAllKeywordsOfCLIsAcceptedByCommandRunnerPartialContent() *GetAllKeywordsOfCLIsAcceptedByCommandRunnerPartialContent {
	return &GetAllKeywordsOfCLIsAcceptedByCommandRunnerPartialContent{}
}

/*GetAllKeywordsOfCLIsAcceptedByCommandRunnerPartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type GetAllKeywordsOfCLIsAcceptedByCommandRunnerPartialContent struct {
}

func (o *GetAllKeywordsOfCLIsAcceptedByCommandRunnerPartialContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device-poller/cli/legit-reads][%d] getAllKeywordsOfCLIsAcceptedByCommandRunnerPartialContent ", 206)
}

func (o *GetAllKeywordsOfCLIsAcceptedByCommandRunnerPartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllKeywordsOfCLIsAcceptedByCommandRunnerBadRequest creates a GetAllKeywordsOfCLIsAcceptedByCommandRunnerBadRequest with default headers values
func NewGetAllKeywordsOfCLIsAcceptedByCommandRunnerBadRequest() *GetAllKeywordsOfCLIsAcceptedByCommandRunnerBadRequest {
	return &GetAllKeywordsOfCLIsAcceptedByCommandRunnerBadRequest{}
}

/*GetAllKeywordsOfCLIsAcceptedByCommandRunnerBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type GetAllKeywordsOfCLIsAcceptedByCommandRunnerBadRequest struct {
}

func (o *GetAllKeywordsOfCLIsAcceptedByCommandRunnerBadRequest) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device-poller/cli/legit-reads][%d] getAllKeywordsOfCLIsAcceptedByCommandRunnerBadRequest ", 400)
}

func (o *GetAllKeywordsOfCLIsAcceptedByCommandRunnerBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllKeywordsOfCLIsAcceptedByCommandRunnerUnauthorized creates a GetAllKeywordsOfCLIsAcceptedByCommandRunnerUnauthorized with default headers values
func NewGetAllKeywordsOfCLIsAcceptedByCommandRunnerUnauthorized() *GetAllKeywordsOfCLIsAcceptedByCommandRunnerUnauthorized {
	return &GetAllKeywordsOfCLIsAcceptedByCommandRunnerUnauthorized{}
}

/*GetAllKeywordsOfCLIsAcceptedByCommandRunnerUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type GetAllKeywordsOfCLIsAcceptedByCommandRunnerUnauthorized struct {
}

func (o *GetAllKeywordsOfCLIsAcceptedByCommandRunnerUnauthorized) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device-poller/cli/legit-reads][%d] getAllKeywordsOfCLIsAcceptedByCommandRunnerUnauthorized ", 401)
}

func (o *GetAllKeywordsOfCLIsAcceptedByCommandRunnerUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllKeywordsOfCLIsAcceptedByCommandRunnerForbidden creates a GetAllKeywordsOfCLIsAcceptedByCommandRunnerForbidden with default headers values
func NewGetAllKeywordsOfCLIsAcceptedByCommandRunnerForbidden() *GetAllKeywordsOfCLIsAcceptedByCommandRunnerForbidden {
	return &GetAllKeywordsOfCLIsAcceptedByCommandRunnerForbidden{}
}

/*GetAllKeywordsOfCLIsAcceptedByCommandRunnerForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type GetAllKeywordsOfCLIsAcceptedByCommandRunnerForbidden struct {
}

func (o *GetAllKeywordsOfCLIsAcceptedByCommandRunnerForbidden) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device-poller/cli/legit-reads][%d] getAllKeywordsOfCLIsAcceptedByCommandRunnerForbidden ", 403)
}

func (o *GetAllKeywordsOfCLIsAcceptedByCommandRunnerForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllKeywordsOfCLIsAcceptedByCommandRunnerNotFound creates a GetAllKeywordsOfCLIsAcceptedByCommandRunnerNotFound with default headers values
func NewGetAllKeywordsOfCLIsAcceptedByCommandRunnerNotFound() *GetAllKeywordsOfCLIsAcceptedByCommandRunnerNotFound {
	return &GetAllKeywordsOfCLIsAcceptedByCommandRunnerNotFound{}
}

/*GetAllKeywordsOfCLIsAcceptedByCommandRunnerNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type GetAllKeywordsOfCLIsAcceptedByCommandRunnerNotFound struct {
}

func (o *GetAllKeywordsOfCLIsAcceptedByCommandRunnerNotFound) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device-poller/cli/legit-reads][%d] getAllKeywordsOfCLIsAcceptedByCommandRunnerNotFound ", 404)
}

func (o *GetAllKeywordsOfCLIsAcceptedByCommandRunnerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllKeywordsOfCLIsAcceptedByCommandRunnerConflict creates a GetAllKeywordsOfCLIsAcceptedByCommandRunnerConflict with default headers values
func NewGetAllKeywordsOfCLIsAcceptedByCommandRunnerConflict() *GetAllKeywordsOfCLIsAcceptedByCommandRunnerConflict {
	return &GetAllKeywordsOfCLIsAcceptedByCommandRunnerConflict{}
}

/*GetAllKeywordsOfCLIsAcceptedByCommandRunnerConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type GetAllKeywordsOfCLIsAcceptedByCommandRunnerConflict struct {
}

func (o *GetAllKeywordsOfCLIsAcceptedByCommandRunnerConflict) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device-poller/cli/legit-reads][%d] getAllKeywordsOfCLIsAcceptedByCommandRunnerConflict ", 409)
}

func (o *GetAllKeywordsOfCLIsAcceptedByCommandRunnerConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllKeywordsOfCLIsAcceptedByCommandRunnerUnsupportedMediaType creates a GetAllKeywordsOfCLIsAcceptedByCommandRunnerUnsupportedMediaType with default headers values
func NewGetAllKeywordsOfCLIsAcceptedByCommandRunnerUnsupportedMediaType() *GetAllKeywordsOfCLIsAcceptedByCommandRunnerUnsupportedMediaType {
	return &GetAllKeywordsOfCLIsAcceptedByCommandRunnerUnsupportedMediaType{}
}

/*GetAllKeywordsOfCLIsAcceptedByCommandRunnerUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type GetAllKeywordsOfCLIsAcceptedByCommandRunnerUnsupportedMediaType struct {
}

func (o *GetAllKeywordsOfCLIsAcceptedByCommandRunnerUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device-poller/cli/legit-reads][%d] getAllKeywordsOfCLIsAcceptedByCommandRunnerUnsupportedMediaType ", 415)
}

func (o *GetAllKeywordsOfCLIsAcceptedByCommandRunnerUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllKeywordsOfCLIsAcceptedByCommandRunnerInternalServerError creates a GetAllKeywordsOfCLIsAcceptedByCommandRunnerInternalServerError with default headers values
func NewGetAllKeywordsOfCLIsAcceptedByCommandRunnerInternalServerError() *GetAllKeywordsOfCLIsAcceptedByCommandRunnerInternalServerError {
	return &GetAllKeywordsOfCLIsAcceptedByCommandRunnerInternalServerError{}
}

/*GetAllKeywordsOfCLIsAcceptedByCommandRunnerInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type GetAllKeywordsOfCLIsAcceptedByCommandRunnerInternalServerError struct {
}

func (o *GetAllKeywordsOfCLIsAcceptedByCommandRunnerInternalServerError) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device-poller/cli/legit-reads][%d] getAllKeywordsOfCLIsAcceptedByCommandRunnerInternalServerError ", 500)
}

func (o *GetAllKeywordsOfCLIsAcceptedByCommandRunnerInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllKeywordsOfCLIsAcceptedByCommandRunnerNotImplemented creates a GetAllKeywordsOfCLIsAcceptedByCommandRunnerNotImplemented with default headers values
func NewGetAllKeywordsOfCLIsAcceptedByCommandRunnerNotImplemented() *GetAllKeywordsOfCLIsAcceptedByCommandRunnerNotImplemented {
	return &GetAllKeywordsOfCLIsAcceptedByCommandRunnerNotImplemented{}
}

/*GetAllKeywordsOfCLIsAcceptedByCommandRunnerNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type GetAllKeywordsOfCLIsAcceptedByCommandRunnerNotImplemented struct {
}

func (o *GetAllKeywordsOfCLIsAcceptedByCommandRunnerNotImplemented) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device-poller/cli/legit-reads][%d] getAllKeywordsOfCLIsAcceptedByCommandRunnerNotImplemented ", 501)
}

func (o *GetAllKeywordsOfCLIsAcceptedByCommandRunnerNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllKeywordsOfCLIsAcceptedByCommandRunnerServiceUnavailable creates a GetAllKeywordsOfCLIsAcceptedByCommandRunnerServiceUnavailable with default headers values
func NewGetAllKeywordsOfCLIsAcceptedByCommandRunnerServiceUnavailable() *GetAllKeywordsOfCLIsAcceptedByCommandRunnerServiceUnavailable {
	return &GetAllKeywordsOfCLIsAcceptedByCommandRunnerServiceUnavailable{}
}

/*GetAllKeywordsOfCLIsAcceptedByCommandRunnerServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type GetAllKeywordsOfCLIsAcceptedByCommandRunnerServiceUnavailable struct {
}

func (o *GetAllKeywordsOfCLIsAcceptedByCommandRunnerServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device-poller/cli/legit-reads][%d] getAllKeywordsOfCLIsAcceptedByCommandRunnerServiceUnavailable ", 503)
}

func (o *GetAllKeywordsOfCLIsAcceptedByCommandRunnerServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllKeywordsOfCLIsAcceptedByCommandRunnerGatewayTimeout creates a GetAllKeywordsOfCLIsAcceptedByCommandRunnerGatewayTimeout with default headers values
func NewGetAllKeywordsOfCLIsAcceptedByCommandRunnerGatewayTimeout() *GetAllKeywordsOfCLIsAcceptedByCommandRunnerGatewayTimeout {
	return &GetAllKeywordsOfCLIsAcceptedByCommandRunnerGatewayTimeout{}
}

/*GetAllKeywordsOfCLIsAcceptedByCommandRunnerGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type GetAllKeywordsOfCLIsAcceptedByCommandRunnerGatewayTimeout struct {
}

func (o *GetAllKeywordsOfCLIsAcceptedByCommandRunnerGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device-poller/cli/legit-reads][%d] getAllKeywordsOfCLIsAcceptedByCommandRunnerGatewayTimeout ", 504)
}

func (o *GetAllKeywordsOfCLIsAcceptedByCommandRunnerGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
