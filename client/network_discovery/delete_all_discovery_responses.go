// Code generated by go-swagger; DO NOT EDIT.

package network_discovery

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// DeleteAllDiscoveryReader is a Reader for the DeleteAllDiscovery structure.
type DeleteAllDiscoveryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteAllDiscoveryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeleteAllDiscoveryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewDeleteAllDiscoveryNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewDeleteAllDiscoveryPartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDeleteAllDiscoveryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewDeleteAllDiscoveryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewDeleteAllDiscoveryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteAllDiscoveryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewDeleteAllDiscoveryConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewDeleteAllDiscoveryUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewDeleteAllDiscoveryInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewDeleteAllDiscoveryNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewDeleteAllDiscoveryServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewDeleteAllDiscoveryGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteAllDiscoveryOK creates a DeleteAllDiscoveryOK with default headers values
func NewDeleteAllDiscoveryOK() *DeleteAllDiscoveryOK {
	return &DeleteAllDiscoveryOK{}
}

/*DeleteAllDiscoveryOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type DeleteAllDiscoveryOK struct {
	Payload *models.TaskIDResult
}

func (o *DeleteAllDiscoveryOK) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/discovery][%d] deleteAllDiscoveryOK  %+v", 200, o.Payload)
}

func (o *DeleteAllDiscoveryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TaskIDResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAllDiscoveryNoContent creates a DeleteAllDiscoveryNoContent with default headers values
func NewDeleteAllDiscoveryNoContent() *DeleteAllDiscoveryNoContent {
	return &DeleteAllDiscoveryNoContent{}
}

/*DeleteAllDiscoveryNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type DeleteAllDiscoveryNoContent struct {
}

func (o *DeleteAllDiscoveryNoContent) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/discovery][%d] deleteAllDiscoveryNoContent ", 204)
}

func (o *DeleteAllDiscoveryNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteAllDiscoveryPartialContent creates a DeleteAllDiscoveryPartialContent with default headers values
func NewDeleteAllDiscoveryPartialContent() *DeleteAllDiscoveryPartialContent {
	return &DeleteAllDiscoveryPartialContent{}
}

/*DeleteAllDiscoveryPartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type DeleteAllDiscoveryPartialContent struct {
}

func (o *DeleteAllDiscoveryPartialContent) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/discovery][%d] deleteAllDiscoveryPartialContent ", 206)
}

func (o *DeleteAllDiscoveryPartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteAllDiscoveryBadRequest creates a DeleteAllDiscoveryBadRequest with default headers values
func NewDeleteAllDiscoveryBadRequest() *DeleteAllDiscoveryBadRequest {
	return &DeleteAllDiscoveryBadRequest{}
}

/*DeleteAllDiscoveryBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type DeleteAllDiscoveryBadRequest struct {
}

func (o *DeleteAllDiscoveryBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/discovery][%d] deleteAllDiscoveryBadRequest ", 400)
}

func (o *DeleteAllDiscoveryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteAllDiscoveryUnauthorized creates a DeleteAllDiscoveryUnauthorized with default headers values
func NewDeleteAllDiscoveryUnauthorized() *DeleteAllDiscoveryUnauthorized {
	return &DeleteAllDiscoveryUnauthorized{}
}

/*DeleteAllDiscoveryUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type DeleteAllDiscoveryUnauthorized struct {
}

func (o *DeleteAllDiscoveryUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/discovery][%d] deleteAllDiscoveryUnauthorized ", 401)
}

func (o *DeleteAllDiscoveryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteAllDiscoveryForbidden creates a DeleteAllDiscoveryForbidden with default headers values
func NewDeleteAllDiscoveryForbidden() *DeleteAllDiscoveryForbidden {
	return &DeleteAllDiscoveryForbidden{}
}

/*DeleteAllDiscoveryForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type DeleteAllDiscoveryForbidden struct {
}

func (o *DeleteAllDiscoveryForbidden) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/discovery][%d] deleteAllDiscoveryForbidden ", 403)
}

func (o *DeleteAllDiscoveryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteAllDiscoveryNotFound creates a DeleteAllDiscoveryNotFound with default headers values
func NewDeleteAllDiscoveryNotFound() *DeleteAllDiscoveryNotFound {
	return &DeleteAllDiscoveryNotFound{}
}

/*DeleteAllDiscoveryNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type DeleteAllDiscoveryNotFound struct {
}

func (o *DeleteAllDiscoveryNotFound) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/discovery][%d] deleteAllDiscoveryNotFound ", 404)
}

func (o *DeleteAllDiscoveryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteAllDiscoveryConflict creates a DeleteAllDiscoveryConflict with default headers values
func NewDeleteAllDiscoveryConflict() *DeleteAllDiscoveryConflict {
	return &DeleteAllDiscoveryConflict{}
}

/*DeleteAllDiscoveryConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type DeleteAllDiscoveryConflict struct {
}

func (o *DeleteAllDiscoveryConflict) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/discovery][%d] deleteAllDiscoveryConflict ", 409)
}

func (o *DeleteAllDiscoveryConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteAllDiscoveryUnsupportedMediaType creates a DeleteAllDiscoveryUnsupportedMediaType with default headers values
func NewDeleteAllDiscoveryUnsupportedMediaType() *DeleteAllDiscoveryUnsupportedMediaType {
	return &DeleteAllDiscoveryUnsupportedMediaType{}
}

/*DeleteAllDiscoveryUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type DeleteAllDiscoveryUnsupportedMediaType struct {
}

func (o *DeleteAllDiscoveryUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/discovery][%d] deleteAllDiscoveryUnsupportedMediaType ", 415)
}

func (o *DeleteAllDiscoveryUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteAllDiscoveryInternalServerError creates a DeleteAllDiscoveryInternalServerError with default headers values
func NewDeleteAllDiscoveryInternalServerError() *DeleteAllDiscoveryInternalServerError {
	return &DeleteAllDiscoveryInternalServerError{}
}

/*DeleteAllDiscoveryInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type DeleteAllDiscoveryInternalServerError struct {
}

func (o *DeleteAllDiscoveryInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/discovery][%d] deleteAllDiscoveryInternalServerError ", 500)
}

func (o *DeleteAllDiscoveryInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteAllDiscoveryNotImplemented creates a DeleteAllDiscoveryNotImplemented with default headers values
func NewDeleteAllDiscoveryNotImplemented() *DeleteAllDiscoveryNotImplemented {
	return &DeleteAllDiscoveryNotImplemented{}
}

/*DeleteAllDiscoveryNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type DeleteAllDiscoveryNotImplemented struct {
}

func (o *DeleteAllDiscoveryNotImplemented) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/discovery][%d] deleteAllDiscoveryNotImplemented ", 501)
}

func (o *DeleteAllDiscoveryNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteAllDiscoveryServiceUnavailable creates a DeleteAllDiscoveryServiceUnavailable with default headers values
func NewDeleteAllDiscoveryServiceUnavailable() *DeleteAllDiscoveryServiceUnavailable {
	return &DeleteAllDiscoveryServiceUnavailable{}
}

/*DeleteAllDiscoveryServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type DeleteAllDiscoveryServiceUnavailable struct {
}

func (o *DeleteAllDiscoveryServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/discovery][%d] deleteAllDiscoveryServiceUnavailable ", 503)
}

func (o *DeleteAllDiscoveryServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteAllDiscoveryGatewayTimeout creates a DeleteAllDiscoveryGatewayTimeout with default headers values
func NewDeleteAllDiscoveryGatewayTimeout() *DeleteAllDiscoveryGatewayTimeout {
	return &DeleteAllDiscoveryGatewayTimeout{}
}

/*DeleteAllDiscoveryGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type DeleteAllDiscoveryGatewayTimeout struct {
}

func (o *DeleteAllDiscoveryGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/discovery][%d] deleteAllDiscoveryGatewayTimeout ", 504)
}

func (o *DeleteAllDiscoveryGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
