// Code generated by go-swagger; DO NOT EDIT.

package network_discovery

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// GetDevicesDiscoveredByIDReader is a Reader for the GetDevicesDiscoveredByID structure.
type GetDevicesDiscoveredByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDevicesDiscoveredByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetDevicesDiscoveredByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewGetDevicesDiscoveredByIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewGetDevicesDiscoveredByIDPartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetDevicesDiscoveredByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetDevicesDiscoveredByIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetDevicesDiscoveredByIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetDevicesDiscoveredByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewGetDevicesDiscoveredByIDConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewGetDevicesDiscoveredByIDUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetDevicesDiscoveredByIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewGetDevicesDiscoveredByIDNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetDevicesDiscoveredByIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetDevicesDiscoveredByIDGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDevicesDiscoveredByIDOK creates a GetDevicesDiscoveredByIDOK with default headers values
func NewGetDevicesDiscoveredByIDOK() *GetDevicesDiscoveredByIDOK {
	return &GetDevicesDiscoveredByIDOK{}
}

/*GetDevicesDiscoveredByIDOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type GetDevicesDiscoveredByIDOK struct {
	Payload *models.CountResult
}

func (o *GetDevicesDiscoveredByIDOK) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/discovery/{id}/network-device/count][%d] getDevicesDiscoveredByIdOK  %+v", 200, o.Payload)
}

func (o *GetDevicesDiscoveredByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CountResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesDiscoveredByIDNoContent creates a GetDevicesDiscoveredByIDNoContent with default headers values
func NewGetDevicesDiscoveredByIDNoContent() *GetDevicesDiscoveredByIDNoContent {
	return &GetDevicesDiscoveredByIDNoContent{}
}

/*GetDevicesDiscoveredByIDNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type GetDevicesDiscoveredByIDNoContent struct {
}

func (o *GetDevicesDiscoveredByIDNoContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/discovery/{id}/network-device/count][%d] getDevicesDiscoveredByIdNoContent ", 204)
}

func (o *GetDevicesDiscoveredByIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDevicesDiscoveredByIDPartialContent creates a GetDevicesDiscoveredByIDPartialContent with default headers values
func NewGetDevicesDiscoveredByIDPartialContent() *GetDevicesDiscoveredByIDPartialContent {
	return &GetDevicesDiscoveredByIDPartialContent{}
}

/*GetDevicesDiscoveredByIDPartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type GetDevicesDiscoveredByIDPartialContent struct {
}

func (o *GetDevicesDiscoveredByIDPartialContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/discovery/{id}/network-device/count][%d] getDevicesDiscoveredByIdPartialContent ", 206)
}

func (o *GetDevicesDiscoveredByIDPartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDevicesDiscoveredByIDBadRequest creates a GetDevicesDiscoveredByIDBadRequest with default headers values
func NewGetDevicesDiscoveredByIDBadRequest() *GetDevicesDiscoveredByIDBadRequest {
	return &GetDevicesDiscoveredByIDBadRequest{}
}

/*GetDevicesDiscoveredByIDBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type GetDevicesDiscoveredByIDBadRequest struct {
}

func (o *GetDevicesDiscoveredByIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/discovery/{id}/network-device/count][%d] getDevicesDiscoveredByIdBadRequest ", 400)
}

func (o *GetDevicesDiscoveredByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDevicesDiscoveredByIDUnauthorized creates a GetDevicesDiscoveredByIDUnauthorized with default headers values
func NewGetDevicesDiscoveredByIDUnauthorized() *GetDevicesDiscoveredByIDUnauthorized {
	return &GetDevicesDiscoveredByIDUnauthorized{}
}

/*GetDevicesDiscoveredByIDUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type GetDevicesDiscoveredByIDUnauthorized struct {
}

func (o *GetDevicesDiscoveredByIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/discovery/{id}/network-device/count][%d] getDevicesDiscoveredByIdUnauthorized ", 401)
}

func (o *GetDevicesDiscoveredByIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDevicesDiscoveredByIDForbidden creates a GetDevicesDiscoveredByIDForbidden with default headers values
func NewGetDevicesDiscoveredByIDForbidden() *GetDevicesDiscoveredByIDForbidden {
	return &GetDevicesDiscoveredByIDForbidden{}
}

/*GetDevicesDiscoveredByIDForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type GetDevicesDiscoveredByIDForbidden struct {
}

func (o *GetDevicesDiscoveredByIDForbidden) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/discovery/{id}/network-device/count][%d] getDevicesDiscoveredByIdForbidden ", 403)
}

func (o *GetDevicesDiscoveredByIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDevicesDiscoveredByIDNotFound creates a GetDevicesDiscoveredByIDNotFound with default headers values
func NewGetDevicesDiscoveredByIDNotFound() *GetDevicesDiscoveredByIDNotFound {
	return &GetDevicesDiscoveredByIDNotFound{}
}

/*GetDevicesDiscoveredByIDNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type GetDevicesDiscoveredByIDNotFound struct {
}

func (o *GetDevicesDiscoveredByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/discovery/{id}/network-device/count][%d] getDevicesDiscoveredByIdNotFound ", 404)
}

func (o *GetDevicesDiscoveredByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDevicesDiscoveredByIDConflict creates a GetDevicesDiscoveredByIDConflict with default headers values
func NewGetDevicesDiscoveredByIDConflict() *GetDevicesDiscoveredByIDConflict {
	return &GetDevicesDiscoveredByIDConflict{}
}

/*GetDevicesDiscoveredByIDConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type GetDevicesDiscoveredByIDConflict struct {
}

func (o *GetDevicesDiscoveredByIDConflict) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/discovery/{id}/network-device/count][%d] getDevicesDiscoveredByIdConflict ", 409)
}

func (o *GetDevicesDiscoveredByIDConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDevicesDiscoveredByIDUnsupportedMediaType creates a GetDevicesDiscoveredByIDUnsupportedMediaType with default headers values
func NewGetDevicesDiscoveredByIDUnsupportedMediaType() *GetDevicesDiscoveredByIDUnsupportedMediaType {
	return &GetDevicesDiscoveredByIDUnsupportedMediaType{}
}

/*GetDevicesDiscoveredByIDUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type GetDevicesDiscoveredByIDUnsupportedMediaType struct {
}

func (o *GetDevicesDiscoveredByIDUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/discovery/{id}/network-device/count][%d] getDevicesDiscoveredByIdUnsupportedMediaType ", 415)
}

func (o *GetDevicesDiscoveredByIDUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDevicesDiscoveredByIDInternalServerError creates a GetDevicesDiscoveredByIDInternalServerError with default headers values
func NewGetDevicesDiscoveredByIDInternalServerError() *GetDevicesDiscoveredByIDInternalServerError {
	return &GetDevicesDiscoveredByIDInternalServerError{}
}

/*GetDevicesDiscoveredByIDInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type GetDevicesDiscoveredByIDInternalServerError struct {
}

func (o *GetDevicesDiscoveredByIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/discovery/{id}/network-device/count][%d] getDevicesDiscoveredByIdInternalServerError ", 500)
}

func (o *GetDevicesDiscoveredByIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDevicesDiscoveredByIDNotImplemented creates a GetDevicesDiscoveredByIDNotImplemented with default headers values
func NewGetDevicesDiscoveredByIDNotImplemented() *GetDevicesDiscoveredByIDNotImplemented {
	return &GetDevicesDiscoveredByIDNotImplemented{}
}

/*GetDevicesDiscoveredByIDNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type GetDevicesDiscoveredByIDNotImplemented struct {
}

func (o *GetDevicesDiscoveredByIDNotImplemented) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/discovery/{id}/network-device/count][%d] getDevicesDiscoveredByIdNotImplemented ", 501)
}

func (o *GetDevicesDiscoveredByIDNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDevicesDiscoveredByIDServiceUnavailable creates a GetDevicesDiscoveredByIDServiceUnavailable with default headers values
func NewGetDevicesDiscoveredByIDServiceUnavailable() *GetDevicesDiscoveredByIDServiceUnavailable {
	return &GetDevicesDiscoveredByIDServiceUnavailable{}
}

/*GetDevicesDiscoveredByIDServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type GetDevicesDiscoveredByIDServiceUnavailable struct {
}

func (o *GetDevicesDiscoveredByIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/discovery/{id}/network-device/count][%d] getDevicesDiscoveredByIdServiceUnavailable ", 503)
}

func (o *GetDevicesDiscoveredByIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDevicesDiscoveredByIDGatewayTimeout creates a GetDevicesDiscoveredByIDGatewayTimeout with default headers values
func NewGetDevicesDiscoveredByIDGatewayTimeout() *GetDevicesDiscoveredByIDGatewayTimeout {
	return &GetDevicesDiscoveredByIDGatewayTimeout{}
}

/*GetDevicesDiscoveredByIDGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type GetDevicesDiscoveredByIDGatewayTimeout struct {
}

func (o *GetDevicesDiscoveredByIDGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/discovery/{id}/network-device/count][%d] getDevicesDiscoveredByIdGatewayTimeout ", 504)
}

func (o *GetDevicesDiscoveredByIDGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
