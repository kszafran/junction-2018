// Code generated by go-swagger; DO NOT EDIT.

package network_discovery

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// UpdateGlobalCredentialsReader is a Reader for the UpdateGlobalCredentials structure.
type UpdateGlobalCredentialsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateGlobalCredentialsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUpdateGlobalCredentialsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 201:
		result := NewUpdateGlobalCredentialsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 202:
		result := NewUpdateGlobalCredentialsAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewUpdateGlobalCredentialsNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewUpdateGlobalCredentialsPartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewUpdateGlobalCredentialsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewUpdateGlobalCredentialsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewUpdateGlobalCredentialsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewUpdateGlobalCredentialsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewUpdateGlobalCredentialsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewUpdateGlobalCredentialsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewUpdateGlobalCredentialsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewUpdateGlobalCredentialsNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewUpdateGlobalCredentialsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewUpdateGlobalCredentialsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateGlobalCredentialsOK creates a UpdateGlobalCredentialsOK with default headers values
func NewUpdateGlobalCredentialsOK() *UpdateGlobalCredentialsOK {
	return &UpdateGlobalCredentialsOK{}
}

/*UpdateGlobalCredentialsOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type UpdateGlobalCredentialsOK struct {
	Payload *models.TaskIDResult
}

func (o *UpdateGlobalCredentialsOK) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/global-credential/{globalCredentialId}][%d] updateGlobalCredentialsOK  %+v", 200, o.Payload)
}

func (o *UpdateGlobalCredentialsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TaskIDResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateGlobalCredentialsCreated creates a UpdateGlobalCredentialsCreated with default headers values
func NewUpdateGlobalCredentialsCreated() *UpdateGlobalCredentialsCreated {
	return &UpdateGlobalCredentialsCreated{}
}

/*UpdateGlobalCredentialsCreated handles this case with default header values.

The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body.
*/
type UpdateGlobalCredentialsCreated struct {
}

func (o *UpdateGlobalCredentialsCreated) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/global-credential/{globalCredentialId}][%d] updateGlobalCredentialsCreated ", 201)
}

func (o *UpdateGlobalCredentialsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateGlobalCredentialsAccepted creates a UpdateGlobalCredentialsAccepted with default headers values
func NewUpdateGlobalCredentialsAccepted() *UpdateGlobalCredentialsAccepted {
	return &UpdateGlobalCredentialsAccepted{}
}

/*UpdateGlobalCredentialsAccepted handles this case with default header values.

The request was accepted for processing, but the processing has not been completed.
*/
type UpdateGlobalCredentialsAccepted struct {
}

func (o *UpdateGlobalCredentialsAccepted) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/global-credential/{globalCredentialId}][%d] updateGlobalCredentialsAccepted ", 202)
}

func (o *UpdateGlobalCredentialsAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateGlobalCredentialsNoContent creates a UpdateGlobalCredentialsNoContent with default headers values
func NewUpdateGlobalCredentialsNoContent() *UpdateGlobalCredentialsNoContent {
	return &UpdateGlobalCredentialsNoContent{}
}

/*UpdateGlobalCredentialsNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type UpdateGlobalCredentialsNoContent struct {
}

func (o *UpdateGlobalCredentialsNoContent) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/global-credential/{globalCredentialId}][%d] updateGlobalCredentialsNoContent ", 204)
}

func (o *UpdateGlobalCredentialsNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateGlobalCredentialsPartialContent creates a UpdateGlobalCredentialsPartialContent with default headers values
func NewUpdateGlobalCredentialsPartialContent() *UpdateGlobalCredentialsPartialContent {
	return &UpdateGlobalCredentialsPartialContent{}
}

/*UpdateGlobalCredentialsPartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type UpdateGlobalCredentialsPartialContent struct {
}

func (o *UpdateGlobalCredentialsPartialContent) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/global-credential/{globalCredentialId}][%d] updateGlobalCredentialsPartialContent ", 206)
}

func (o *UpdateGlobalCredentialsPartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateGlobalCredentialsBadRequest creates a UpdateGlobalCredentialsBadRequest with default headers values
func NewUpdateGlobalCredentialsBadRequest() *UpdateGlobalCredentialsBadRequest {
	return &UpdateGlobalCredentialsBadRequest{}
}

/*UpdateGlobalCredentialsBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type UpdateGlobalCredentialsBadRequest struct {
}

func (o *UpdateGlobalCredentialsBadRequest) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/global-credential/{globalCredentialId}][%d] updateGlobalCredentialsBadRequest ", 400)
}

func (o *UpdateGlobalCredentialsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateGlobalCredentialsUnauthorized creates a UpdateGlobalCredentialsUnauthorized with default headers values
func NewUpdateGlobalCredentialsUnauthorized() *UpdateGlobalCredentialsUnauthorized {
	return &UpdateGlobalCredentialsUnauthorized{}
}

/*UpdateGlobalCredentialsUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type UpdateGlobalCredentialsUnauthorized struct {
}

func (o *UpdateGlobalCredentialsUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/global-credential/{globalCredentialId}][%d] updateGlobalCredentialsUnauthorized ", 401)
}

func (o *UpdateGlobalCredentialsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateGlobalCredentialsForbidden creates a UpdateGlobalCredentialsForbidden with default headers values
func NewUpdateGlobalCredentialsForbidden() *UpdateGlobalCredentialsForbidden {
	return &UpdateGlobalCredentialsForbidden{}
}

/*UpdateGlobalCredentialsForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type UpdateGlobalCredentialsForbidden struct {
}

func (o *UpdateGlobalCredentialsForbidden) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/global-credential/{globalCredentialId}][%d] updateGlobalCredentialsForbidden ", 403)
}

func (o *UpdateGlobalCredentialsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateGlobalCredentialsNotFound creates a UpdateGlobalCredentialsNotFound with default headers values
func NewUpdateGlobalCredentialsNotFound() *UpdateGlobalCredentialsNotFound {
	return &UpdateGlobalCredentialsNotFound{}
}

/*UpdateGlobalCredentialsNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type UpdateGlobalCredentialsNotFound struct {
}

func (o *UpdateGlobalCredentialsNotFound) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/global-credential/{globalCredentialId}][%d] updateGlobalCredentialsNotFound ", 404)
}

func (o *UpdateGlobalCredentialsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateGlobalCredentialsConflict creates a UpdateGlobalCredentialsConflict with default headers values
func NewUpdateGlobalCredentialsConflict() *UpdateGlobalCredentialsConflict {
	return &UpdateGlobalCredentialsConflict{}
}

/*UpdateGlobalCredentialsConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type UpdateGlobalCredentialsConflict struct {
}

func (o *UpdateGlobalCredentialsConflict) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/global-credential/{globalCredentialId}][%d] updateGlobalCredentialsConflict ", 409)
}

func (o *UpdateGlobalCredentialsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateGlobalCredentialsUnsupportedMediaType creates a UpdateGlobalCredentialsUnsupportedMediaType with default headers values
func NewUpdateGlobalCredentialsUnsupportedMediaType() *UpdateGlobalCredentialsUnsupportedMediaType {
	return &UpdateGlobalCredentialsUnsupportedMediaType{}
}

/*UpdateGlobalCredentialsUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type UpdateGlobalCredentialsUnsupportedMediaType struct {
}

func (o *UpdateGlobalCredentialsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/global-credential/{globalCredentialId}][%d] updateGlobalCredentialsUnsupportedMediaType ", 415)
}

func (o *UpdateGlobalCredentialsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateGlobalCredentialsInternalServerError creates a UpdateGlobalCredentialsInternalServerError with default headers values
func NewUpdateGlobalCredentialsInternalServerError() *UpdateGlobalCredentialsInternalServerError {
	return &UpdateGlobalCredentialsInternalServerError{}
}

/*UpdateGlobalCredentialsInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type UpdateGlobalCredentialsInternalServerError struct {
}

func (o *UpdateGlobalCredentialsInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/global-credential/{globalCredentialId}][%d] updateGlobalCredentialsInternalServerError ", 500)
}

func (o *UpdateGlobalCredentialsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateGlobalCredentialsNotImplemented creates a UpdateGlobalCredentialsNotImplemented with default headers values
func NewUpdateGlobalCredentialsNotImplemented() *UpdateGlobalCredentialsNotImplemented {
	return &UpdateGlobalCredentialsNotImplemented{}
}

/*UpdateGlobalCredentialsNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type UpdateGlobalCredentialsNotImplemented struct {
}

func (o *UpdateGlobalCredentialsNotImplemented) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/global-credential/{globalCredentialId}][%d] updateGlobalCredentialsNotImplemented ", 501)
}

func (o *UpdateGlobalCredentialsNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateGlobalCredentialsServiceUnavailable creates a UpdateGlobalCredentialsServiceUnavailable with default headers values
func NewUpdateGlobalCredentialsServiceUnavailable() *UpdateGlobalCredentialsServiceUnavailable {
	return &UpdateGlobalCredentialsServiceUnavailable{}
}

/*UpdateGlobalCredentialsServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type UpdateGlobalCredentialsServiceUnavailable struct {
}

func (o *UpdateGlobalCredentialsServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/global-credential/{globalCredentialId}][%d] updateGlobalCredentialsServiceUnavailable ", 503)
}

func (o *UpdateGlobalCredentialsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateGlobalCredentialsGatewayTimeout creates a UpdateGlobalCredentialsGatewayTimeout with default headers values
func NewUpdateGlobalCredentialsGatewayTimeout() *UpdateGlobalCredentialsGatewayTimeout {
	return &UpdateGlobalCredentialsGatewayTimeout{}
}

/*UpdateGlobalCredentialsGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type UpdateGlobalCredentialsGatewayTimeout struct {
}

func (o *UpdateGlobalCredentialsGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/global-credential/{globalCredentialId}][%d] updateGlobalCredentialsGatewayTimeout ", 504)
}

func (o *UpdateGlobalCredentialsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
