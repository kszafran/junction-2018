// Code generated by go-swagger; DO NOT EDIT.

package network_discovery

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// GetCredentialSubTypeByCredentialIDReader is a Reader for the GetCredentialSubTypeByCredentialID structure.
type GetCredentialSubTypeByCredentialIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCredentialSubTypeByCredentialIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCredentialSubTypeByCredentialIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewGetCredentialSubTypeByCredentialIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewGetCredentialSubTypeByCredentialIDPartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetCredentialSubTypeByCredentialIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetCredentialSubTypeByCredentialIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetCredentialSubTypeByCredentialIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetCredentialSubTypeByCredentialIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewGetCredentialSubTypeByCredentialIDConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewGetCredentialSubTypeByCredentialIDUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetCredentialSubTypeByCredentialIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewGetCredentialSubTypeByCredentialIDNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetCredentialSubTypeByCredentialIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetCredentialSubTypeByCredentialIDGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCredentialSubTypeByCredentialIDOK creates a GetCredentialSubTypeByCredentialIDOK with default headers values
func NewGetCredentialSubTypeByCredentialIDOK() *GetCredentialSubTypeByCredentialIDOK {
	return &GetCredentialSubTypeByCredentialIDOK{}
}

/*GetCredentialSubTypeByCredentialIDOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type GetCredentialSubTypeByCredentialIDOK struct {
	Payload *models.GlobalCredentialSubTypeResult
}

func (o *GetCredentialSubTypeByCredentialIDOK) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/global-credential/{id}][%d] getCredentialSubTypeByCredentialIdOK  %+v", 200, o.Payload)
}

func (o *GetCredentialSubTypeByCredentialIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GlobalCredentialSubTypeResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCredentialSubTypeByCredentialIDNoContent creates a GetCredentialSubTypeByCredentialIDNoContent with default headers values
func NewGetCredentialSubTypeByCredentialIDNoContent() *GetCredentialSubTypeByCredentialIDNoContent {
	return &GetCredentialSubTypeByCredentialIDNoContent{}
}

/*GetCredentialSubTypeByCredentialIDNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type GetCredentialSubTypeByCredentialIDNoContent struct {
}

func (o *GetCredentialSubTypeByCredentialIDNoContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/global-credential/{id}][%d] getCredentialSubTypeByCredentialIdNoContent ", 204)
}

func (o *GetCredentialSubTypeByCredentialIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCredentialSubTypeByCredentialIDPartialContent creates a GetCredentialSubTypeByCredentialIDPartialContent with default headers values
func NewGetCredentialSubTypeByCredentialIDPartialContent() *GetCredentialSubTypeByCredentialIDPartialContent {
	return &GetCredentialSubTypeByCredentialIDPartialContent{}
}

/*GetCredentialSubTypeByCredentialIDPartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type GetCredentialSubTypeByCredentialIDPartialContent struct {
}

func (o *GetCredentialSubTypeByCredentialIDPartialContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/global-credential/{id}][%d] getCredentialSubTypeByCredentialIdPartialContent ", 206)
}

func (o *GetCredentialSubTypeByCredentialIDPartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCredentialSubTypeByCredentialIDBadRequest creates a GetCredentialSubTypeByCredentialIDBadRequest with default headers values
func NewGetCredentialSubTypeByCredentialIDBadRequest() *GetCredentialSubTypeByCredentialIDBadRequest {
	return &GetCredentialSubTypeByCredentialIDBadRequest{}
}

/*GetCredentialSubTypeByCredentialIDBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type GetCredentialSubTypeByCredentialIDBadRequest struct {
}

func (o *GetCredentialSubTypeByCredentialIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/global-credential/{id}][%d] getCredentialSubTypeByCredentialIdBadRequest ", 400)
}

func (o *GetCredentialSubTypeByCredentialIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCredentialSubTypeByCredentialIDUnauthorized creates a GetCredentialSubTypeByCredentialIDUnauthorized with default headers values
func NewGetCredentialSubTypeByCredentialIDUnauthorized() *GetCredentialSubTypeByCredentialIDUnauthorized {
	return &GetCredentialSubTypeByCredentialIDUnauthorized{}
}

/*GetCredentialSubTypeByCredentialIDUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type GetCredentialSubTypeByCredentialIDUnauthorized struct {
}

func (o *GetCredentialSubTypeByCredentialIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/global-credential/{id}][%d] getCredentialSubTypeByCredentialIdUnauthorized ", 401)
}

func (o *GetCredentialSubTypeByCredentialIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCredentialSubTypeByCredentialIDForbidden creates a GetCredentialSubTypeByCredentialIDForbidden with default headers values
func NewGetCredentialSubTypeByCredentialIDForbidden() *GetCredentialSubTypeByCredentialIDForbidden {
	return &GetCredentialSubTypeByCredentialIDForbidden{}
}

/*GetCredentialSubTypeByCredentialIDForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type GetCredentialSubTypeByCredentialIDForbidden struct {
}

func (o *GetCredentialSubTypeByCredentialIDForbidden) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/global-credential/{id}][%d] getCredentialSubTypeByCredentialIdForbidden ", 403)
}

func (o *GetCredentialSubTypeByCredentialIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCredentialSubTypeByCredentialIDNotFound creates a GetCredentialSubTypeByCredentialIDNotFound with default headers values
func NewGetCredentialSubTypeByCredentialIDNotFound() *GetCredentialSubTypeByCredentialIDNotFound {
	return &GetCredentialSubTypeByCredentialIDNotFound{}
}

/*GetCredentialSubTypeByCredentialIDNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type GetCredentialSubTypeByCredentialIDNotFound struct {
}

func (o *GetCredentialSubTypeByCredentialIDNotFound) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/global-credential/{id}][%d] getCredentialSubTypeByCredentialIdNotFound ", 404)
}

func (o *GetCredentialSubTypeByCredentialIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCredentialSubTypeByCredentialIDConflict creates a GetCredentialSubTypeByCredentialIDConflict with default headers values
func NewGetCredentialSubTypeByCredentialIDConflict() *GetCredentialSubTypeByCredentialIDConflict {
	return &GetCredentialSubTypeByCredentialIDConflict{}
}

/*GetCredentialSubTypeByCredentialIDConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type GetCredentialSubTypeByCredentialIDConflict struct {
}

func (o *GetCredentialSubTypeByCredentialIDConflict) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/global-credential/{id}][%d] getCredentialSubTypeByCredentialIdConflict ", 409)
}

func (o *GetCredentialSubTypeByCredentialIDConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCredentialSubTypeByCredentialIDUnsupportedMediaType creates a GetCredentialSubTypeByCredentialIDUnsupportedMediaType with default headers values
func NewGetCredentialSubTypeByCredentialIDUnsupportedMediaType() *GetCredentialSubTypeByCredentialIDUnsupportedMediaType {
	return &GetCredentialSubTypeByCredentialIDUnsupportedMediaType{}
}

/*GetCredentialSubTypeByCredentialIDUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type GetCredentialSubTypeByCredentialIDUnsupportedMediaType struct {
}

func (o *GetCredentialSubTypeByCredentialIDUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/global-credential/{id}][%d] getCredentialSubTypeByCredentialIdUnsupportedMediaType ", 415)
}

func (o *GetCredentialSubTypeByCredentialIDUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCredentialSubTypeByCredentialIDInternalServerError creates a GetCredentialSubTypeByCredentialIDInternalServerError with default headers values
func NewGetCredentialSubTypeByCredentialIDInternalServerError() *GetCredentialSubTypeByCredentialIDInternalServerError {
	return &GetCredentialSubTypeByCredentialIDInternalServerError{}
}

/*GetCredentialSubTypeByCredentialIDInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type GetCredentialSubTypeByCredentialIDInternalServerError struct {
}

func (o *GetCredentialSubTypeByCredentialIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/global-credential/{id}][%d] getCredentialSubTypeByCredentialIdInternalServerError ", 500)
}

func (o *GetCredentialSubTypeByCredentialIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCredentialSubTypeByCredentialIDNotImplemented creates a GetCredentialSubTypeByCredentialIDNotImplemented with default headers values
func NewGetCredentialSubTypeByCredentialIDNotImplemented() *GetCredentialSubTypeByCredentialIDNotImplemented {
	return &GetCredentialSubTypeByCredentialIDNotImplemented{}
}

/*GetCredentialSubTypeByCredentialIDNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type GetCredentialSubTypeByCredentialIDNotImplemented struct {
}

func (o *GetCredentialSubTypeByCredentialIDNotImplemented) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/global-credential/{id}][%d] getCredentialSubTypeByCredentialIdNotImplemented ", 501)
}

func (o *GetCredentialSubTypeByCredentialIDNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCredentialSubTypeByCredentialIDServiceUnavailable creates a GetCredentialSubTypeByCredentialIDServiceUnavailable with default headers values
func NewGetCredentialSubTypeByCredentialIDServiceUnavailable() *GetCredentialSubTypeByCredentialIDServiceUnavailable {
	return &GetCredentialSubTypeByCredentialIDServiceUnavailable{}
}

/*GetCredentialSubTypeByCredentialIDServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type GetCredentialSubTypeByCredentialIDServiceUnavailable struct {
}

func (o *GetCredentialSubTypeByCredentialIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/global-credential/{id}][%d] getCredentialSubTypeByCredentialIdServiceUnavailable ", 503)
}

func (o *GetCredentialSubTypeByCredentialIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCredentialSubTypeByCredentialIDGatewayTimeout creates a GetCredentialSubTypeByCredentialIDGatewayTimeout with default headers values
func NewGetCredentialSubTypeByCredentialIDGatewayTimeout() *GetCredentialSubTypeByCredentialIDGatewayTimeout {
	return &GetCredentialSubTypeByCredentialIDGatewayTimeout{}
}

/*GetCredentialSubTypeByCredentialIDGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type GetCredentialSubTypeByCredentialIDGatewayTimeout struct {
}

func (o *GetCredentialSubTypeByCredentialIDGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/global-credential/{id}][%d] getCredentialSubTypeByCredentialIdGatewayTimeout ", 504)
}

func (o *GetCredentialSubTypeByCredentialIDGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
