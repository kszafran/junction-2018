// Code generated by go-swagger; DO NOT EDIT.

package network_discovery

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetDiscoveryJobsByIPParams creates a new GetDiscoveryJobsByIPParams object
// with the default values initialized.
func NewGetDiscoveryJobsByIPParams() *GetDiscoveryJobsByIPParams {
	var ()
	return &GetDiscoveryJobsByIPParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetDiscoveryJobsByIPParamsWithTimeout creates a new GetDiscoveryJobsByIPParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetDiscoveryJobsByIPParamsWithTimeout(timeout time.Duration) *GetDiscoveryJobsByIPParams {
	var ()
	return &GetDiscoveryJobsByIPParams{

		timeout: timeout,
	}
}

// NewGetDiscoveryJobsByIPParamsWithContext creates a new GetDiscoveryJobsByIPParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetDiscoveryJobsByIPParamsWithContext(ctx context.Context) *GetDiscoveryJobsByIPParams {
	var ()
	return &GetDiscoveryJobsByIPParams{

		Context: ctx,
	}
}

// NewGetDiscoveryJobsByIPParamsWithHTTPClient creates a new GetDiscoveryJobsByIPParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetDiscoveryJobsByIPParamsWithHTTPClient(client *http.Client) *GetDiscoveryJobsByIPParams {
	var ()
	return &GetDiscoveryJobsByIPParams{
		HTTPClient: client,
	}
}

/*GetDiscoveryJobsByIPParams contains all the parameters to send to the API endpoint
for the get discovery jobs by IP operation typically these are written to a http.Request
*/
type GetDiscoveryJobsByIPParams struct {

	/*IPAddress
	  ipAddress

	*/
	IPAddress string
	/*Limit
	  limit

	*/
	Limit *int64
	/*Name
	  name

	*/
	Name *string
	/*Offset
	  offset

	*/
	Offset *int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get discovery jobs by IP params
func (o *GetDiscoveryJobsByIPParams) WithTimeout(timeout time.Duration) *GetDiscoveryJobsByIPParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get discovery jobs by IP params
func (o *GetDiscoveryJobsByIPParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get discovery jobs by IP params
func (o *GetDiscoveryJobsByIPParams) WithContext(ctx context.Context) *GetDiscoveryJobsByIPParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get discovery jobs by IP params
func (o *GetDiscoveryJobsByIPParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get discovery jobs by IP params
func (o *GetDiscoveryJobsByIPParams) WithHTTPClient(client *http.Client) *GetDiscoveryJobsByIPParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get discovery jobs by IP params
func (o *GetDiscoveryJobsByIPParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithIPAddress adds the iPAddress to the get discovery jobs by IP params
func (o *GetDiscoveryJobsByIPParams) WithIPAddress(iPAddress string) *GetDiscoveryJobsByIPParams {
	o.SetIPAddress(iPAddress)
	return o
}

// SetIPAddress adds the ipAddress to the get discovery jobs by IP params
func (o *GetDiscoveryJobsByIPParams) SetIPAddress(iPAddress string) {
	o.IPAddress = iPAddress
}

// WithLimit adds the limit to the get discovery jobs by IP params
func (o *GetDiscoveryJobsByIPParams) WithLimit(limit *int64) *GetDiscoveryJobsByIPParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the get discovery jobs by IP params
func (o *GetDiscoveryJobsByIPParams) SetLimit(limit *int64) {
	o.Limit = limit
}

// WithName adds the name to the get discovery jobs by IP params
func (o *GetDiscoveryJobsByIPParams) WithName(name *string) *GetDiscoveryJobsByIPParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the get discovery jobs by IP params
func (o *GetDiscoveryJobsByIPParams) SetName(name *string) {
	o.Name = name
}

// WithOffset adds the offset to the get discovery jobs by IP params
func (o *GetDiscoveryJobsByIPParams) WithOffset(offset *int64) *GetDiscoveryJobsByIPParams {
	o.SetOffset(offset)
	return o
}

// SetOffset adds the offset to the get discovery jobs by IP params
func (o *GetDiscoveryJobsByIPParams) SetOffset(offset *int64) {
	o.Offset = offset
}

// WriteToRequest writes these params to a swagger request
func (o *GetDiscoveryJobsByIPParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param ipAddress
	qrIPAddress := o.IPAddress
	qIPAddress := qrIPAddress
	if qIPAddress != "" {
		if err := r.SetQueryParam("ipAddress", qIPAddress); err != nil {
			return err
		}
	}

	if o.Limit != nil {

		// query param limit
		var qrLimit int64
		if o.Limit != nil {
			qrLimit = *o.Limit
		}
		qLimit := swag.FormatInt64(qrLimit)
		if qLimit != "" {
			if err := r.SetQueryParam("limit", qLimit); err != nil {
				return err
			}
		}

	}

	if o.Name != nil {

		// query param name
		var qrName string
		if o.Name != nil {
			qrName = *o.Name
		}
		qName := qrName
		if qName != "" {
			if err := r.SetQueryParam("name", qName); err != nil {
				return err
			}
		}

	}

	if o.Offset != nil {

		// query param offset
		var qrOffset int64
		if o.Offset != nil {
			qrOffset = *o.Offset
		}
		qOffset := swag.FormatInt64(qrOffset)
		if qOffset != "" {
			if err := r.SetQueryParam("offset", qOffset); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
