// Code generated by go-swagger; DO NOT EDIT.

package network_discovery

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// UpdateCLICredentialsReader is a Reader for the UpdateCLICredentials structure.
type UpdateCLICredentialsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateCLICredentialsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUpdateCLICredentialsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 201:
		result := NewUpdateCLICredentialsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 202:
		result := NewUpdateCLICredentialsAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewUpdateCLICredentialsNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewUpdateCLICredentialsPartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewUpdateCLICredentialsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewUpdateCLICredentialsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewUpdateCLICredentialsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewUpdateCLICredentialsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewUpdateCLICredentialsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewUpdateCLICredentialsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewUpdateCLICredentialsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewUpdateCLICredentialsNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewUpdateCLICredentialsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewUpdateCLICredentialsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateCLICredentialsOK creates a UpdateCLICredentialsOK with default headers values
func NewUpdateCLICredentialsOK() *UpdateCLICredentialsOK {
	return &UpdateCLICredentialsOK{}
}

/*UpdateCLICredentialsOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type UpdateCLICredentialsOK struct {
	Payload *models.TaskIDResult
}

func (o *UpdateCLICredentialsOK) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/global-credential/cli][%d] updateCLICredentialsOK  %+v", 200, o.Payload)
}

func (o *UpdateCLICredentialsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TaskIDResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCLICredentialsCreated creates a UpdateCLICredentialsCreated with default headers values
func NewUpdateCLICredentialsCreated() *UpdateCLICredentialsCreated {
	return &UpdateCLICredentialsCreated{}
}

/*UpdateCLICredentialsCreated handles this case with default header values.

The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body.
*/
type UpdateCLICredentialsCreated struct {
}

func (o *UpdateCLICredentialsCreated) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/global-credential/cli][%d] updateCLICredentialsCreated ", 201)
}

func (o *UpdateCLICredentialsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateCLICredentialsAccepted creates a UpdateCLICredentialsAccepted with default headers values
func NewUpdateCLICredentialsAccepted() *UpdateCLICredentialsAccepted {
	return &UpdateCLICredentialsAccepted{}
}

/*UpdateCLICredentialsAccepted handles this case with default header values.

The request was accepted for processing, but the processing has not been completed.
*/
type UpdateCLICredentialsAccepted struct {
}

func (o *UpdateCLICredentialsAccepted) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/global-credential/cli][%d] updateCLICredentialsAccepted ", 202)
}

func (o *UpdateCLICredentialsAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateCLICredentialsNoContent creates a UpdateCLICredentialsNoContent with default headers values
func NewUpdateCLICredentialsNoContent() *UpdateCLICredentialsNoContent {
	return &UpdateCLICredentialsNoContent{}
}

/*UpdateCLICredentialsNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type UpdateCLICredentialsNoContent struct {
}

func (o *UpdateCLICredentialsNoContent) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/global-credential/cli][%d] updateCLICredentialsNoContent ", 204)
}

func (o *UpdateCLICredentialsNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateCLICredentialsPartialContent creates a UpdateCLICredentialsPartialContent with default headers values
func NewUpdateCLICredentialsPartialContent() *UpdateCLICredentialsPartialContent {
	return &UpdateCLICredentialsPartialContent{}
}

/*UpdateCLICredentialsPartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type UpdateCLICredentialsPartialContent struct {
}

func (o *UpdateCLICredentialsPartialContent) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/global-credential/cli][%d] updateCLICredentialsPartialContent ", 206)
}

func (o *UpdateCLICredentialsPartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateCLICredentialsBadRequest creates a UpdateCLICredentialsBadRequest with default headers values
func NewUpdateCLICredentialsBadRequest() *UpdateCLICredentialsBadRequest {
	return &UpdateCLICredentialsBadRequest{}
}

/*UpdateCLICredentialsBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type UpdateCLICredentialsBadRequest struct {
}

func (o *UpdateCLICredentialsBadRequest) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/global-credential/cli][%d] updateCLICredentialsBadRequest ", 400)
}

func (o *UpdateCLICredentialsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateCLICredentialsUnauthorized creates a UpdateCLICredentialsUnauthorized with default headers values
func NewUpdateCLICredentialsUnauthorized() *UpdateCLICredentialsUnauthorized {
	return &UpdateCLICredentialsUnauthorized{}
}

/*UpdateCLICredentialsUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type UpdateCLICredentialsUnauthorized struct {
}

func (o *UpdateCLICredentialsUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/global-credential/cli][%d] updateCLICredentialsUnauthorized ", 401)
}

func (o *UpdateCLICredentialsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateCLICredentialsForbidden creates a UpdateCLICredentialsForbidden with default headers values
func NewUpdateCLICredentialsForbidden() *UpdateCLICredentialsForbidden {
	return &UpdateCLICredentialsForbidden{}
}

/*UpdateCLICredentialsForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type UpdateCLICredentialsForbidden struct {
}

func (o *UpdateCLICredentialsForbidden) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/global-credential/cli][%d] updateCLICredentialsForbidden ", 403)
}

func (o *UpdateCLICredentialsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateCLICredentialsNotFound creates a UpdateCLICredentialsNotFound with default headers values
func NewUpdateCLICredentialsNotFound() *UpdateCLICredentialsNotFound {
	return &UpdateCLICredentialsNotFound{}
}

/*UpdateCLICredentialsNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type UpdateCLICredentialsNotFound struct {
}

func (o *UpdateCLICredentialsNotFound) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/global-credential/cli][%d] updateCLICredentialsNotFound ", 404)
}

func (o *UpdateCLICredentialsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateCLICredentialsConflict creates a UpdateCLICredentialsConflict with default headers values
func NewUpdateCLICredentialsConflict() *UpdateCLICredentialsConflict {
	return &UpdateCLICredentialsConflict{}
}

/*UpdateCLICredentialsConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type UpdateCLICredentialsConflict struct {
}

func (o *UpdateCLICredentialsConflict) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/global-credential/cli][%d] updateCLICredentialsConflict ", 409)
}

func (o *UpdateCLICredentialsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateCLICredentialsUnsupportedMediaType creates a UpdateCLICredentialsUnsupportedMediaType with default headers values
func NewUpdateCLICredentialsUnsupportedMediaType() *UpdateCLICredentialsUnsupportedMediaType {
	return &UpdateCLICredentialsUnsupportedMediaType{}
}

/*UpdateCLICredentialsUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type UpdateCLICredentialsUnsupportedMediaType struct {
}

func (o *UpdateCLICredentialsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/global-credential/cli][%d] updateCLICredentialsUnsupportedMediaType ", 415)
}

func (o *UpdateCLICredentialsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateCLICredentialsInternalServerError creates a UpdateCLICredentialsInternalServerError with default headers values
func NewUpdateCLICredentialsInternalServerError() *UpdateCLICredentialsInternalServerError {
	return &UpdateCLICredentialsInternalServerError{}
}

/*UpdateCLICredentialsInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type UpdateCLICredentialsInternalServerError struct {
}

func (o *UpdateCLICredentialsInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/global-credential/cli][%d] updateCLICredentialsInternalServerError ", 500)
}

func (o *UpdateCLICredentialsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateCLICredentialsNotImplemented creates a UpdateCLICredentialsNotImplemented with default headers values
func NewUpdateCLICredentialsNotImplemented() *UpdateCLICredentialsNotImplemented {
	return &UpdateCLICredentialsNotImplemented{}
}

/*UpdateCLICredentialsNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type UpdateCLICredentialsNotImplemented struct {
}

func (o *UpdateCLICredentialsNotImplemented) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/global-credential/cli][%d] updateCLICredentialsNotImplemented ", 501)
}

func (o *UpdateCLICredentialsNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateCLICredentialsServiceUnavailable creates a UpdateCLICredentialsServiceUnavailable with default headers values
func NewUpdateCLICredentialsServiceUnavailable() *UpdateCLICredentialsServiceUnavailable {
	return &UpdateCLICredentialsServiceUnavailable{}
}

/*UpdateCLICredentialsServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type UpdateCLICredentialsServiceUnavailable struct {
}

func (o *UpdateCLICredentialsServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/global-credential/cli][%d] updateCLICredentialsServiceUnavailable ", 503)
}

func (o *UpdateCLICredentialsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateCLICredentialsGatewayTimeout creates a UpdateCLICredentialsGatewayTimeout with default headers values
func NewUpdateCLICredentialsGatewayTimeout() *UpdateCLICredentialsGatewayTimeout {
	return &UpdateCLICredentialsGatewayTimeout{}
}

/*UpdateCLICredentialsGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type UpdateCLICredentialsGatewayTimeout struct {
}

func (o *UpdateCLICredentialsGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/global-credential/cli][%d] updateCLICredentialsGatewayTimeout ", 504)
}

func (o *UpdateCLICredentialsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
