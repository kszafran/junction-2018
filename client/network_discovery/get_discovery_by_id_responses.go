// Code generated by go-swagger; DO NOT EDIT.

package network_discovery

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// GetDiscoveryByIDReader is a Reader for the GetDiscoveryByID structure.
type GetDiscoveryByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDiscoveryByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetDiscoveryByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewGetDiscoveryByIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewGetDiscoveryByIDPartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetDiscoveryByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetDiscoveryByIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetDiscoveryByIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetDiscoveryByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewGetDiscoveryByIDConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewGetDiscoveryByIDUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetDiscoveryByIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewGetDiscoveryByIDNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetDiscoveryByIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetDiscoveryByIDGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDiscoveryByIDOK creates a GetDiscoveryByIDOK with default headers values
func NewGetDiscoveryByIDOK() *GetDiscoveryByIDOK {
	return &GetDiscoveryByIDOK{}
}

/*GetDiscoveryByIDOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type GetDiscoveryByIDOK struct {
	Payload *models.DiscoveryNIOResult
}

func (o *GetDiscoveryByIDOK) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/discovery/{id}][%d] getDiscoveryByIdOK  %+v", 200, o.Payload)
}

func (o *GetDiscoveryByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DiscoveryNIOResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDiscoveryByIDNoContent creates a GetDiscoveryByIDNoContent with default headers values
func NewGetDiscoveryByIDNoContent() *GetDiscoveryByIDNoContent {
	return &GetDiscoveryByIDNoContent{}
}

/*GetDiscoveryByIDNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type GetDiscoveryByIDNoContent struct {
}

func (o *GetDiscoveryByIDNoContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/discovery/{id}][%d] getDiscoveryByIdNoContent ", 204)
}

func (o *GetDiscoveryByIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDiscoveryByIDPartialContent creates a GetDiscoveryByIDPartialContent with default headers values
func NewGetDiscoveryByIDPartialContent() *GetDiscoveryByIDPartialContent {
	return &GetDiscoveryByIDPartialContent{}
}

/*GetDiscoveryByIDPartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type GetDiscoveryByIDPartialContent struct {
}

func (o *GetDiscoveryByIDPartialContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/discovery/{id}][%d] getDiscoveryByIdPartialContent ", 206)
}

func (o *GetDiscoveryByIDPartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDiscoveryByIDBadRequest creates a GetDiscoveryByIDBadRequest with default headers values
func NewGetDiscoveryByIDBadRequest() *GetDiscoveryByIDBadRequest {
	return &GetDiscoveryByIDBadRequest{}
}

/*GetDiscoveryByIDBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type GetDiscoveryByIDBadRequest struct {
}

func (o *GetDiscoveryByIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/discovery/{id}][%d] getDiscoveryByIdBadRequest ", 400)
}

func (o *GetDiscoveryByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDiscoveryByIDUnauthorized creates a GetDiscoveryByIDUnauthorized with default headers values
func NewGetDiscoveryByIDUnauthorized() *GetDiscoveryByIDUnauthorized {
	return &GetDiscoveryByIDUnauthorized{}
}

/*GetDiscoveryByIDUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type GetDiscoveryByIDUnauthorized struct {
}

func (o *GetDiscoveryByIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/discovery/{id}][%d] getDiscoveryByIdUnauthorized ", 401)
}

func (o *GetDiscoveryByIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDiscoveryByIDForbidden creates a GetDiscoveryByIDForbidden with default headers values
func NewGetDiscoveryByIDForbidden() *GetDiscoveryByIDForbidden {
	return &GetDiscoveryByIDForbidden{}
}

/*GetDiscoveryByIDForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type GetDiscoveryByIDForbidden struct {
}

func (o *GetDiscoveryByIDForbidden) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/discovery/{id}][%d] getDiscoveryByIdForbidden ", 403)
}

func (o *GetDiscoveryByIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDiscoveryByIDNotFound creates a GetDiscoveryByIDNotFound with default headers values
func NewGetDiscoveryByIDNotFound() *GetDiscoveryByIDNotFound {
	return &GetDiscoveryByIDNotFound{}
}

/*GetDiscoveryByIDNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type GetDiscoveryByIDNotFound struct {
}

func (o *GetDiscoveryByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/discovery/{id}][%d] getDiscoveryByIdNotFound ", 404)
}

func (o *GetDiscoveryByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDiscoveryByIDConflict creates a GetDiscoveryByIDConflict with default headers values
func NewGetDiscoveryByIDConflict() *GetDiscoveryByIDConflict {
	return &GetDiscoveryByIDConflict{}
}

/*GetDiscoveryByIDConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type GetDiscoveryByIDConflict struct {
}

func (o *GetDiscoveryByIDConflict) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/discovery/{id}][%d] getDiscoveryByIdConflict ", 409)
}

func (o *GetDiscoveryByIDConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDiscoveryByIDUnsupportedMediaType creates a GetDiscoveryByIDUnsupportedMediaType with default headers values
func NewGetDiscoveryByIDUnsupportedMediaType() *GetDiscoveryByIDUnsupportedMediaType {
	return &GetDiscoveryByIDUnsupportedMediaType{}
}

/*GetDiscoveryByIDUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type GetDiscoveryByIDUnsupportedMediaType struct {
}

func (o *GetDiscoveryByIDUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/discovery/{id}][%d] getDiscoveryByIdUnsupportedMediaType ", 415)
}

func (o *GetDiscoveryByIDUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDiscoveryByIDInternalServerError creates a GetDiscoveryByIDInternalServerError with default headers values
func NewGetDiscoveryByIDInternalServerError() *GetDiscoveryByIDInternalServerError {
	return &GetDiscoveryByIDInternalServerError{}
}

/*GetDiscoveryByIDInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type GetDiscoveryByIDInternalServerError struct {
}

func (o *GetDiscoveryByIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/discovery/{id}][%d] getDiscoveryByIdInternalServerError ", 500)
}

func (o *GetDiscoveryByIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDiscoveryByIDNotImplemented creates a GetDiscoveryByIDNotImplemented with default headers values
func NewGetDiscoveryByIDNotImplemented() *GetDiscoveryByIDNotImplemented {
	return &GetDiscoveryByIDNotImplemented{}
}

/*GetDiscoveryByIDNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type GetDiscoveryByIDNotImplemented struct {
}

func (o *GetDiscoveryByIDNotImplemented) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/discovery/{id}][%d] getDiscoveryByIdNotImplemented ", 501)
}

func (o *GetDiscoveryByIDNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDiscoveryByIDServiceUnavailable creates a GetDiscoveryByIDServiceUnavailable with default headers values
func NewGetDiscoveryByIDServiceUnavailable() *GetDiscoveryByIDServiceUnavailable {
	return &GetDiscoveryByIDServiceUnavailable{}
}

/*GetDiscoveryByIDServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type GetDiscoveryByIDServiceUnavailable struct {
}

func (o *GetDiscoveryByIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/discovery/{id}][%d] getDiscoveryByIdServiceUnavailable ", 503)
}

func (o *GetDiscoveryByIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDiscoveryByIDGatewayTimeout creates a GetDiscoveryByIDGatewayTimeout with default headers values
func NewGetDiscoveryByIDGatewayTimeout() *GetDiscoveryByIDGatewayTimeout {
	return &GetDiscoveryByIDGatewayTimeout{}
}

/*GetDiscoveryByIDGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type GetDiscoveryByIDGatewayTimeout struct {
}

func (o *GetDiscoveryByIDGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/discovery/{id}][%d] getDiscoveryByIdGatewayTimeout ", 504)
}

func (o *GetDiscoveryByIDGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
