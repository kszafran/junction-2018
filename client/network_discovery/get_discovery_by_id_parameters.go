// Code generated by go-swagger; DO NOT EDIT.

package network_discovery

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetDiscoveryByIDParams creates a new GetDiscoveryByIDParams object
// with the default values initialized.
func NewGetDiscoveryByIDParams() *GetDiscoveryByIDParams {
	var ()
	return &GetDiscoveryByIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetDiscoveryByIDParamsWithTimeout creates a new GetDiscoveryByIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetDiscoveryByIDParamsWithTimeout(timeout time.Duration) *GetDiscoveryByIDParams {
	var ()
	return &GetDiscoveryByIDParams{

		timeout: timeout,
	}
}

// NewGetDiscoveryByIDParamsWithContext creates a new GetDiscoveryByIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetDiscoveryByIDParamsWithContext(ctx context.Context) *GetDiscoveryByIDParams {
	var ()
	return &GetDiscoveryByIDParams{

		Context: ctx,
	}
}

// NewGetDiscoveryByIDParamsWithHTTPClient creates a new GetDiscoveryByIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetDiscoveryByIDParamsWithHTTPClient(client *http.Client) *GetDiscoveryByIDParams {
	var ()
	return &GetDiscoveryByIDParams{
		HTTPClient: client,
	}
}

/*GetDiscoveryByIDParams contains all the parameters to send to the API endpoint
for the get discovery by Id operation typically these are written to a http.Request
*/
type GetDiscoveryByIDParams struct {

	/*ID
	  Discovery ID

	*/
	ID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get discovery by Id params
func (o *GetDiscoveryByIDParams) WithTimeout(timeout time.Duration) *GetDiscoveryByIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get discovery by Id params
func (o *GetDiscoveryByIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get discovery by Id params
func (o *GetDiscoveryByIDParams) WithContext(ctx context.Context) *GetDiscoveryByIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get discovery by Id params
func (o *GetDiscoveryByIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get discovery by Id params
func (o *GetDiscoveryByIDParams) WithHTTPClient(client *http.Client) *GetDiscoveryByIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get discovery by Id params
func (o *GetDiscoveryByIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithID adds the id to the get discovery by Id params
func (o *GetDiscoveryByIDParams) WithID(id string) *GetDiscoveryByIDParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the get discovery by Id params
func (o *GetDiscoveryByIDParams) SetID(id string) {
	o.ID = id
}

// WriteToRequest writes these params to a swagger request
func (o *GetDiscoveryByIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
