// Code generated by go-swagger; DO NOT EDIT.

package network_discovery

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeleteGlobalCredentialsByIDParams creates a new DeleteGlobalCredentialsByIDParams object
// with the default values initialized.
func NewDeleteGlobalCredentialsByIDParams() *DeleteGlobalCredentialsByIDParams {
	var ()
	return &DeleteGlobalCredentialsByIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteGlobalCredentialsByIDParamsWithTimeout creates a new DeleteGlobalCredentialsByIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteGlobalCredentialsByIDParamsWithTimeout(timeout time.Duration) *DeleteGlobalCredentialsByIDParams {
	var ()
	return &DeleteGlobalCredentialsByIDParams{

		timeout: timeout,
	}
}

// NewDeleteGlobalCredentialsByIDParamsWithContext creates a new DeleteGlobalCredentialsByIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteGlobalCredentialsByIDParamsWithContext(ctx context.Context) *DeleteGlobalCredentialsByIDParams {
	var ()
	return &DeleteGlobalCredentialsByIDParams{

		Context: ctx,
	}
}

// NewDeleteGlobalCredentialsByIDParamsWithHTTPClient creates a new DeleteGlobalCredentialsByIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteGlobalCredentialsByIDParamsWithHTTPClient(client *http.Client) *DeleteGlobalCredentialsByIDParams {
	var ()
	return &DeleteGlobalCredentialsByIDParams{
		HTTPClient: client,
	}
}

/*DeleteGlobalCredentialsByIDParams contains all the parameters to send to the API endpoint
for the delete global credentials by Id operation typically these are written to a http.Request
*/
type DeleteGlobalCredentialsByIDParams struct {

	/*GlobalCredentialID
	  ID of global-credential

	*/
	GlobalCredentialID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete global credentials by Id params
func (o *DeleteGlobalCredentialsByIDParams) WithTimeout(timeout time.Duration) *DeleteGlobalCredentialsByIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete global credentials by Id params
func (o *DeleteGlobalCredentialsByIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete global credentials by Id params
func (o *DeleteGlobalCredentialsByIDParams) WithContext(ctx context.Context) *DeleteGlobalCredentialsByIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete global credentials by Id params
func (o *DeleteGlobalCredentialsByIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete global credentials by Id params
func (o *DeleteGlobalCredentialsByIDParams) WithHTTPClient(client *http.Client) *DeleteGlobalCredentialsByIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete global credentials by Id params
func (o *DeleteGlobalCredentialsByIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithGlobalCredentialID adds the globalCredentialID to the delete global credentials by Id params
func (o *DeleteGlobalCredentialsByIDParams) WithGlobalCredentialID(globalCredentialID string) *DeleteGlobalCredentialsByIDParams {
	o.SetGlobalCredentialID(globalCredentialID)
	return o
}

// SetGlobalCredentialID adds the globalCredentialId to the delete global credentials by Id params
func (o *DeleteGlobalCredentialsByIDParams) SetGlobalCredentialID(globalCredentialID string) {
	o.GlobalCredentialID = globalCredentialID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteGlobalCredentialsByIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param globalCredentialId
	if err := r.SetPathParam("globalCredentialId", o.GlobalCredentialID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
