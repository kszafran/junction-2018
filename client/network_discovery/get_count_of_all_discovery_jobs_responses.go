// Code generated by go-swagger; DO NOT EDIT.

package network_discovery

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// GetCountOfAllDiscoveryJobsReader is a Reader for the GetCountOfAllDiscoveryJobs structure.
type GetCountOfAllDiscoveryJobsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCountOfAllDiscoveryJobsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCountOfAllDiscoveryJobsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewGetCountOfAllDiscoveryJobsNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewGetCountOfAllDiscoveryJobsPartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetCountOfAllDiscoveryJobsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetCountOfAllDiscoveryJobsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetCountOfAllDiscoveryJobsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetCountOfAllDiscoveryJobsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewGetCountOfAllDiscoveryJobsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewGetCountOfAllDiscoveryJobsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetCountOfAllDiscoveryJobsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewGetCountOfAllDiscoveryJobsNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetCountOfAllDiscoveryJobsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetCountOfAllDiscoveryJobsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCountOfAllDiscoveryJobsOK creates a GetCountOfAllDiscoveryJobsOK with default headers values
func NewGetCountOfAllDiscoveryJobsOK() *GetCountOfAllDiscoveryJobsOK {
	return &GetCountOfAllDiscoveryJobsOK{}
}

/*GetCountOfAllDiscoveryJobsOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type GetCountOfAllDiscoveryJobsOK struct {
	Payload *models.CountResult
}

func (o *GetCountOfAllDiscoveryJobsOK) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/discovery/count][%d] getCountOfAllDiscoveryJobsOK  %+v", 200, o.Payload)
}

func (o *GetCountOfAllDiscoveryJobsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CountResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCountOfAllDiscoveryJobsNoContent creates a GetCountOfAllDiscoveryJobsNoContent with default headers values
func NewGetCountOfAllDiscoveryJobsNoContent() *GetCountOfAllDiscoveryJobsNoContent {
	return &GetCountOfAllDiscoveryJobsNoContent{}
}

/*GetCountOfAllDiscoveryJobsNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type GetCountOfAllDiscoveryJobsNoContent struct {
}

func (o *GetCountOfAllDiscoveryJobsNoContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/discovery/count][%d] getCountOfAllDiscoveryJobsNoContent ", 204)
}

func (o *GetCountOfAllDiscoveryJobsNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCountOfAllDiscoveryJobsPartialContent creates a GetCountOfAllDiscoveryJobsPartialContent with default headers values
func NewGetCountOfAllDiscoveryJobsPartialContent() *GetCountOfAllDiscoveryJobsPartialContent {
	return &GetCountOfAllDiscoveryJobsPartialContent{}
}

/*GetCountOfAllDiscoveryJobsPartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type GetCountOfAllDiscoveryJobsPartialContent struct {
}

func (o *GetCountOfAllDiscoveryJobsPartialContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/discovery/count][%d] getCountOfAllDiscoveryJobsPartialContent ", 206)
}

func (o *GetCountOfAllDiscoveryJobsPartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCountOfAllDiscoveryJobsBadRequest creates a GetCountOfAllDiscoveryJobsBadRequest with default headers values
func NewGetCountOfAllDiscoveryJobsBadRequest() *GetCountOfAllDiscoveryJobsBadRequest {
	return &GetCountOfAllDiscoveryJobsBadRequest{}
}

/*GetCountOfAllDiscoveryJobsBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type GetCountOfAllDiscoveryJobsBadRequest struct {
}

func (o *GetCountOfAllDiscoveryJobsBadRequest) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/discovery/count][%d] getCountOfAllDiscoveryJobsBadRequest ", 400)
}

func (o *GetCountOfAllDiscoveryJobsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCountOfAllDiscoveryJobsUnauthorized creates a GetCountOfAllDiscoveryJobsUnauthorized with default headers values
func NewGetCountOfAllDiscoveryJobsUnauthorized() *GetCountOfAllDiscoveryJobsUnauthorized {
	return &GetCountOfAllDiscoveryJobsUnauthorized{}
}

/*GetCountOfAllDiscoveryJobsUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type GetCountOfAllDiscoveryJobsUnauthorized struct {
}

func (o *GetCountOfAllDiscoveryJobsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/discovery/count][%d] getCountOfAllDiscoveryJobsUnauthorized ", 401)
}

func (o *GetCountOfAllDiscoveryJobsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCountOfAllDiscoveryJobsForbidden creates a GetCountOfAllDiscoveryJobsForbidden with default headers values
func NewGetCountOfAllDiscoveryJobsForbidden() *GetCountOfAllDiscoveryJobsForbidden {
	return &GetCountOfAllDiscoveryJobsForbidden{}
}

/*GetCountOfAllDiscoveryJobsForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type GetCountOfAllDiscoveryJobsForbidden struct {
}

func (o *GetCountOfAllDiscoveryJobsForbidden) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/discovery/count][%d] getCountOfAllDiscoveryJobsForbidden ", 403)
}

func (o *GetCountOfAllDiscoveryJobsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCountOfAllDiscoveryJobsNotFound creates a GetCountOfAllDiscoveryJobsNotFound with default headers values
func NewGetCountOfAllDiscoveryJobsNotFound() *GetCountOfAllDiscoveryJobsNotFound {
	return &GetCountOfAllDiscoveryJobsNotFound{}
}

/*GetCountOfAllDiscoveryJobsNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type GetCountOfAllDiscoveryJobsNotFound struct {
}

func (o *GetCountOfAllDiscoveryJobsNotFound) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/discovery/count][%d] getCountOfAllDiscoveryJobsNotFound ", 404)
}

func (o *GetCountOfAllDiscoveryJobsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCountOfAllDiscoveryJobsConflict creates a GetCountOfAllDiscoveryJobsConflict with default headers values
func NewGetCountOfAllDiscoveryJobsConflict() *GetCountOfAllDiscoveryJobsConflict {
	return &GetCountOfAllDiscoveryJobsConflict{}
}

/*GetCountOfAllDiscoveryJobsConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type GetCountOfAllDiscoveryJobsConflict struct {
}

func (o *GetCountOfAllDiscoveryJobsConflict) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/discovery/count][%d] getCountOfAllDiscoveryJobsConflict ", 409)
}

func (o *GetCountOfAllDiscoveryJobsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCountOfAllDiscoveryJobsUnsupportedMediaType creates a GetCountOfAllDiscoveryJobsUnsupportedMediaType with default headers values
func NewGetCountOfAllDiscoveryJobsUnsupportedMediaType() *GetCountOfAllDiscoveryJobsUnsupportedMediaType {
	return &GetCountOfAllDiscoveryJobsUnsupportedMediaType{}
}

/*GetCountOfAllDiscoveryJobsUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type GetCountOfAllDiscoveryJobsUnsupportedMediaType struct {
}

func (o *GetCountOfAllDiscoveryJobsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/discovery/count][%d] getCountOfAllDiscoveryJobsUnsupportedMediaType ", 415)
}

func (o *GetCountOfAllDiscoveryJobsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCountOfAllDiscoveryJobsInternalServerError creates a GetCountOfAllDiscoveryJobsInternalServerError with default headers values
func NewGetCountOfAllDiscoveryJobsInternalServerError() *GetCountOfAllDiscoveryJobsInternalServerError {
	return &GetCountOfAllDiscoveryJobsInternalServerError{}
}

/*GetCountOfAllDiscoveryJobsInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type GetCountOfAllDiscoveryJobsInternalServerError struct {
}

func (o *GetCountOfAllDiscoveryJobsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/discovery/count][%d] getCountOfAllDiscoveryJobsInternalServerError ", 500)
}

func (o *GetCountOfAllDiscoveryJobsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCountOfAllDiscoveryJobsNotImplemented creates a GetCountOfAllDiscoveryJobsNotImplemented with default headers values
func NewGetCountOfAllDiscoveryJobsNotImplemented() *GetCountOfAllDiscoveryJobsNotImplemented {
	return &GetCountOfAllDiscoveryJobsNotImplemented{}
}

/*GetCountOfAllDiscoveryJobsNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type GetCountOfAllDiscoveryJobsNotImplemented struct {
}

func (o *GetCountOfAllDiscoveryJobsNotImplemented) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/discovery/count][%d] getCountOfAllDiscoveryJobsNotImplemented ", 501)
}

func (o *GetCountOfAllDiscoveryJobsNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCountOfAllDiscoveryJobsServiceUnavailable creates a GetCountOfAllDiscoveryJobsServiceUnavailable with default headers values
func NewGetCountOfAllDiscoveryJobsServiceUnavailable() *GetCountOfAllDiscoveryJobsServiceUnavailable {
	return &GetCountOfAllDiscoveryJobsServiceUnavailable{}
}

/*GetCountOfAllDiscoveryJobsServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type GetCountOfAllDiscoveryJobsServiceUnavailable struct {
}

func (o *GetCountOfAllDiscoveryJobsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/discovery/count][%d] getCountOfAllDiscoveryJobsServiceUnavailable ", 503)
}

func (o *GetCountOfAllDiscoveryJobsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCountOfAllDiscoveryJobsGatewayTimeout creates a GetCountOfAllDiscoveryJobsGatewayTimeout with default headers values
func NewGetCountOfAllDiscoveryJobsGatewayTimeout() *GetCountOfAllDiscoveryJobsGatewayTimeout {
	return &GetCountOfAllDiscoveryJobsGatewayTimeout{}
}

/*GetCountOfAllDiscoveryJobsGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type GetCountOfAllDiscoveryJobsGatewayTimeout struct {
}

func (o *GetCountOfAllDiscoveryJobsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/discovery/count][%d] getCountOfAllDiscoveryJobsGatewayTimeout ", 504)
}

func (o *GetCountOfAllDiscoveryJobsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
