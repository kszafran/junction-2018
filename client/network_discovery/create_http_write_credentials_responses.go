// Code generated by go-swagger; DO NOT EDIT.

package network_discovery

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// CreateHTTPWriteCredentialsReader is a Reader for the CreateHTTPWriteCredentials structure.
type CreateHTTPWriteCredentialsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateHTTPWriteCredentialsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewCreateHTTPWriteCredentialsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 201:
		result := NewCreateHTTPWriteCredentialsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 202:
		result := NewCreateHTTPWriteCredentialsAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewCreateHTTPWriteCredentialsNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewCreateHTTPWriteCredentialsPartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewCreateHTTPWriteCredentialsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewCreateHTTPWriteCredentialsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewCreateHTTPWriteCredentialsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewCreateHTTPWriteCredentialsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewCreateHTTPWriteCredentialsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewCreateHTTPWriteCredentialsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewCreateHTTPWriteCredentialsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewCreateHTTPWriteCredentialsNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewCreateHTTPWriteCredentialsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewCreateHTTPWriteCredentialsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateHTTPWriteCredentialsOK creates a CreateHTTPWriteCredentialsOK with default headers values
func NewCreateHTTPWriteCredentialsOK() *CreateHTTPWriteCredentialsOK {
	return &CreateHTTPWriteCredentialsOK{}
}

/*CreateHTTPWriteCredentialsOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type CreateHTTPWriteCredentialsOK struct {
	Payload *models.TaskIDResult
}

func (o *CreateHTTPWriteCredentialsOK) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/global-credential/http-write][%d] createHttpWriteCredentialsOK  %+v", 200, o.Payload)
}

func (o *CreateHTTPWriteCredentialsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TaskIDResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateHTTPWriteCredentialsCreated creates a CreateHTTPWriteCredentialsCreated with default headers values
func NewCreateHTTPWriteCredentialsCreated() *CreateHTTPWriteCredentialsCreated {
	return &CreateHTTPWriteCredentialsCreated{}
}

/*CreateHTTPWriteCredentialsCreated handles this case with default header values.

The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body.
*/
type CreateHTTPWriteCredentialsCreated struct {
}

func (o *CreateHTTPWriteCredentialsCreated) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/global-credential/http-write][%d] createHttpWriteCredentialsCreated ", 201)
}

func (o *CreateHTTPWriteCredentialsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateHTTPWriteCredentialsAccepted creates a CreateHTTPWriteCredentialsAccepted with default headers values
func NewCreateHTTPWriteCredentialsAccepted() *CreateHTTPWriteCredentialsAccepted {
	return &CreateHTTPWriteCredentialsAccepted{}
}

/*CreateHTTPWriteCredentialsAccepted handles this case with default header values.

The request was accepted for processing, but the processing has not been completed.
*/
type CreateHTTPWriteCredentialsAccepted struct {
}

func (o *CreateHTTPWriteCredentialsAccepted) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/global-credential/http-write][%d] createHttpWriteCredentialsAccepted ", 202)
}

func (o *CreateHTTPWriteCredentialsAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateHTTPWriteCredentialsNoContent creates a CreateHTTPWriteCredentialsNoContent with default headers values
func NewCreateHTTPWriteCredentialsNoContent() *CreateHTTPWriteCredentialsNoContent {
	return &CreateHTTPWriteCredentialsNoContent{}
}

/*CreateHTTPWriteCredentialsNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type CreateHTTPWriteCredentialsNoContent struct {
}

func (o *CreateHTTPWriteCredentialsNoContent) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/global-credential/http-write][%d] createHttpWriteCredentialsNoContent ", 204)
}

func (o *CreateHTTPWriteCredentialsNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateHTTPWriteCredentialsPartialContent creates a CreateHTTPWriteCredentialsPartialContent with default headers values
func NewCreateHTTPWriteCredentialsPartialContent() *CreateHTTPWriteCredentialsPartialContent {
	return &CreateHTTPWriteCredentialsPartialContent{}
}

/*CreateHTTPWriteCredentialsPartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type CreateHTTPWriteCredentialsPartialContent struct {
}

func (o *CreateHTTPWriteCredentialsPartialContent) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/global-credential/http-write][%d] createHttpWriteCredentialsPartialContent ", 206)
}

func (o *CreateHTTPWriteCredentialsPartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateHTTPWriteCredentialsBadRequest creates a CreateHTTPWriteCredentialsBadRequest with default headers values
func NewCreateHTTPWriteCredentialsBadRequest() *CreateHTTPWriteCredentialsBadRequest {
	return &CreateHTTPWriteCredentialsBadRequest{}
}

/*CreateHTTPWriteCredentialsBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type CreateHTTPWriteCredentialsBadRequest struct {
}

func (o *CreateHTTPWriteCredentialsBadRequest) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/global-credential/http-write][%d] createHttpWriteCredentialsBadRequest ", 400)
}

func (o *CreateHTTPWriteCredentialsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateHTTPWriteCredentialsUnauthorized creates a CreateHTTPWriteCredentialsUnauthorized with default headers values
func NewCreateHTTPWriteCredentialsUnauthorized() *CreateHTTPWriteCredentialsUnauthorized {
	return &CreateHTTPWriteCredentialsUnauthorized{}
}

/*CreateHTTPWriteCredentialsUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type CreateHTTPWriteCredentialsUnauthorized struct {
}

func (o *CreateHTTPWriteCredentialsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/global-credential/http-write][%d] createHttpWriteCredentialsUnauthorized ", 401)
}

func (o *CreateHTTPWriteCredentialsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateHTTPWriteCredentialsForbidden creates a CreateHTTPWriteCredentialsForbidden with default headers values
func NewCreateHTTPWriteCredentialsForbidden() *CreateHTTPWriteCredentialsForbidden {
	return &CreateHTTPWriteCredentialsForbidden{}
}

/*CreateHTTPWriteCredentialsForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type CreateHTTPWriteCredentialsForbidden struct {
}

func (o *CreateHTTPWriteCredentialsForbidden) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/global-credential/http-write][%d] createHttpWriteCredentialsForbidden ", 403)
}

func (o *CreateHTTPWriteCredentialsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateHTTPWriteCredentialsNotFound creates a CreateHTTPWriteCredentialsNotFound with default headers values
func NewCreateHTTPWriteCredentialsNotFound() *CreateHTTPWriteCredentialsNotFound {
	return &CreateHTTPWriteCredentialsNotFound{}
}

/*CreateHTTPWriteCredentialsNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type CreateHTTPWriteCredentialsNotFound struct {
}

func (o *CreateHTTPWriteCredentialsNotFound) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/global-credential/http-write][%d] createHttpWriteCredentialsNotFound ", 404)
}

func (o *CreateHTTPWriteCredentialsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateHTTPWriteCredentialsConflict creates a CreateHTTPWriteCredentialsConflict with default headers values
func NewCreateHTTPWriteCredentialsConflict() *CreateHTTPWriteCredentialsConflict {
	return &CreateHTTPWriteCredentialsConflict{}
}

/*CreateHTTPWriteCredentialsConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type CreateHTTPWriteCredentialsConflict struct {
}

func (o *CreateHTTPWriteCredentialsConflict) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/global-credential/http-write][%d] createHttpWriteCredentialsConflict ", 409)
}

func (o *CreateHTTPWriteCredentialsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateHTTPWriteCredentialsUnsupportedMediaType creates a CreateHTTPWriteCredentialsUnsupportedMediaType with default headers values
func NewCreateHTTPWriteCredentialsUnsupportedMediaType() *CreateHTTPWriteCredentialsUnsupportedMediaType {
	return &CreateHTTPWriteCredentialsUnsupportedMediaType{}
}

/*CreateHTTPWriteCredentialsUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type CreateHTTPWriteCredentialsUnsupportedMediaType struct {
}

func (o *CreateHTTPWriteCredentialsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/global-credential/http-write][%d] createHttpWriteCredentialsUnsupportedMediaType ", 415)
}

func (o *CreateHTTPWriteCredentialsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateHTTPWriteCredentialsInternalServerError creates a CreateHTTPWriteCredentialsInternalServerError with default headers values
func NewCreateHTTPWriteCredentialsInternalServerError() *CreateHTTPWriteCredentialsInternalServerError {
	return &CreateHTTPWriteCredentialsInternalServerError{}
}

/*CreateHTTPWriteCredentialsInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type CreateHTTPWriteCredentialsInternalServerError struct {
}

func (o *CreateHTTPWriteCredentialsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/global-credential/http-write][%d] createHttpWriteCredentialsInternalServerError ", 500)
}

func (o *CreateHTTPWriteCredentialsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateHTTPWriteCredentialsNotImplemented creates a CreateHTTPWriteCredentialsNotImplemented with default headers values
func NewCreateHTTPWriteCredentialsNotImplemented() *CreateHTTPWriteCredentialsNotImplemented {
	return &CreateHTTPWriteCredentialsNotImplemented{}
}

/*CreateHTTPWriteCredentialsNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type CreateHTTPWriteCredentialsNotImplemented struct {
}

func (o *CreateHTTPWriteCredentialsNotImplemented) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/global-credential/http-write][%d] createHttpWriteCredentialsNotImplemented ", 501)
}

func (o *CreateHTTPWriteCredentialsNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateHTTPWriteCredentialsServiceUnavailable creates a CreateHTTPWriteCredentialsServiceUnavailable with default headers values
func NewCreateHTTPWriteCredentialsServiceUnavailable() *CreateHTTPWriteCredentialsServiceUnavailable {
	return &CreateHTTPWriteCredentialsServiceUnavailable{}
}

/*CreateHTTPWriteCredentialsServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type CreateHTTPWriteCredentialsServiceUnavailable struct {
}

func (o *CreateHTTPWriteCredentialsServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/global-credential/http-write][%d] createHttpWriteCredentialsServiceUnavailable ", 503)
}

func (o *CreateHTTPWriteCredentialsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateHTTPWriteCredentialsGatewayTimeout creates a CreateHTTPWriteCredentialsGatewayTimeout with default headers values
func NewCreateHTTPWriteCredentialsGatewayTimeout() *CreateHTTPWriteCredentialsGatewayTimeout {
	return &CreateHTTPWriteCredentialsGatewayTimeout{}
}

/*CreateHTTPWriteCredentialsGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type CreateHTTPWriteCredentialsGatewayTimeout struct {
}

func (o *CreateHTTPWriteCredentialsGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/global-credential/http-write][%d] createHttpWriteCredentialsGatewayTimeout ", 504)
}

func (o *CreateHTTPWriteCredentialsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
