// Code generated by go-swagger; DO NOT EDIT.

package network_discovery

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// DeleteDiscoveryByIDReader is a Reader for the DeleteDiscoveryByID structure.
type DeleteDiscoveryByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteDiscoveryByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeleteDiscoveryByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewDeleteDiscoveryByIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewDeleteDiscoveryByIDPartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDeleteDiscoveryByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewDeleteDiscoveryByIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewDeleteDiscoveryByIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteDiscoveryByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewDeleteDiscoveryByIDConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewDeleteDiscoveryByIDUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewDeleteDiscoveryByIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewDeleteDiscoveryByIDNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewDeleteDiscoveryByIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewDeleteDiscoveryByIDGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteDiscoveryByIDOK creates a DeleteDiscoveryByIDOK with default headers values
func NewDeleteDiscoveryByIDOK() *DeleteDiscoveryByIDOK {
	return &DeleteDiscoveryByIDOK{}
}

/*DeleteDiscoveryByIDOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type DeleteDiscoveryByIDOK struct {
	Payload *models.TaskIDResult
}

func (o *DeleteDiscoveryByIDOK) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/discovery/{id}][%d] deleteDiscoveryByIdOK  %+v", 200, o.Payload)
}

func (o *DeleteDiscoveryByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TaskIDResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDiscoveryByIDNoContent creates a DeleteDiscoveryByIDNoContent with default headers values
func NewDeleteDiscoveryByIDNoContent() *DeleteDiscoveryByIDNoContent {
	return &DeleteDiscoveryByIDNoContent{}
}

/*DeleteDiscoveryByIDNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type DeleteDiscoveryByIDNoContent struct {
}

func (o *DeleteDiscoveryByIDNoContent) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/discovery/{id}][%d] deleteDiscoveryByIdNoContent ", 204)
}

func (o *DeleteDiscoveryByIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDiscoveryByIDPartialContent creates a DeleteDiscoveryByIDPartialContent with default headers values
func NewDeleteDiscoveryByIDPartialContent() *DeleteDiscoveryByIDPartialContent {
	return &DeleteDiscoveryByIDPartialContent{}
}

/*DeleteDiscoveryByIDPartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type DeleteDiscoveryByIDPartialContent struct {
}

func (o *DeleteDiscoveryByIDPartialContent) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/discovery/{id}][%d] deleteDiscoveryByIdPartialContent ", 206)
}

func (o *DeleteDiscoveryByIDPartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDiscoveryByIDBadRequest creates a DeleteDiscoveryByIDBadRequest with default headers values
func NewDeleteDiscoveryByIDBadRequest() *DeleteDiscoveryByIDBadRequest {
	return &DeleteDiscoveryByIDBadRequest{}
}

/*DeleteDiscoveryByIDBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type DeleteDiscoveryByIDBadRequest struct {
}

func (o *DeleteDiscoveryByIDBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/discovery/{id}][%d] deleteDiscoveryByIdBadRequest ", 400)
}

func (o *DeleteDiscoveryByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDiscoveryByIDUnauthorized creates a DeleteDiscoveryByIDUnauthorized with default headers values
func NewDeleteDiscoveryByIDUnauthorized() *DeleteDiscoveryByIDUnauthorized {
	return &DeleteDiscoveryByIDUnauthorized{}
}

/*DeleteDiscoveryByIDUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type DeleteDiscoveryByIDUnauthorized struct {
}

func (o *DeleteDiscoveryByIDUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/discovery/{id}][%d] deleteDiscoveryByIdUnauthorized ", 401)
}

func (o *DeleteDiscoveryByIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDiscoveryByIDForbidden creates a DeleteDiscoveryByIDForbidden with default headers values
func NewDeleteDiscoveryByIDForbidden() *DeleteDiscoveryByIDForbidden {
	return &DeleteDiscoveryByIDForbidden{}
}

/*DeleteDiscoveryByIDForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type DeleteDiscoveryByIDForbidden struct {
}

func (o *DeleteDiscoveryByIDForbidden) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/discovery/{id}][%d] deleteDiscoveryByIdForbidden ", 403)
}

func (o *DeleteDiscoveryByIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDiscoveryByIDNotFound creates a DeleteDiscoveryByIDNotFound with default headers values
func NewDeleteDiscoveryByIDNotFound() *DeleteDiscoveryByIDNotFound {
	return &DeleteDiscoveryByIDNotFound{}
}

/*DeleteDiscoveryByIDNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type DeleteDiscoveryByIDNotFound struct {
}

func (o *DeleteDiscoveryByIDNotFound) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/discovery/{id}][%d] deleteDiscoveryByIdNotFound ", 404)
}

func (o *DeleteDiscoveryByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDiscoveryByIDConflict creates a DeleteDiscoveryByIDConflict with default headers values
func NewDeleteDiscoveryByIDConflict() *DeleteDiscoveryByIDConflict {
	return &DeleteDiscoveryByIDConflict{}
}

/*DeleteDiscoveryByIDConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type DeleteDiscoveryByIDConflict struct {
}

func (o *DeleteDiscoveryByIDConflict) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/discovery/{id}][%d] deleteDiscoveryByIdConflict ", 409)
}

func (o *DeleteDiscoveryByIDConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDiscoveryByIDUnsupportedMediaType creates a DeleteDiscoveryByIDUnsupportedMediaType with default headers values
func NewDeleteDiscoveryByIDUnsupportedMediaType() *DeleteDiscoveryByIDUnsupportedMediaType {
	return &DeleteDiscoveryByIDUnsupportedMediaType{}
}

/*DeleteDiscoveryByIDUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type DeleteDiscoveryByIDUnsupportedMediaType struct {
}

func (o *DeleteDiscoveryByIDUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/discovery/{id}][%d] deleteDiscoveryByIdUnsupportedMediaType ", 415)
}

func (o *DeleteDiscoveryByIDUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDiscoveryByIDInternalServerError creates a DeleteDiscoveryByIDInternalServerError with default headers values
func NewDeleteDiscoveryByIDInternalServerError() *DeleteDiscoveryByIDInternalServerError {
	return &DeleteDiscoveryByIDInternalServerError{}
}

/*DeleteDiscoveryByIDInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type DeleteDiscoveryByIDInternalServerError struct {
}

func (o *DeleteDiscoveryByIDInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/discovery/{id}][%d] deleteDiscoveryByIdInternalServerError ", 500)
}

func (o *DeleteDiscoveryByIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDiscoveryByIDNotImplemented creates a DeleteDiscoveryByIDNotImplemented with default headers values
func NewDeleteDiscoveryByIDNotImplemented() *DeleteDiscoveryByIDNotImplemented {
	return &DeleteDiscoveryByIDNotImplemented{}
}

/*DeleteDiscoveryByIDNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type DeleteDiscoveryByIDNotImplemented struct {
}

func (o *DeleteDiscoveryByIDNotImplemented) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/discovery/{id}][%d] deleteDiscoveryByIdNotImplemented ", 501)
}

func (o *DeleteDiscoveryByIDNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDiscoveryByIDServiceUnavailable creates a DeleteDiscoveryByIDServiceUnavailable with default headers values
func NewDeleteDiscoveryByIDServiceUnavailable() *DeleteDiscoveryByIDServiceUnavailable {
	return &DeleteDiscoveryByIDServiceUnavailable{}
}

/*DeleteDiscoveryByIDServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type DeleteDiscoveryByIDServiceUnavailable struct {
}

func (o *DeleteDiscoveryByIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/discovery/{id}][%d] deleteDiscoveryByIdServiceUnavailable ", 503)
}

func (o *DeleteDiscoveryByIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDiscoveryByIDGatewayTimeout creates a DeleteDiscoveryByIDGatewayTimeout with default headers values
func NewDeleteDiscoveryByIDGatewayTimeout() *DeleteDiscoveryByIDGatewayTimeout {
	return &DeleteDiscoveryByIDGatewayTimeout{}
}

/*DeleteDiscoveryByIDGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type DeleteDiscoveryByIDGatewayTimeout struct {
}

func (o *DeleteDiscoveryByIDGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/discovery/{id}][%d] deleteDiscoveryByIdGatewayTimeout ", 504)
}

func (o *DeleteDiscoveryByIDGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
