// Code generated by go-swagger; DO NOT EDIT.

package network_discovery

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// UpdateSNMPWriteCommunityReader is a Reader for the UpdateSNMPWriteCommunity structure.
type UpdateSNMPWriteCommunityReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateSNMPWriteCommunityReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUpdateSNMPWriteCommunityOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 201:
		result := NewUpdateSNMPWriteCommunityCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 202:
		result := NewUpdateSNMPWriteCommunityAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewUpdateSNMPWriteCommunityNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewUpdateSNMPWriteCommunityPartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewUpdateSNMPWriteCommunityBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewUpdateSNMPWriteCommunityUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewUpdateSNMPWriteCommunityForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewUpdateSNMPWriteCommunityNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewUpdateSNMPWriteCommunityConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewUpdateSNMPWriteCommunityUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewUpdateSNMPWriteCommunityInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewUpdateSNMPWriteCommunityNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewUpdateSNMPWriteCommunityServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewUpdateSNMPWriteCommunityGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateSNMPWriteCommunityOK creates a UpdateSNMPWriteCommunityOK with default headers values
func NewUpdateSNMPWriteCommunityOK() *UpdateSNMPWriteCommunityOK {
	return &UpdateSNMPWriteCommunityOK{}
}

/*UpdateSNMPWriteCommunityOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type UpdateSNMPWriteCommunityOK struct {
	Payload *models.TaskIDResult
}

func (o *UpdateSNMPWriteCommunityOK) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/global-credential/snmpv2-write-community][%d] updateSNMPWriteCommunityOK  %+v", 200, o.Payload)
}

func (o *UpdateSNMPWriteCommunityOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TaskIDResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateSNMPWriteCommunityCreated creates a UpdateSNMPWriteCommunityCreated with default headers values
func NewUpdateSNMPWriteCommunityCreated() *UpdateSNMPWriteCommunityCreated {
	return &UpdateSNMPWriteCommunityCreated{}
}

/*UpdateSNMPWriteCommunityCreated handles this case with default header values.

The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body.
*/
type UpdateSNMPWriteCommunityCreated struct {
}

func (o *UpdateSNMPWriteCommunityCreated) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/global-credential/snmpv2-write-community][%d] updateSNMPWriteCommunityCreated ", 201)
}

func (o *UpdateSNMPWriteCommunityCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateSNMPWriteCommunityAccepted creates a UpdateSNMPWriteCommunityAccepted with default headers values
func NewUpdateSNMPWriteCommunityAccepted() *UpdateSNMPWriteCommunityAccepted {
	return &UpdateSNMPWriteCommunityAccepted{}
}

/*UpdateSNMPWriteCommunityAccepted handles this case with default header values.

The request was accepted for processing, but the processing has not been completed.
*/
type UpdateSNMPWriteCommunityAccepted struct {
}

func (o *UpdateSNMPWriteCommunityAccepted) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/global-credential/snmpv2-write-community][%d] updateSNMPWriteCommunityAccepted ", 202)
}

func (o *UpdateSNMPWriteCommunityAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateSNMPWriteCommunityNoContent creates a UpdateSNMPWriteCommunityNoContent with default headers values
func NewUpdateSNMPWriteCommunityNoContent() *UpdateSNMPWriteCommunityNoContent {
	return &UpdateSNMPWriteCommunityNoContent{}
}

/*UpdateSNMPWriteCommunityNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type UpdateSNMPWriteCommunityNoContent struct {
}

func (o *UpdateSNMPWriteCommunityNoContent) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/global-credential/snmpv2-write-community][%d] updateSNMPWriteCommunityNoContent ", 204)
}

func (o *UpdateSNMPWriteCommunityNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateSNMPWriteCommunityPartialContent creates a UpdateSNMPWriteCommunityPartialContent with default headers values
func NewUpdateSNMPWriteCommunityPartialContent() *UpdateSNMPWriteCommunityPartialContent {
	return &UpdateSNMPWriteCommunityPartialContent{}
}

/*UpdateSNMPWriteCommunityPartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type UpdateSNMPWriteCommunityPartialContent struct {
}

func (o *UpdateSNMPWriteCommunityPartialContent) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/global-credential/snmpv2-write-community][%d] updateSNMPWriteCommunityPartialContent ", 206)
}

func (o *UpdateSNMPWriteCommunityPartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateSNMPWriteCommunityBadRequest creates a UpdateSNMPWriteCommunityBadRequest with default headers values
func NewUpdateSNMPWriteCommunityBadRequest() *UpdateSNMPWriteCommunityBadRequest {
	return &UpdateSNMPWriteCommunityBadRequest{}
}

/*UpdateSNMPWriteCommunityBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type UpdateSNMPWriteCommunityBadRequest struct {
}

func (o *UpdateSNMPWriteCommunityBadRequest) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/global-credential/snmpv2-write-community][%d] updateSNMPWriteCommunityBadRequest ", 400)
}

func (o *UpdateSNMPWriteCommunityBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateSNMPWriteCommunityUnauthorized creates a UpdateSNMPWriteCommunityUnauthorized with default headers values
func NewUpdateSNMPWriteCommunityUnauthorized() *UpdateSNMPWriteCommunityUnauthorized {
	return &UpdateSNMPWriteCommunityUnauthorized{}
}

/*UpdateSNMPWriteCommunityUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type UpdateSNMPWriteCommunityUnauthorized struct {
}

func (o *UpdateSNMPWriteCommunityUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/global-credential/snmpv2-write-community][%d] updateSNMPWriteCommunityUnauthorized ", 401)
}

func (o *UpdateSNMPWriteCommunityUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateSNMPWriteCommunityForbidden creates a UpdateSNMPWriteCommunityForbidden with default headers values
func NewUpdateSNMPWriteCommunityForbidden() *UpdateSNMPWriteCommunityForbidden {
	return &UpdateSNMPWriteCommunityForbidden{}
}

/*UpdateSNMPWriteCommunityForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type UpdateSNMPWriteCommunityForbidden struct {
}

func (o *UpdateSNMPWriteCommunityForbidden) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/global-credential/snmpv2-write-community][%d] updateSNMPWriteCommunityForbidden ", 403)
}

func (o *UpdateSNMPWriteCommunityForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateSNMPWriteCommunityNotFound creates a UpdateSNMPWriteCommunityNotFound with default headers values
func NewUpdateSNMPWriteCommunityNotFound() *UpdateSNMPWriteCommunityNotFound {
	return &UpdateSNMPWriteCommunityNotFound{}
}

/*UpdateSNMPWriteCommunityNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type UpdateSNMPWriteCommunityNotFound struct {
}

func (o *UpdateSNMPWriteCommunityNotFound) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/global-credential/snmpv2-write-community][%d] updateSNMPWriteCommunityNotFound ", 404)
}

func (o *UpdateSNMPWriteCommunityNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateSNMPWriteCommunityConflict creates a UpdateSNMPWriteCommunityConflict with default headers values
func NewUpdateSNMPWriteCommunityConflict() *UpdateSNMPWriteCommunityConflict {
	return &UpdateSNMPWriteCommunityConflict{}
}

/*UpdateSNMPWriteCommunityConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type UpdateSNMPWriteCommunityConflict struct {
}

func (o *UpdateSNMPWriteCommunityConflict) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/global-credential/snmpv2-write-community][%d] updateSNMPWriteCommunityConflict ", 409)
}

func (o *UpdateSNMPWriteCommunityConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateSNMPWriteCommunityUnsupportedMediaType creates a UpdateSNMPWriteCommunityUnsupportedMediaType with default headers values
func NewUpdateSNMPWriteCommunityUnsupportedMediaType() *UpdateSNMPWriteCommunityUnsupportedMediaType {
	return &UpdateSNMPWriteCommunityUnsupportedMediaType{}
}

/*UpdateSNMPWriteCommunityUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type UpdateSNMPWriteCommunityUnsupportedMediaType struct {
}

func (o *UpdateSNMPWriteCommunityUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/global-credential/snmpv2-write-community][%d] updateSNMPWriteCommunityUnsupportedMediaType ", 415)
}

func (o *UpdateSNMPWriteCommunityUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateSNMPWriteCommunityInternalServerError creates a UpdateSNMPWriteCommunityInternalServerError with default headers values
func NewUpdateSNMPWriteCommunityInternalServerError() *UpdateSNMPWriteCommunityInternalServerError {
	return &UpdateSNMPWriteCommunityInternalServerError{}
}

/*UpdateSNMPWriteCommunityInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type UpdateSNMPWriteCommunityInternalServerError struct {
}

func (o *UpdateSNMPWriteCommunityInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/global-credential/snmpv2-write-community][%d] updateSNMPWriteCommunityInternalServerError ", 500)
}

func (o *UpdateSNMPWriteCommunityInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateSNMPWriteCommunityNotImplemented creates a UpdateSNMPWriteCommunityNotImplemented with default headers values
func NewUpdateSNMPWriteCommunityNotImplemented() *UpdateSNMPWriteCommunityNotImplemented {
	return &UpdateSNMPWriteCommunityNotImplemented{}
}

/*UpdateSNMPWriteCommunityNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type UpdateSNMPWriteCommunityNotImplemented struct {
}

func (o *UpdateSNMPWriteCommunityNotImplemented) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/global-credential/snmpv2-write-community][%d] updateSNMPWriteCommunityNotImplemented ", 501)
}

func (o *UpdateSNMPWriteCommunityNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateSNMPWriteCommunityServiceUnavailable creates a UpdateSNMPWriteCommunityServiceUnavailable with default headers values
func NewUpdateSNMPWriteCommunityServiceUnavailable() *UpdateSNMPWriteCommunityServiceUnavailable {
	return &UpdateSNMPWriteCommunityServiceUnavailable{}
}

/*UpdateSNMPWriteCommunityServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type UpdateSNMPWriteCommunityServiceUnavailable struct {
}

func (o *UpdateSNMPWriteCommunityServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/global-credential/snmpv2-write-community][%d] updateSNMPWriteCommunityServiceUnavailable ", 503)
}

func (o *UpdateSNMPWriteCommunityServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateSNMPWriteCommunityGatewayTimeout creates a UpdateSNMPWriteCommunityGatewayTimeout with default headers values
func NewUpdateSNMPWriteCommunityGatewayTimeout() *UpdateSNMPWriteCommunityGatewayTimeout {
	return &UpdateSNMPWriteCommunityGatewayTimeout{}
}

/*UpdateSNMPWriteCommunityGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type UpdateSNMPWriteCommunityGatewayTimeout struct {
}

func (o *UpdateSNMPWriteCommunityGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/global-credential/snmpv2-write-community][%d] updateSNMPWriteCommunityGatewayTimeout ", 504)
}

func (o *UpdateSNMPWriteCommunityGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
