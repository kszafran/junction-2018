// Code generated by go-swagger; DO NOT EDIT.

package network_discovery

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// CreateNetconfCredentialsReader is a Reader for the CreateNetconfCredentials structure.
type CreateNetconfCredentialsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateNetconfCredentialsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewCreateNetconfCredentialsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 201:
		result := NewCreateNetconfCredentialsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 202:
		result := NewCreateNetconfCredentialsAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewCreateNetconfCredentialsNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewCreateNetconfCredentialsPartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewCreateNetconfCredentialsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewCreateNetconfCredentialsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewCreateNetconfCredentialsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewCreateNetconfCredentialsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewCreateNetconfCredentialsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewCreateNetconfCredentialsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewCreateNetconfCredentialsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewCreateNetconfCredentialsNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewCreateNetconfCredentialsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewCreateNetconfCredentialsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateNetconfCredentialsOK creates a CreateNetconfCredentialsOK with default headers values
func NewCreateNetconfCredentialsOK() *CreateNetconfCredentialsOK {
	return &CreateNetconfCredentialsOK{}
}

/*CreateNetconfCredentialsOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type CreateNetconfCredentialsOK struct {
	Payload *models.TaskIDResult
}

func (o *CreateNetconfCredentialsOK) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/global-credential/netconf][%d] createNetconfCredentialsOK  %+v", 200, o.Payload)
}

func (o *CreateNetconfCredentialsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TaskIDResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateNetconfCredentialsCreated creates a CreateNetconfCredentialsCreated with default headers values
func NewCreateNetconfCredentialsCreated() *CreateNetconfCredentialsCreated {
	return &CreateNetconfCredentialsCreated{}
}

/*CreateNetconfCredentialsCreated handles this case with default header values.

The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body.
*/
type CreateNetconfCredentialsCreated struct {
}

func (o *CreateNetconfCredentialsCreated) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/global-credential/netconf][%d] createNetconfCredentialsCreated ", 201)
}

func (o *CreateNetconfCredentialsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateNetconfCredentialsAccepted creates a CreateNetconfCredentialsAccepted with default headers values
func NewCreateNetconfCredentialsAccepted() *CreateNetconfCredentialsAccepted {
	return &CreateNetconfCredentialsAccepted{}
}

/*CreateNetconfCredentialsAccepted handles this case with default header values.

The request was accepted for processing, but the processing has not been completed.
*/
type CreateNetconfCredentialsAccepted struct {
}

func (o *CreateNetconfCredentialsAccepted) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/global-credential/netconf][%d] createNetconfCredentialsAccepted ", 202)
}

func (o *CreateNetconfCredentialsAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateNetconfCredentialsNoContent creates a CreateNetconfCredentialsNoContent with default headers values
func NewCreateNetconfCredentialsNoContent() *CreateNetconfCredentialsNoContent {
	return &CreateNetconfCredentialsNoContent{}
}

/*CreateNetconfCredentialsNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type CreateNetconfCredentialsNoContent struct {
}

func (o *CreateNetconfCredentialsNoContent) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/global-credential/netconf][%d] createNetconfCredentialsNoContent ", 204)
}

func (o *CreateNetconfCredentialsNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateNetconfCredentialsPartialContent creates a CreateNetconfCredentialsPartialContent with default headers values
func NewCreateNetconfCredentialsPartialContent() *CreateNetconfCredentialsPartialContent {
	return &CreateNetconfCredentialsPartialContent{}
}

/*CreateNetconfCredentialsPartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type CreateNetconfCredentialsPartialContent struct {
}

func (o *CreateNetconfCredentialsPartialContent) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/global-credential/netconf][%d] createNetconfCredentialsPartialContent ", 206)
}

func (o *CreateNetconfCredentialsPartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateNetconfCredentialsBadRequest creates a CreateNetconfCredentialsBadRequest with default headers values
func NewCreateNetconfCredentialsBadRequest() *CreateNetconfCredentialsBadRequest {
	return &CreateNetconfCredentialsBadRequest{}
}

/*CreateNetconfCredentialsBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type CreateNetconfCredentialsBadRequest struct {
}

func (o *CreateNetconfCredentialsBadRequest) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/global-credential/netconf][%d] createNetconfCredentialsBadRequest ", 400)
}

func (o *CreateNetconfCredentialsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateNetconfCredentialsUnauthorized creates a CreateNetconfCredentialsUnauthorized with default headers values
func NewCreateNetconfCredentialsUnauthorized() *CreateNetconfCredentialsUnauthorized {
	return &CreateNetconfCredentialsUnauthorized{}
}

/*CreateNetconfCredentialsUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type CreateNetconfCredentialsUnauthorized struct {
}

func (o *CreateNetconfCredentialsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/global-credential/netconf][%d] createNetconfCredentialsUnauthorized ", 401)
}

func (o *CreateNetconfCredentialsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateNetconfCredentialsForbidden creates a CreateNetconfCredentialsForbidden with default headers values
func NewCreateNetconfCredentialsForbidden() *CreateNetconfCredentialsForbidden {
	return &CreateNetconfCredentialsForbidden{}
}

/*CreateNetconfCredentialsForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type CreateNetconfCredentialsForbidden struct {
}

func (o *CreateNetconfCredentialsForbidden) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/global-credential/netconf][%d] createNetconfCredentialsForbidden ", 403)
}

func (o *CreateNetconfCredentialsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateNetconfCredentialsNotFound creates a CreateNetconfCredentialsNotFound with default headers values
func NewCreateNetconfCredentialsNotFound() *CreateNetconfCredentialsNotFound {
	return &CreateNetconfCredentialsNotFound{}
}

/*CreateNetconfCredentialsNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type CreateNetconfCredentialsNotFound struct {
}

func (o *CreateNetconfCredentialsNotFound) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/global-credential/netconf][%d] createNetconfCredentialsNotFound ", 404)
}

func (o *CreateNetconfCredentialsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateNetconfCredentialsConflict creates a CreateNetconfCredentialsConflict with default headers values
func NewCreateNetconfCredentialsConflict() *CreateNetconfCredentialsConflict {
	return &CreateNetconfCredentialsConflict{}
}

/*CreateNetconfCredentialsConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type CreateNetconfCredentialsConflict struct {
}

func (o *CreateNetconfCredentialsConflict) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/global-credential/netconf][%d] createNetconfCredentialsConflict ", 409)
}

func (o *CreateNetconfCredentialsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateNetconfCredentialsUnsupportedMediaType creates a CreateNetconfCredentialsUnsupportedMediaType with default headers values
func NewCreateNetconfCredentialsUnsupportedMediaType() *CreateNetconfCredentialsUnsupportedMediaType {
	return &CreateNetconfCredentialsUnsupportedMediaType{}
}

/*CreateNetconfCredentialsUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type CreateNetconfCredentialsUnsupportedMediaType struct {
}

func (o *CreateNetconfCredentialsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/global-credential/netconf][%d] createNetconfCredentialsUnsupportedMediaType ", 415)
}

func (o *CreateNetconfCredentialsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateNetconfCredentialsInternalServerError creates a CreateNetconfCredentialsInternalServerError with default headers values
func NewCreateNetconfCredentialsInternalServerError() *CreateNetconfCredentialsInternalServerError {
	return &CreateNetconfCredentialsInternalServerError{}
}

/*CreateNetconfCredentialsInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type CreateNetconfCredentialsInternalServerError struct {
}

func (o *CreateNetconfCredentialsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/global-credential/netconf][%d] createNetconfCredentialsInternalServerError ", 500)
}

func (o *CreateNetconfCredentialsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateNetconfCredentialsNotImplemented creates a CreateNetconfCredentialsNotImplemented with default headers values
func NewCreateNetconfCredentialsNotImplemented() *CreateNetconfCredentialsNotImplemented {
	return &CreateNetconfCredentialsNotImplemented{}
}

/*CreateNetconfCredentialsNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type CreateNetconfCredentialsNotImplemented struct {
}

func (o *CreateNetconfCredentialsNotImplemented) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/global-credential/netconf][%d] createNetconfCredentialsNotImplemented ", 501)
}

func (o *CreateNetconfCredentialsNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateNetconfCredentialsServiceUnavailable creates a CreateNetconfCredentialsServiceUnavailable with default headers values
func NewCreateNetconfCredentialsServiceUnavailable() *CreateNetconfCredentialsServiceUnavailable {
	return &CreateNetconfCredentialsServiceUnavailable{}
}

/*CreateNetconfCredentialsServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type CreateNetconfCredentialsServiceUnavailable struct {
}

func (o *CreateNetconfCredentialsServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/global-credential/netconf][%d] createNetconfCredentialsServiceUnavailable ", 503)
}

func (o *CreateNetconfCredentialsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateNetconfCredentialsGatewayTimeout creates a CreateNetconfCredentialsGatewayTimeout with default headers values
func NewCreateNetconfCredentialsGatewayTimeout() *CreateNetconfCredentialsGatewayTimeout {
	return &CreateNetconfCredentialsGatewayTimeout{}
}

/*CreateNetconfCredentialsGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type CreateNetconfCredentialsGatewayTimeout struct {
}

func (o *CreateNetconfCredentialsGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/global-credential/netconf][%d] createNetconfCredentialsGatewayTimeout ", 504)
}

func (o *CreateNetconfCredentialsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
