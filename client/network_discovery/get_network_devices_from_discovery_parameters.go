// Code generated by go-swagger; DO NOT EDIT.

package network_discovery

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetNetworkDevicesFromDiscoveryParams creates a new GetNetworkDevicesFromDiscoveryParams object
// with the default values initialized.
func NewGetNetworkDevicesFromDiscoveryParams() *GetNetworkDevicesFromDiscoveryParams {
	var ()
	return &GetNetworkDevicesFromDiscoveryParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetNetworkDevicesFromDiscoveryParamsWithTimeout creates a new GetNetworkDevicesFromDiscoveryParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetNetworkDevicesFromDiscoveryParamsWithTimeout(timeout time.Duration) *GetNetworkDevicesFromDiscoveryParams {
	var ()
	return &GetNetworkDevicesFromDiscoveryParams{

		timeout: timeout,
	}
}

// NewGetNetworkDevicesFromDiscoveryParamsWithContext creates a new GetNetworkDevicesFromDiscoveryParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetNetworkDevicesFromDiscoveryParamsWithContext(ctx context.Context) *GetNetworkDevicesFromDiscoveryParams {
	var ()
	return &GetNetworkDevicesFromDiscoveryParams{

		Context: ctx,
	}
}

// NewGetNetworkDevicesFromDiscoveryParamsWithHTTPClient creates a new GetNetworkDevicesFromDiscoveryParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetNetworkDevicesFromDiscoveryParamsWithHTTPClient(client *http.Client) *GetNetworkDevicesFromDiscoveryParams {
	var ()
	return &GetNetworkDevicesFromDiscoveryParams{
		HTTPClient: client,
	}
}

/*GetNetworkDevicesFromDiscoveryParams contains all the parameters to send to the API endpoint
for the get network devices from discovery operation typically these are written to a http.Request
*/
type GetNetworkDevicesFromDiscoveryParams struct {

	/*CliStatus
	  cliStatus

	*/
	CliStatus []string
	/*HTTPStatus
	  httpStatus

	*/
	Httpstatus []string
	/*ID
	  id

	*/
	ID string
	/*IPAddress
	  ipAddress

	*/
	IPAddress []string
	/*NetconfStatus
	  netconfStatus

	*/
	NetconfStatus []string
	/*PingStatus
	  pingStatus

	*/
	PingStatus []string
	/*SnmpStatus
	  snmpStatus

	*/
	SnmpStatus []string
	/*SortBy
	  sortBy

	*/
	SortBy *string
	/*SortOrder
	  sortOrder

	*/
	SortOrder *string
	/*TaskID
	  taskId

	*/
	TaskID *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get network devices from discovery params
func (o *GetNetworkDevicesFromDiscoveryParams) WithTimeout(timeout time.Duration) *GetNetworkDevicesFromDiscoveryParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get network devices from discovery params
func (o *GetNetworkDevicesFromDiscoveryParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get network devices from discovery params
func (o *GetNetworkDevicesFromDiscoveryParams) WithContext(ctx context.Context) *GetNetworkDevicesFromDiscoveryParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get network devices from discovery params
func (o *GetNetworkDevicesFromDiscoveryParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get network devices from discovery params
func (o *GetNetworkDevicesFromDiscoveryParams) WithHTTPClient(client *http.Client) *GetNetworkDevicesFromDiscoveryParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get network devices from discovery params
func (o *GetNetworkDevicesFromDiscoveryParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCliStatus adds the cliStatus to the get network devices from discovery params
func (o *GetNetworkDevicesFromDiscoveryParams) WithCliStatus(cliStatus []string) *GetNetworkDevicesFromDiscoveryParams {
	o.SetCliStatus(cliStatus)
	return o
}

// SetCliStatus adds the cliStatus to the get network devices from discovery params
func (o *GetNetworkDevicesFromDiscoveryParams) SetCliStatus(cliStatus []string) {
	o.CliStatus = cliStatus
}

// WithHttpstatus adds the hTTPStatus to the get network devices from discovery params
func (o *GetNetworkDevicesFromDiscoveryParams) WithHttpstatus(hTTPStatus []string) *GetNetworkDevicesFromDiscoveryParams {
	o.SetHttpstatus(hTTPStatus)
	return o
}

// SetHttpstatus adds the httpStatus to the get network devices from discovery params
func (o *GetNetworkDevicesFromDiscoveryParams) SetHttpstatus(hTTPStatus []string) {
	o.Httpstatus = hTTPStatus
}

// WithID adds the id to the get network devices from discovery params
func (o *GetNetworkDevicesFromDiscoveryParams) WithID(id string) *GetNetworkDevicesFromDiscoveryParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the get network devices from discovery params
func (o *GetNetworkDevicesFromDiscoveryParams) SetID(id string) {
	o.ID = id
}

// WithIPAddress adds the iPAddress to the get network devices from discovery params
func (o *GetNetworkDevicesFromDiscoveryParams) WithIPAddress(iPAddress []string) *GetNetworkDevicesFromDiscoveryParams {
	o.SetIPAddress(iPAddress)
	return o
}

// SetIPAddress adds the ipAddress to the get network devices from discovery params
func (o *GetNetworkDevicesFromDiscoveryParams) SetIPAddress(iPAddress []string) {
	o.IPAddress = iPAddress
}

// WithNetconfStatus adds the netconfStatus to the get network devices from discovery params
func (o *GetNetworkDevicesFromDiscoveryParams) WithNetconfStatus(netconfStatus []string) *GetNetworkDevicesFromDiscoveryParams {
	o.SetNetconfStatus(netconfStatus)
	return o
}

// SetNetconfStatus adds the netconfStatus to the get network devices from discovery params
func (o *GetNetworkDevicesFromDiscoveryParams) SetNetconfStatus(netconfStatus []string) {
	o.NetconfStatus = netconfStatus
}

// WithPingStatus adds the pingStatus to the get network devices from discovery params
func (o *GetNetworkDevicesFromDiscoveryParams) WithPingStatus(pingStatus []string) *GetNetworkDevicesFromDiscoveryParams {
	o.SetPingStatus(pingStatus)
	return o
}

// SetPingStatus adds the pingStatus to the get network devices from discovery params
func (o *GetNetworkDevicesFromDiscoveryParams) SetPingStatus(pingStatus []string) {
	o.PingStatus = pingStatus
}

// WithSnmpStatus adds the snmpStatus to the get network devices from discovery params
func (o *GetNetworkDevicesFromDiscoveryParams) WithSnmpStatus(snmpStatus []string) *GetNetworkDevicesFromDiscoveryParams {
	o.SetSnmpStatus(snmpStatus)
	return o
}

// SetSnmpStatus adds the snmpStatus to the get network devices from discovery params
func (o *GetNetworkDevicesFromDiscoveryParams) SetSnmpStatus(snmpStatus []string) {
	o.SnmpStatus = snmpStatus
}

// WithSortBy adds the sortBy to the get network devices from discovery params
func (o *GetNetworkDevicesFromDiscoveryParams) WithSortBy(sortBy *string) *GetNetworkDevicesFromDiscoveryParams {
	o.SetSortBy(sortBy)
	return o
}

// SetSortBy adds the sortBy to the get network devices from discovery params
func (o *GetNetworkDevicesFromDiscoveryParams) SetSortBy(sortBy *string) {
	o.SortBy = sortBy
}

// WithSortOrder adds the sortOrder to the get network devices from discovery params
func (o *GetNetworkDevicesFromDiscoveryParams) WithSortOrder(sortOrder *string) *GetNetworkDevicesFromDiscoveryParams {
	o.SetSortOrder(sortOrder)
	return o
}

// SetSortOrder adds the sortOrder to the get network devices from discovery params
func (o *GetNetworkDevicesFromDiscoveryParams) SetSortOrder(sortOrder *string) {
	o.SortOrder = sortOrder
}

// WithTaskID adds the taskID to the get network devices from discovery params
func (o *GetNetworkDevicesFromDiscoveryParams) WithTaskID(taskID *string) *GetNetworkDevicesFromDiscoveryParams {
	o.SetTaskID(taskID)
	return o
}

// SetTaskID adds the taskId to the get network devices from discovery params
func (o *GetNetworkDevicesFromDiscoveryParams) SetTaskID(taskID *string) {
	o.TaskID = taskID
}

// WriteToRequest writes these params to a swagger request
func (o *GetNetworkDevicesFromDiscoveryParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	valuesCliStatus := o.CliStatus

	joinedCliStatus := swag.JoinByFormat(valuesCliStatus, "")
	// query array param cliStatus
	if err := r.SetQueryParam("cliStatus", joinedCliStatus...); err != nil {
		return err
	}

	valuesHTTPStatus := o.HTTPStatus

	joinedHTTPStatus := swag.JoinByFormat(valuesHTTPStatus, "")
	// query array param httpStatus
	if err := r.SetQueryParam("httpStatus", joinedHTTPStatus...); err != nil {
		return err
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	valuesIPAddress := o.IPAddress

	joinedIPAddress := swag.JoinByFormat(valuesIPAddress, "")
	// query array param ipAddress
	if err := r.SetQueryParam("ipAddress", joinedIPAddress...); err != nil {
		return err
	}

	valuesNetconfStatus := o.NetconfStatus

	joinedNetconfStatus := swag.JoinByFormat(valuesNetconfStatus, "")
	// query array param netconfStatus
	if err := r.SetQueryParam("netconfStatus", joinedNetconfStatus...); err != nil {
		return err
	}

	valuesPingStatus := o.PingStatus

	joinedPingStatus := swag.JoinByFormat(valuesPingStatus, "")
	// query array param pingStatus
	if err := r.SetQueryParam("pingStatus", joinedPingStatus...); err != nil {
		return err
	}

	valuesSnmpStatus := o.SnmpStatus

	joinedSnmpStatus := swag.JoinByFormat(valuesSnmpStatus, "")
	// query array param snmpStatus
	if err := r.SetQueryParam("snmpStatus", joinedSnmpStatus...); err != nil {
		return err
	}

	if o.SortBy != nil {

		// query param sortBy
		var qrSortBy string
		if o.SortBy != nil {
			qrSortBy = *o.SortBy
		}
		qSortBy := qrSortBy
		if qSortBy != "" {
			if err := r.SetQueryParam("sortBy", qSortBy); err != nil {
				return err
			}
		}

	}

	if o.SortOrder != nil {

		// query param sortOrder
		var qrSortOrder string
		if o.SortOrder != nil {
			qrSortOrder = *o.SortOrder
		}
		qSortOrder := qrSortOrder
		if qSortOrder != "" {
			if err := r.SetQueryParam("sortOrder", qSortOrder); err != nil {
				return err
			}
		}

	}

	if o.TaskID != nil {

		// query param taskId
		var qrTaskID string
		if o.TaskID != nil {
			qrTaskID = *o.TaskID
		}
		qTaskID := qrTaskID
		if qTaskID != "" {
			if err := r.SetQueryParam("taskId", qTaskID); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
