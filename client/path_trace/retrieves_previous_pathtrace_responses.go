// Code generated by go-swagger; DO NOT EDIT.

package path_trace

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// RetrievesPreviousPathtraceReader is a Reader for the RetrievesPreviousPathtrace structure.
type RetrievesPreviousPathtraceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RetrievesPreviousPathtraceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewRetrievesPreviousPathtraceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewRetrievesPreviousPathtraceNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewRetrievesPreviousPathtracePartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewRetrievesPreviousPathtraceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewRetrievesPreviousPathtraceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewRetrievesPreviousPathtraceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewRetrievesPreviousPathtraceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewRetrievesPreviousPathtraceConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewRetrievesPreviousPathtraceUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewRetrievesPreviousPathtraceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewRetrievesPreviousPathtraceNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewRetrievesPreviousPathtraceServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewRetrievesPreviousPathtraceGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewRetrievesPreviousPathtraceOK creates a RetrievesPreviousPathtraceOK with default headers values
func NewRetrievesPreviousPathtraceOK() *RetrievesPreviousPathtraceOK {
	return &RetrievesPreviousPathtraceOK{}
}

/*RetrievesPreviousPathtraceOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type RetrievesPreviousPathtraceOK struct {
	Payload *models.PathResponseResult
}

func (o *RetrievesPreviousPathtraceOK) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/flow-analysis/{flowAnalysisId}][%d] retrievesPreviousPathtraceOK  %+v", 200, o.Payload)
}

func (o *RetrievesPreviousPathtraceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PathResponseResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRetrievesPreviousPathtraceNoContent creates a RetrievesPreviousPathtraceNoContent with default headers values
func NewRetrievesPreviousPathtraceNoContent() *RetrievesPreviousPathtraceNoContent {
	return &RetrievesPreviousPathtraceNoContent{}
}

/*RetrievesPreviousPathtraceNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type RetrievesPreviousPathtraceNoContent struct {
}

func (o *RetrievesPreviousPathtraceNoContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/flow-analysis/{flowAnalysisId}][%d] retrievesPreviousPathtraceNoContent ", 204)
}

func (o *RetrievesPreviousPathtraceNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRetrievesPreviousPathtracePartialContent creates a RetrievesPreviousPathtracePartialContent with default headers values
func NewRetrievesPreviousPathtracePartialContent() *RetrievesPreviousPathtracePartialContent {
	return &RetrievesPreviousPathtracePartialContent{}
}

/*RetrievesPreviousPathtracePartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type RetrievesPreviousPathtracePartialContent struct {
}

func (o *RetrievesPreviousPathtracePartialContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/flow-analysis/{flowAnalysisId}][%d] retrievesPreviousPathtracePartialContent ", 206)
}

func (o *RetrievesPreviousPathtracePartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRetrievesPreviousPathtraceBadRequest creates a RetrievesPreviousPathtraceBadRequest with default headers values
func NewRetrievesPreviousPathtraceBadRequest() *RetrievesPreviousPathtraceBadRequest {
	return &RetrievesPreviousPathtraceBadRequest{}
}

/*RetrievesPreviousPathtraceBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type RetrievesPreviousPathtraceBadRequest struct {
}

func (o *RetrievesPreviousPathtraceBadRequest) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/flow-analysis/{flowAnalysisId}][%d] retrievesPreviousPathtraceBadRequest ", 400)
}

func (o *RetrievesPreviousPathtraceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRetrievesPreviousPathtraceUnauthorized creates a RetrievesPreviousPathtraceUnauthorized with default headers values
func NewRetrievesPreviousPathtraceUnauthorized() *RetrievesPreviousPathtraceUnauthorized {
	return &RetrievesPreviousPathtraceUnauthorized{}
}

/*RetrievesPreviousPathtraceUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type RetrievesPreviousPathtraceUnauthorized struct {
}

func (o *RetrievesPreviousPathtraceUnauthorized) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/flow-analysis/{flowAnalysisId}][%d] retrievesPreviousPathtraceUnauthorized ", 401)
}

func (o *RetrievesPreviousPathtraceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRetrievesPreviousPathtraceForbidden creates a RetrievesPreviousPathtraceForbidden with default headers values
func NewRetrievesPreviousPathtraceForbidden() *RetrievesPreviousPathtraceForbidden {
	return &RetrievesPreviousPathtraceForbidden{}
}

/*RetrievesPreviousPathtraceForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type RetrievesPreviousPathtraceForbidden struct {
}

func (o *RetrievesPreviousPathtraceForbidden) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/flow-analysis/{flowAnalysisId}][%d] retrievesPreviousPathtraceForbidden ", 403)
}

func (o *RetrievesPreviousPathtraceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRetrievesPreviousPathtraceNotFound creates a RetrievesPreviousPathtraceNotFound with default headers values
func NewRetrievesPreviousPathtraceNotFound() *RetrievesPreviousPathtraceNotFound {
	return &RetrievesPreviousPathtraceNotFound{}
}

/*RetrievesPreviousPathtraceNotFound handles this case with default header values.

No correspoding flow analysis result for requested Id
*/
type RetrievesPreviousPathtraceNotFound struct {
}

func (o *RetrievesPreviousPathtraceNotFound) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/flow-analysis/{flowAnalysisId}][%d] retrievesPreviousPathtraceNotFound ", 404)
}

func (o *RetrievesPreviousPathtraceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRetrievesPreviousPathtraceConflict creates a RetrievesPreviousPathtraceConflict with default headers values
func NewRetrievesPreviousPathtraceConflict() *RetrievesPreviousPathtraceConflict {
	return &RetrievesPreviousPathtraceConflict{}
}

/*RetrievesPreviousPathtraceConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type RetrievesPreviousPathtraceConflict struct {
}

func (o *RetrievesPreviousPathtraceConflict) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/flow-analysis/{flowAnalysisId}][%d] retrievesPreviousPathtraceConflict ", 409)
}

func (o *RetrievesPreviousPathtraceConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRetrievesPreviousPathtraceUnsupportedMediaType creates a RetrievesPreviousPathtraceUnsupportedMediaType with default headers values
func NewRetrievesPreviousPathtraceUnsupportedMediaType() *RetrievesPreviousPathtraceUnsupportedMediaType {
	return &RetrievesPreviousPathtraceUnsupportedMediaType{}
}

/*RetrievesPreviousPathtraceUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type RetrievesPreviousPathtraceUnsupportedMediaType struct {
}

func (o *RetrievesPreviousPathtraceUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/flow-analysis/{flowAnalysisId}][%d] retrievesPreviousPathtraceUnsupportedMediaType ", 415)
}

func (o *RetrievesPreviousPathtraceUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRetrievesPreviousPathtraceInternalServerError creates a RetrievesPreviousPathtraceInternalServerError with default headers values
func NewRetrievesPreviousPathtraceInternalServerError() *RetrievesPreviousPathtraceInternalServerError {
	return &RetrievesPreviousPathtraceInternalServerError{}
}

/*RetrievesPreviousPathtraceInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type RetrievesPreviousPathtraceInternalServerError struct {
}

func (o *RetrievesPreviousPathtraceInternalServerError) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/flow-analysis/{flowAnalysisId}][%d] retrievesPreviousPathtraceInternalServerError ", 500)
}

func (o *RetrievesPreviousPathtraceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRetrievesPreviousPathtraceNotImplemented creates a RetrievesPreviousPathtraceNotImplemented with default headers values
func NewRetrievesPreviousPathtraceNotImplemented() *RetrievesPreviousPathtraceNotImplemented {
	return &RetrievesPreviousPathtraceNotImplemented{}
}

/*RetrievesPreviousPathtraceNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type RetrievesPreviousPathtraceNotImplemented struct {
}

func (o *RetrievesPreviousPathtraceNotImplemented) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/flow-analysis/{flowAnalysisId}][%d] retrievesPreviousPathtraceNotImplemented ", 501)
}

func (o *RetrievesPreviousPathtraceNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRetrievesPreviousPathtraceServiceUnavailable creates a RetrievesPreviousPathtraceServiceUnavailable with default headers values
func NewRetrievesPreviousPathtraceServiceUnavailable() *RetrievesPreviousPathtraceServiceUnavailable {
	return &RetrievesPreviousPathtraceServiceUnavailable{}
}

/*RetrievesPreviousPathtraceServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type RetrievesPreviousPathtraceServiceUnavailable struct {
}

func (o *RetrievesPreviousPathtraceServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/flow-analysis/{flowAnalysisId}][%d] retrievesPreviousPathtraceServiceUnavailable ", 503)
}

func (o *RetrievesPreviousPathtraceServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRetrievesPreviousPathtraceGatewayTimeout creates a RetrievesPreviousPathtraceGatewayTimeout with default headers values
func NewRetrievesPreviousPathtraceGatewayTimeout() *RetrievesPreviousPathtraceGatewayTimeout {
	return &RetrievesPreviousPathtraceGatewayTimeout{}
}

/*RetrievesPreviousPathtraceGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type RetrievesPreviousPathtraceGatewayTimeout struct {
}

func (o *RetrievesPreviousPathtraceGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/flow-analysis/{flowAnalysisId}][%d] retrievesPreviousPathtraceGatewayTimeout ", 504)
}

func (o *RetrievesPreviousPathtraceGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
