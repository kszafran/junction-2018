// Code generated by go-swagger; DO NOT EDIT.

package file

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// GetListOfAvailableNamespacesReader is a Reader for the GetListOfAvailableNamespaces structure.
type GetListOfAvailableNamespacesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetListOfAvailableNamespacesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetListOfAvailableNamespacesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewGetListOfAvailableNamespacesNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewGetListOfAvailableNamespacesPartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetListOfAvailableNamespacesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetListOfAvailableNamespacesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetListOfAvailableNamespacesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetListOfAvailableNamespacesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewGetListOfAvailableNamespacesConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewGetListOfAvailableNamespacesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetListOfAvailableNamespacesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewGetListOfAvailableNamespacesNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetListOfAvailableNamespacesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetListOfAvailableNamespacesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetListOfAvailableNamespacesOK creates a GetListOfAvailableNamespacesOK with default headers values
func NewGetListOfAvailableNamespacesOK() *GetListOfAvailableNamespacesOK {
	return &GetListOfAvailableNamespacesOK{}
}

/*GetListOfAvailableNamespacesOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type GetListOfAvailableNamespacesOK struct {
	Payload *models.NameSpaceListResult
}

func (o *GetListOfAvailableNamespacesOK) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/file/namespace][%d] getListOfAvailableNamespacesOK  %+v", 200, o.Payload)
}

func (o *GetListOfAvailableNamespacesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NameSpaceListResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetListOfAvailableNamespacesNoContent creates a GetListOfAvailableNamespacesNoContent with default headers values
func NewGetListOfAvailableNamespacesNoContent() *GetListOfAvailableNamespacesNoContent {
	return &GetListOfAvailableNamespacesNoContent{}
}

/*GetListOfAvailableNamespacesNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type GetListOfAvailableNamespacesNoContent struct {
}

func (o *GetListOfAvailableNamespacesNoContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/file/namespace][%d] getListOfAvailableNamespacesNoContent ", 204)
}

func (o *GetListOfAvailableNamespacesNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetListOfAvailableNamespacesPartialContent creates a GetListOfAvailableNamespacesPartialContent with default headers values
func NewGetListOfAvailableNamespacesPartialContent() *GetListOfAvailableNamespacesPartialContent {
	return &GetListOfAvailableNamespacesPartialContent{}
}

/*GetListOfAvailableNamespacesPartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type GetListOfAvailableNamespacesPartialContent struct {
}

func (o *GetListOfAvailableNamespacesPartialContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/file/namespace][%d] getListOfAvailableNamespacesPartialContent ", 206)
}

func (o *GetListOfAvailableNamespacesPartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetListOfAvailableNamespacesBadRequest creates a GetListOfAvailableNamespacesBadRequest with default headers values
func NewGetListOfAvailableNamespacesBadRequest() *GetListOfAvailableNamespacesBadRequest {
	return &GetListOfAvailableNamespacesBadRequest{}
}

/*GetListOfAvailableNamespacesBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type GetListOfAvailableNamespacesBadRequest struct {
}

func (o *GetListOfAvailableNamespacesBadRequest) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/file/namespace][%d] getListOfAvailableNamespacesBadRequest ", 400)
}

func (o *GetListOfAvailableNamespacesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetListOfAvailableNamespacesUnauthorized creates a GetListOfAvailableNamespacesUnauthorized with default headers values
func NewGetListOfAvailableNamespacesUnauthorized() *GetListOfAvailableNamespacesUnauthorized {
	return &GetListOfAvailableNamespacesUnauthorized{}
}

/*GetListOfAvailableNamespacesUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type GetListOfAvailableNamespacesUnauthorized struct {
}

func (o *GetListOfAvailableNamespacesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/file/namespace][%d] getListOfAvailableNamespacesUnauthorized ", 401)
}

func (o *GetListOfAvailableNamespacesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetListOfAvailableNamespacesForbidden creates a GetListOfAvailableNamespacesForbidden with default headers values
func NewGetListOfAvailableNamespacesForbidden() *GetListOfAvailableNamespacesForbidden {
	return &GetListOfAvailableNamespacesForbidden{}
}

/*GetListOfAvailableNamespacesForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type GetListOfAvailableNamespacesForbidden struct {
}

func (o *GetListOfAvailableNamespacesForbidden) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/file/namespace][%d] getListOfAvailableNamespacesForbidden ", 403)
}

func (o *GetListOfAvailableNamespacesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetListOfAvailableNamespacesNotFound creates a GetListOfAvailableNamespacesNotFound with default headers values
func NewGetListOfAvailableNamespacesNotFound() *GetListOfAvailableNamespacesNotFound {
	return &GetListOfAvailableNamespacesNotFound{}
}

/*GetListOfAvailableNamespacesNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type GetListOfAvailableNamespacesNotFound struct {
}

func (o *GetListOfAvailableNamespacesNotFound) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/file/namespace][%d] getListOfAvailableNamespacesNotFound ", 404)
}

func (o *GetListOfAvailableNamespacesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetListOfAvailableNamespacesConflict creates a GetListOfAvailableNamespacesConflict with default headers values
func NewGetListOfAvailableNamespacesConflict() *GetListOfAvailableNamespacesConflict {
	return &GetListOfAvailableNamespacesConflict{}
}

/*GetListOfAvailableNamespacesConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type GetListOfAvailableNamespacesConflict struct {
}

func (o *GetListOfAvailableNamespacesConflict) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/file/namespace][%d] getListOfAvailableNamespacesConflict ", 409)
}

func (o *GetListOfAvailableNamespacesConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetListOfAvailableNamespacesUnsupportedMediaType creates a GetListOfAvailableNamespacesUnsupportedMediaType with default headers values
func NewGetListOfAvailableNamespacesUnsupportedMediaType() *GetListOfAvailableNamespacesUnsupportedMediaType {
	return &GetListOfAvailableNamespacesUnsupportedMediaType{}
}

/*GetListOfAvailableNamespacesUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type GetListOfAvailableNamespacesUnsupportedMediaType struct {
}

func (o *GetListOfAvailableNamespacesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/file/namespace][%d] getListOfAvailableNamespacesUnsupportedMediaType ", 415)
}

func (o *GetListOfAvailableNamespacesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetListOfAvailableNamespacesInternalServerError creates a GetListOfAvailableNamespacesInternalServerError with default headers values
func NewGetListOfAvailableNamespacesInternalServerError() *GetListOfAvailableNamespacesInternalServerError {
	return &GetListOfAvailableNamespacesInternalServerError{}
}

/*GetListOfAvailableNamespacesInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type GetListOfAvailableNamespacesInternalServerError struct {
}

func (o *GetListOfAvailableNamespacesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/file/namespace][%d] getListOfAvailableNamespacesInternalServerError ", 500)
}

func (o *GetListOfAvailableNamespacesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetListOfAvailableNamespacesNotImplemented creates a GetListOfAvailableNamespacesNotImplemented with default headers values
func NewGetListOfAvailableNamespacesNotImplemented() *GetListOfAvailableNamespacesNotImplemented {
	return &GetListOfAvailableNamespacesNotImplemented{}
}

/*GetListOfAvailableNamespacesNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type GetListOfAvailableNamespacesNotImplemented struct {
}

func (o *GetListOfAvailableNamespacesNotImplemented) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/file/namespace][%d] getListOfAvailableNamespacesNotImplemented ", 501)
}

func (o *GetListOfAvailableNamespacesNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetListOfAvailableNamespacesServiceUnavailable creates a GetListOfAvailableNamespacesServiceUnavailable with default headers values
func NewGetListOfAvailableNamespacesServiceUnavailable() *GetListOfAvailableNamespacesServiceUnavailable {
	return &GetListOfAvailableNamespacesServiceUnavailable{}
}

/*GetListOfAvailableNamespacesServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type GetListOfAvailableNamespacesServiceUnavailable struct {
}

func (o *GetListOfAvailableNamespacesServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/file/namespace][%d] getListOfAvailableNamespacesServiceUnavailable ", 503)
}

func (o *GetListOfAvailableNamespacesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetListOfAvailableNamespacesGatewayTimeout creates a GetListOfAvailableNamespacesGatewayTimeout with default headers values
func NewGetListOfAvailableNamespacesGatewayTimeout() *GetListOfAvailableNamespacesGatewayTimeout {
	return &GetListOfAvailableNamespacesGatewayTimeout{}
}

/*GetListOfAvailableNamespacesGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type GetListOfAvailableNamespacesGatewayTimeout struct {
}

func (o *GetListOfAvailableNamespacesGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/file/namespace][%d] getListOfAvailableNamespacesGatewayTimeout ", 504)
}

func (o *GetListOfAvailableNamespacesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
