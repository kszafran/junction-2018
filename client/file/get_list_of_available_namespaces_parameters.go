// Code generated by go-swagger; DO NOT EDIT.

package file

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetListOfAvailableNamespacesParams creates a new GetListOfAvailableNamespacesParams object
// with the default values initialized.
func NewGetListOfAvailableNamespacesParams() *GetListOfAvailableNamespacesParams {

	return &GetListOfAvailableNamespacesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetListOfAvailableNamespacesParamsWithTimeout creates a new GetListOfAvailableNamespacesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetListOfAvailableNamespacesParamsWithTimeout(timeout time.Duration) *GetListOfAvailableNamespacesParams {

	return &GetListOfAvailableNamespacesParams{

		timeout: timeout,
	}
}

// NewGetListOfAvailableNamespacesParamsWithContext creates a new GetListOfAvailableNamespacesParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetListOfAvailableNamespacesParamsWithContext(ctx context.Context) *GetListOfAvailableNamespacesParams {

	return &GetListOfAvailableNamespacesParams{

		Context: ctx,
	}
}

// NewGetListOfAvailableNamespacesParamsWithHTTPClient creates a new GetListOfAvailableNamespacesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetListOfAvailableNamespacesParamsWithHTTPClient(client *http.Client) *GetListOfAvailableNamespacesParams {

	return &GetListOfAvailableNamespacesParams{
		HTTPClient: client,
	}
}

/*GetListOfAvailableNamespacesParams contains all the parameters to send to the API endpoint
for the get list of available namespaces operation typically these are written to a http.Request
*/
type GetListOfAvailableNamespacesParams struct {
	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get list of available namespaces params
func (o *GetListOfAvailableNamespacesParams) WithTimeout(timeout time.Duration) *GetListOfAvailableNamespacesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get list of available namespaces params
func (o *GetListOfAvailableNamespacesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get list of available namespaces params
func (o *GetListOfAvailableNamespacesParams) WithContext(ctx context.Context) *GetListOfAvailableNamespacesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get list of available namespaces params
func (o *GetListOfAvailableNamespacesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get list of available namespaces params
func (o *GetListOfAvailableNamespacesParams) WithHTTPClient(client *http.Client) *GetListOfAvailableNamespacesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get list of available namespaces params
func (o *GetListOfAvailableNamespacesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WriteToRequest writes these params to a swagger request
func (o *GetListOfAvailableNamespacesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
