// Code generated by go-swagger; DO NOT EDIT.

package task

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// GetTasksReader is a Reader for the GetTasks structure.
type GetTasksReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTasksReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetTasksOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewGetTasksNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewGetTasksPartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetTasksBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetTasksUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetTasksForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetTasksNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewGetTasksConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewGetTasksUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetTasksInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewGetTasksNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetTasksServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetTasksGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetTasksOK creates a GetTasksOK with default headers values
func NewGetTasksOK() *GetTasksOK {
	return &GetTasksOK{}
}

/*GetTasksOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type GetTasksOK struct {
	Payload *models.TaskDTOListResponse
}

func (o *GetTasksOK) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/task][%d] getTasksOK  %+v", 200, o.Payload)
}

func (o *GetTasksOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TaskDTOListResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTasksNoContent creates a GetTasksNoContent with default headers values
func NewGetTasksNoContent() *GetTasksNoContent {
	return &GetTasksNoContent{}
}

/*GetTasksNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type GetTasksNoContent struct {
}

func (o *GetTasksNoContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/task][%d] getTasksNoContent ", 204)
}

func (o *GetTasksNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTasksPartialContent creates a GetTasksPartialContent with default headers values
func NewGetTasksPartialContent() *GetTasksPartialContent {
	return &GetTasksPartialContent{}
}

/*GetTasksPartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type GetTasksPartialContent struct {
}

func (o *GetTasksPartialContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/task][%d] getTasksPartialContent ", 206)
}

func (o *GetTasksPartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTasksBadRequest creates a GetTasksBadRequest with default headers values
func NewGetTasksBadRequest() *GetTasksBadRequest {
	return &GetTasksBadRequest{}
}

/*GetTasksBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type GetTasksBadRequest struct {
}

func (o *GetTasksBadRequest) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/task][%d] getTasksBadRequest ", 400)
}

func (o *GetTasksBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTasksUnauthorized creates a GetTasksUnauthorized with default headers values
func NewGetTasksUnauthorized() *GetTasksUnauthorized {
	return &GetTasksUnauthorized{}
}

/*GetTasksUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type GetTasksUnauthorized struct {
}

func (o *GetTasksUnauthorized) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/task][%d] getTasksUnauthorized ", 401)
}

func (o *GetTasksUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTasksForbidden creates a GetTasksForbidden with default headers values
func NewGetTasksForbidden() *GetTasksForbidden {
	return &GetTasksForbidden{}
}

/*GetTasksForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type GetTasksForbidden struct {
}

func (o *GetTasksForbidden) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/task][%d] getTasksForbidden ", 403)
}

func (o *GetTasksForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTasksNotFound creates a GetTasksNotFound with default headers values
func NewGetTasksNotFound() *GetTasksNotFound {
	return &GetTasksNotFound{}
}

/*GetTasksNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type GetTasksNotFound struct {
}

func (o *GetTasksNotFound) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/task][%d] getTasksNotFound ", 404)
}

func (o *GetTasksNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTasksConflict creates a GetTasksConflict with default headers values
func NewGetTasksConflict() *GetTasksConflict {
	return &GetTasksConflict{}
}

/*GetTasksConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type GetTasksConflict struct {
}

func (o *GetTasksConflict) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/task][%d] getTasksConflict ", 409)
}

func (o *GetTasksConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTasksUnsupportedMediaType creates a GetTasksUnsupportedMediaType with default headers values
func NewGetTasksUnsupportedMediaType() *GetTasksUnsupportedMediaType {
	return &GetTasksUnsupportedMediaType{}
}

/*GetTasksUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type GetTasksUnsupportedMediaType struct {
}

func (o *GetTasksUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/task][%d] getTasksUnsupportedMediaType ", 415)
}

func (o *GetTasksUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTasksInternalServerError creates a GetTasksInternalServerError with default headers values
func NewGetTasksInternalServerError() *GetTasksInternalServerError {
	return &GetTasksInternalServerError{}
}

/*GetTasksInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type GetTasksInternalServerError struct {
}

func (o *GetTasksInternalServerError) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/task][%d] getTasksInternalServerError ", 500)
}

func (o *GetTasksInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTasksNotImplemented creates a GetTasksNotImplemented with default headers values
func NewGetTasksNotImplemented() *GetTasksNotImplemented {
	return &GetTasksNotImplemented{}
}

/*GetTasksNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type GetTasksNotImplemented struct {
}

func (o *GetTasksNotImplemented) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/task][%d] getTasksNotImplemented ", 501)
}

func (o *GetTasksNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTasksServiceUnavailable creates a GetTasksServiceUnavailable with default headers values
func NewGetTasksServiceUnavailable() *GetTasksServiceUnavailable {
	return &GetTasksServiceUnavailable{}
}

/*GetTasksServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type GetTasksServiceUnavailable struct {
}

func (o *GetTasksServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/task][%d] getTasksServiceUnavailable ", 503)
}

func (o *GetTasksServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTasksGatewayTimeout creates a GetTasksGatewayTimeout with default headers values
func NewGetTasksGatewayTimeout() *GetTasksGatewayTimeout {
	return &GetTasksGatewayTimeout{}
}

/*GetTasksGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type GetTasksGatewayTimeout struct {
}

func (o *GetTasksGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/task][%d] getTasksGatewayTimeout ", 504)
}

func (o *GetTasksGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
