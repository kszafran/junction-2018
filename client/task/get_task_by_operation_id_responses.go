// Code generated by go-swagger; DO NOT EDIT.

package task

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// GetTaskByOperationIDReader is a Reader for the GetTaskByOperationID structure.
type GetTaskByOperationIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTaskByOperationIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetTaskByOperationIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewGetTaskByOperationIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewGetTaskByOperationIDPartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetTaskByOperationIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetTaskByOperationIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetTaskByOperationIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetTaskByOperationIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewGetTaskByOperationIDConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewGetTaskByOperationIDUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetTaskByOperationIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewGetTaskByOperationIDNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetTaskByOperationIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetTaskByOperationIDGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetTaskByOperationIDOK creates a GetTaskByOperationIDOK with default headers values
func NewGetTaskByOperationIDOK() *GetTaskByOperationIDOK {
	return &GetTaskByOperationIDOK{}
}

/*GetTaskByOperationIDOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type GetTaskByOperationIDOK struct {
	Payload *models.TaskDTOListResponse
}

func (o *GetTaskByOperationIDOK) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/task/operation/{operationId}/{offset}/{limit}][%d] getTaskByOperationIdOK  %+v", 200, o.Payload)
}

func (o *GetTaskByOperationIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TaskDTOListResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTaskByOperationIDNoContent creates a GetTaskByOperationIDNoContent with default headers values
func NewGetTaskByOperationIDNoContent() *GetTaskByOperationIDNoContent {
	return &GetTaskByOperationIDNoContent{}
}

/*GetTaskByOperationIDNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type GetTaskByOperationIDNoContent struct {
}

func (o *GetTaskByOperationIDNoContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/task/operation/{operationId}/{offset}/{limit}][%d] getTaskByOperationIdNoContent ", 204)
}

func (o *GetTaskByOperationIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTaskByOperationIDPartialContent creates a GetTaskByOperationIDPartialContent with default headers values
func NewGetTaskByOperationIDPartialContent() *GetTaskByOperationIDPartialContent {
	return &GetTaskByOperationIDPartialContent{}
}

/*GetTaskByOperationIDPartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type GetTaskByOperationIDPartialContent struct {
}

func (o *GetTaskByOperationIDPartialContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/task/operation/{operationId}/{offset}/{limit}][%d] getTaskByOperationIdPartialContent ", 206)
}

func (o *GetTaskByOperationIDPartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTaskByOperationIDBadRequest creates a GetTaskByOperationIDBadRequest with default headers values
func NewGetTaskByOperationIDBadRequest() *GetTaskByOperationIDBadRequest {
	return &GetTaskByOperationIDBadRequest{}
}

/*GetTaskByOperationIDBadRequest handles this case with default header values.

If {limit} value is more than 500
*/
type GetTaskByOperationIDBadRequest struct {
}

func (o *GetTaskByOperationIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/task/operation/{operationId}/{offset}/{limit}][%d] getTaskByOperationIdBadRequest ", 400)
}

func (o *GetTaskByOperationIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTaskByOperationIDUnauthorized creates a GetTaskByOperationIDUnauthorized with default headers values
func NewGetTaskByOperationIDUnauthorized() *GetTaskByOperationIDUnauthorized {
	return &GetTaskByOperationIDUnauthorized{}
}

/*GetTaskByOperationIDUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type GetTaskByOperationIDUnauthorized struct {
}

func (o *GetTaskByOperationIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/task/operation/{operationId}/{offset}/{limit}][%d] getTaskByOperationIdUnauthorized ", 401)
}

func (o *GetTaskByOperationIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTaskByOperationIDForbidden creates a GetTaskByOperationIDForbidden with default headers values
func NewGetTaskByOperationIDForbidden() *GetTaskByOperationIDForbidden {
	return &GetTaskByOperationIDForbidden{}
}

/*GetTaskByOperationIDForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type GetTaskByOperationIDForbidden struct {
}

func (o *GetTaskByOperationIDForbidden) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/task/operation/{operationId}/{offset}/{limit}][%d] getTaskByOperationIdForbidden ", 403)
}

func (o *GetTaskByOperationIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTaskByOperationIDNotFound creates a GetTaskByOperationIDNotFound with default headers values
func NewGetTaskByOperationIDNotFound() *GetTaskByOperationIDNotFound {
	return &GetTaskByOperationIDNotFound{}
}

/*GetTaskByOperationIDNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type GetTaskByOperationIDNotFound struct {
}

func (o *GetTaskByOperationIDNotFound) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/task/operation/{operationId}/{offset}/{limit}][%d] getTaskByOperationIdNotFound ", 404)
}

func (o *GetTaskByOperationIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTaskByOperationIDConflict creates a GetTaskByOperationIDConflict with default headers values
func NewGetTaskByOperationIDConflict() *GetTaskByOperationIDConflict {
	return &GetTaskByOperationIDConflict{}
}

/*GetTaskByOperationIDConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type GetTaskByOperationIDConflict struct {
}

func (o *GetTaskByOperationIDConflict) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/task/operation/{operationId}/{offset}/{limit}][%d] getTaskByOperationIdConflict ", 409)
}

func (o *GetTaskByOperationIDConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTaskByOperationIDUnsupportedMediaType creates a GetTaskByOperationIDUnsupportedMediaType with default headers values
func NewGetTaskByOperationIDUnsupportedMediaType() *GetTaskByOperationIDUnsupportedMediaType {
	return &GetTaskByOperationIDUnsupportedMediaType{}
}

/*GetTaskByOperationIDUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type GetTaskByOperationIDUnsupportedMediaType struct {
}

func (o *GetTaskByOperationIDUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/task/operation/{operationId}/{offset}/{limit}][%d] getTaskByOperationIdUnsupportedMediaType ", 415)
}

func (o *GetTaskByOperationIDUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTaskByOperationIDInternalServerError creates a GetTaskByOperationIDInternalServerError with default headers values
func NewGetTaskByOperationIDInternalServerError() *GetTaskByOperationIDInternalServerError {
	return &GetTaskByOperationIDInternalServerError{}
}

/*GetTaskByOperationIDInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type GetTaskByOperationIDInternalServerError struct {
}

func (o *GetTaskByOperationIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/task/operation/{operationId}/{offset}/{limit}][%d] getTaskByOperationIdInternalServerError ", 500)
}

func (o *GetTaskByOperationIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTaskByOperationIDNotImplemented creates a GetTaskByOperationIDNotImplemented with default headers values
func NewGetTaskByOperationIDNotImplemented() *GetTaskByOperationIDNotImplemented {
	return &GetTaskByOperationIDNotImplemented{}
}

/*GetTaskByOperationIDNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type GetTaskByOperationIDNotImplemented struct {
}

func (o *GetTaskByOperationIDNotImplemented) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/task/operation/{operationId}/{offset}/{limit}][%d] getTaskByOperationIdNotImplemented ", 501)
}

func (o *GetTaskByOperationIDNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTaskByOperationIDServiceUnavailable creates a GetTaskByOperationIDServiceUnavailable with default headers values
func NewGetTaskByOperationIDServiceUnavailable() *GetTaskByOperationIDServiceUnavailable {
	return &GetTaskByOperationIDServiceUnavailable{}
}

/*GetTaskByOperationIDServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type GetTaskByOperationIDServiceUnavailable struct {
}

func (o *GetTaskByOperationIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/task/operation/{operationId}/{offset}/{limit}][%d] getTaskByOperationIdServiceUnavailable ", 503)
}

func (o *GetTaskByOperationIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTaskByOperationIDGatewayTimeout creates a GetTaskByOperationIDGatewayTimeout with default headers values
func NewGetTaskByOperationIDGatewayTimeout() *GetTaskByOperationIDGatewayTimeout {
	return &GetTaskByOperationIDGatewayTimeout{}
}

/*GetTaskByOperationIDGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type GetTaskByOperationIDGatewayTimeout struct {
}

func (o *GetTaskByOperationIDGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/task/operation/{operationId}/{offset}/{limit}][%d] getTaskByOperationIdGatewayTimeout ", 504)
}

func (o *GetTaskByOperationIDGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
