// Code generated by go-swagger; DO NOT EDIT.

package pn_p

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// AddVirtualAccountReader is a Reader for the AddVirtualAccount structure.
type AddVirtualAccountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddVirtualAccountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewAddVirtualAccountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 201:
		result := NewAddVirtualAccountCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 202:
		result := NewAddVirtualAccountAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewAddVirtualAccountNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewAddVirtualAccountPartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewAddVirtualAccountBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewAddVirtualAccountUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewAddVirtualAccountForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewAddVirtualAccountNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewAddVirtualAccountConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewAddVirtualAccountUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewAddVirtualAccountInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewAddVirtualAccountNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewAddVirtualAccountServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewAddVirtualAccountGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAddVirtualAccountOK creates a AddVirtualAccountOK with default headers values
func NewAddVirtualAccountOK() *AddVirtualAccountOK {
	return &AddVirtualAccountOK{}
}

/*AddVirtualAccountOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type AddVirtualAccountOK struct {
	Payload *models.AddVirtualAccountResponse
}

func (o *AddVirtualAccountOK) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-settings/savacct][%d] addVirtualAccountOK  %+v", 200, o.Payload)
}

func (o *AddVirtualAccountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AddVirtualAccountResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddVirtualAccountCreated creates a AddVirtualAccountCreated with default headers values
func NewAddVirtualAccountCreated() *AddVirtualAccountCreated {
	return &AddVirtualAccountCreated{}
}

/*AddVirtualAccountCreated handles this case with default header values.

The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body.
*/
type AddVirtualAccountCreated struct {
}

func (o *AddVirtualAccountCreated) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-settings/savacct][%d] addVirtualAccountCreated ", 201)
}

func (o *AddVirtualAccountCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddVirtualAccountAccepted creates a AddVirtualAccountAccepted with default headers values
func NewAddVirtualAccountAccepted() *AddVirtualAccountAccepted {
	return &AddVirtualAccountAccepted{}
}

/*AddVirtualAccountAccepted handles this case with default header values.

The request was accepted for processing, but the processing has not been completed.
*/
type AddVirtualAccountAccepted struct {
}

func (o *AddVirtualAccountAccepted) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-settings/savacct][%d] addVirtualAccountAccepted ", 202)
}

func (o *AddVirtualAccountAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddVirtualAccountNoContent creates a AddVirtualAccountNoContent with default headers values
func NewAddVirtualAccountNoContent() *AddVirtualAccountNoContent {
	return &AddVirtualAccountNoContent{}
}

/*AddVirtualAccountNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type AddVirtualAccountNoContent struct {
}

func (o *AddVirtualAccountNoContent) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-settings/savacct][%d] addVirtualAccountNoContent ", 204)
}

func (o *AddVirtualAccountNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddVirtualAccountPartialContent creates a AddVirtualAccountPartialContent with default headers values
func NewAddVirtualAccountPartialContent() *AddVirtualAccountPartialContent {
	return &AddVirtualAccountPartialContent{}
}

/*AddVirtualAccountPartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type AddVirtualAccountPartialContent struct {
}

func (o *AddVirtualAccountPartialContent) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-settings/savacct][%d] addVirtualAccountPartialContent ", 206)
}

func (o *AddVirtualAccountPartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddVirtualAccountBadRequest creates a AddVirtualAccountBadRequest with default headers values
func NewAddVirtualAccountBadRequest() *AddVirtualAccountBadRequest {
	return &AddVirtualAccountBadRequest{}
}

/*AddVirtualAccountBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type AddVirtualAccountBadRequest struct {
}

func (o *AddVirtualAccountBadRequest) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-settings/savacct][%d] addVirtualAccountBadRequest ", 400)
}

func (o *AddVirtualAccountBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddVirtualAccountUnauthorized creates a AddVirtualAccountUnauthorized with default headers values
func NewAddVirtualAccountUnauthorized() *AddVirtualAccountUnauthorized {
	return &AddVirtualAccountUnauthorized{}
}

/*AddVirtualAccountUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type AddVirtualAccountUnauthorized struct {
}

func (o *AddVirtualAccountUnauthorized) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-settings/savacct][%d] addVirtualAccountUnauthorized ", 401)
}

func (o *AddVirtualAccountUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddVirtualAccountForbidden creates a AddVirtualAccountForbidden with default headers values
func NewAddVirtualAccountForbidden() *AddVirtualAccountForbidden {
	return &AddVirtualAccountForbidden{}
}

/*AddVirtualAccountForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type AddVirtualAccountForbidden struct {
}

func (o *AddVirtualAccountForbidden) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-settings/savacct][%d] addVirtualAccountForbidden ", 403)
}

func (o *AddVirtualAccountForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddVirtualAccountNotFound creates a AddVirtualAccountNotFound with default headers values
func NewAddVirtualAccountNotFound() *AddVirtualAccountNotFound {
	return &AddVirtualAccountNotFound{}
}

/*AddVirtualAccountNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type AddVirtualAccountNotFound struct {
}

func (o *AddVirtualAccountNotFound) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-settings/savacct][%d] addVirtualAccountNotFound ", 404)
}

func (o *AddVirtualAccountNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddVirtualAccountConflict creates a AddVirtualAccountConflict with default headers values
func NewAddVirtualAccountConflict() *AddVirtualAccountConflict {
	return &AddVirtualAccountConflict{}
}

/*AddVirtualAccountConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type AddVirtualAccountConflict struct {
}

func (o *AddVirtualAccountConflict) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-settings/savacct][%d] addVirtualAccountConflict ", 409)
}

func (o *AddVirtualAccountConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddVirtualAccountUnsupportedMediaType creates a AddVirtualAccountUnsupportedMediaType with default headers values
func NewAddVirtualAccountUnsupportedMediaType() *AddVirtualAccountUnsupportedMediaType {
	return &AddVirtualAccountUnsupportedMediaType{}
}

/*AddVirtualAccountUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type AddVirtualAccountUnsupportedMediaType struct {
}

func (o *AddVirtualAccountUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-settings/savacct][%d] addVirtualAccountUnsupportedMediaType ", 415)
}

func (o *AddVirtualAccountUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddVirtualAccountInternalServerError creates a AddVirtualAccountInternalServerError with default headers values
func NewAddVirtualAccountInternalServerError() *AddVirtualAccountInternalServerError {
	return &AddVirtualAccountInternalServerError{}
}

/*AddVirtualAccountInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type AddVirtualAccountInternalServerError struct {
}

func (o *AddVirtualAccountInternalServerError) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-settings/savacct][%d] addVirtualAccountInternalServerError ", 500)
}

func (o *AddVirtualAccountInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddVirtualAccountNotImplemented creates a AddVirtualAccountNotImplemented with default headers values
func NewAddVirtualAccountNotImplemented() *AddVirtualAccountNotImplemented {
	return &AddVirtualAccountNotImplemented{}
}

/*AddVirtualAccountNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type AddVirtualAccountNotImplemented struct {
}

func (o *AddVirtualAccountNotImplemented) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-settings/savacct][%d] addVirtualAccountNotImplemented ", 501)
}

func (o *AddVirtualAccountNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddVirtualAccountServiceUnavailable creates a AddVirtualAccountServiceUnavailable with default headers values
func NewAddVirtualAccountServiceUnavailable() *AddVirtualAccountServiceUnavailable {
	return &AddVirtualAccountServiceUnavailable{}
}

/*AddVirtualAccountServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type AddVirtualAccountServiceUnavailable struct {
}

func (o *AddVirtualAccountServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-settings/savacct][%d] addVirtualAccountServiceUnavailable ", 503)
}

func (o *AddVirtualAccountServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddVirtualAccountGatewayTimeout creates a AddVirtualAccountGatewayTimeout with default headers values
func NewAddVirtualAccountGatewayTimeout() *AddVirtualAccountGatewayTimeout {
	return &AddVirtualAccountGatewayTimeout{}
}

/*AddVirtualAccountGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type AddVirtualAccountGatewayTimeout struct {
}

func (o *AddVirtualAccountGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-settings/savacct][%d] addVirtualAccountGatewayTimeout ", 504)
}

func (o *AddVirtualAccountGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
