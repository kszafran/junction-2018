// Code generated by go-swagger; DO NOT EDIT.

package pn_p

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// GetDeviceByIDReader is a Reader for the GetDeviceByID structure.
type GetDeviceByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDeviceByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetDeviceByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewGetDeviceByIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewGetDeviceByIDPartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetDeviceByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetDeviceByIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetDeviceByIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetDeviceByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewGetDeviceByIDConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewGetDeviceByIDUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetDeviceByIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewGetDeviceByIDNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetDeviceByIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetDeviceByIDGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDeviceByIDOK creates a GetDeviceByIDOK with default headers values
func NewGetDeviceByIDOK() *GetDeviceByIDOK {
	return &GetDeviceByIDOK{}
}

/*GetDeviceByIDOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type GetDeviceByIDOK struct {
	Payload *models.GetDeviceByIDResponse
}

func (o *GetDeviceByIDOK) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device/{id}][%d] getDeviceByIdOK  %+v", 200, o.Payload)
}

func (o *GetDeviceByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetDeviceByIDResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeviceByIDNoContent creates a GetDeviceByIDNoContent with default headers values
func NewGetDeviceByIDNoContent() *GetDeviceByIDNoContent {
	return &GetDeviceByIDNoContent{}
}

/*GetDeviceByIDNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type GetDeviceByIDNoContent struct {
}

func (o *GetDeviceByIDNoContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device/{id}][%d] getDeviceByIdNoContent ", 204)
}

func (o *GetDeviceByIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceByIDPartialContent creates a GetDeviceByIDPartialContent with default headers values
func NewGetDeviceByIDPartialContent() *GetDeviceByIDPartialContent {
	return &GetDeviceByIDPartialContent{}
}

/*GetDeviceByIDPartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type GetDeviceByIDPartialContent struct {
}

func (o *GetDeviceByIDPartialContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device/{id}][%d] getDeviceByIdPartialContent ", 206)
}

func (o *GetDeviceByIDPartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceByIDBadRequest creates a GetDeviceByIDBadRequest with default headers values
func NewGetDeviceByIDBadRequest() *GetDeviceByIDBadRequest {
	return &GetDeviceByIDBadRequest{}
}

/*GetDeviceByIDBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type GetDeviceByIDBadRequest struct {
}

func (o *GetDeviceByIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device/{id}][%d] getDeviceByIdBadRequest ", 400)
}

func (o *GetDeviceByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceByIDUnauthorized creates a GetDeviceByIDUnauthorized with default headers values
func NewGetDeviceByIDUnauthorized() *GetDeviceByIDUnauthorized {
	return &GetDeviceByIDUnauthorized{}
}

/*GetDeviceByIDUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type GetDeviceByIDUnauthorized struct {
}

func (o *GetDeviceByIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device/{id}][%d] getDeviceByIdUnauthorized ", 401)
}

func (o *GetDeviceByIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceByIDForbidden creates a GetDeviceByIDForbidden with default headers values
func NewGetDeviceByIDForbidden() *GetDeviceByIDForbidden {
	return &GetDeviceByIDForbidden{}
}

/*GetDeviceByIDForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type GetDeviceByIDForbidden struct {
}

func (o *GetDeviceByIDForbidden) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device/{id}][%d] getDeviceByIdForbidden ", 403)
}

func (o *GetDeviceByIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceByIDNotFound creates a GetDeviceByIDNotFound with default headers values
func NewGetDeviceByIDNotFound() *GetDeviceByIDNotFound {
	return &GetDeviceByIDNotFound{}
}

/*GetDeviceByIDNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type GetDeviceByIDNotFound struct {
}

func (o *GetDeviceByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device/{id}][%d] getDeviceByIdNotFound ", 404)
}

func (o *GetDeviceByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceByIDConflict creates a GetDeviceByIDConflict with default headers values
func NewGetDeviceByIDConflict() *GetDeviceByIDConflict {
	return &GetDeviceByIDConflict{}
}

/*GetDeviceByIDConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type GetDeviceByIDConflict struct {
}

func (o *GetDeviceByIDConflict) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device/{id}][%d] getDeviceByIdConflict ", 409)
}

func (o *GetDeviceByIDConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceByIDUnsupportedMediaType creates a GetDeviceByIDUnsupportedMediaType with default headers values
func NewGetDeviceByIDUnsupportedMediaType() *GetDeviceByIDUnsupportedMediaType {
	return &GetDeviceByIDUnsupportedMediaType{}
}

/*GetDeviceByIDUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type GetDeviceByIDUnsupportedMediaType struct {
}

func (o *GetDeviceByIDUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device/{id}][%d] getDeviceByIdUnsupportedMediaType ", 415)
}

func (o *GetDeviceByIDUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceByIDInternalServerError creates a GetDeviceByIDInternalServerError with default headers values
func NewGetDeviceByIDInternalServerError() *GetDeviceByIDInternalServerError {
	return &GetDeviceByIDInternalServerError{}
}

/*GetDeviceByIDInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type GetDeviceByIDInternalServerError struct {
}

func (o *GetDeviceByIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device/{id}][%d] getDeviceByIdInternalServerError ", 500)
}

func (o *GetDeviceByIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceByIDNotImplemented creates a GetDeviceByIDNotImplemented with default headers values
func NewGetDeviceByIDNotImplemented() *GetDeviceByIDNotImplemented {
	return &GetDeviceByIDNotImplemented{}
}

/*GetDeviceByIDNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type GetDeviceByIDNotImplemented struct {
}

func (o *GetDeviceByIDNotImplemented) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device/{id}][%d] getDeviceByIdNotImplemented ", 501)
}

func (o *GetDeviceByIDNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceByIDServiceUnavailable creates a GetDeviceByIDServiceUnavailable with default headers values
func NewGetDeviceByIDServiceUnavailable() *GetDeviceByIDServiceUnavailable {
	return &GetDeviceByIDServiceUnavailable{}
}

/*GetDeviceByIDServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type GetDeviceByIDServiceUnavailable struct {
}

func (o *GetDeviceByIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device/{id}][%d] getDeviceByIdServiceUnavailable ", 503)
}

func (o *GetDeviceByIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceByIDGatewayTimeout creates a GetDeviceByIDGatewayTimeout with default headers values
func NewGetDeviceByIDGatewayTimeout() *GetDeviceByIDGatewayTimeout {
	return &GetDeviceByIDGatewayTimeout{}
}

/*GetDeviceByIDGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type GetDeviceByIDGatewayTimeout struct {
}

func (o *GetDeviceByIDGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device/{id}][%d] getDeviceByIdGatewayTimeout ", 504)
}

func (o *GetDeviceByIDGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
