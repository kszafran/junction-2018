// Code generated by go-swagger; DO NOT EDIT.

package pn_p

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// DeleteWorkflowByIDReader is a Reader for the DeleteWorkflowByID structure.
type DeleteWorkflowByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteWorkflowByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeleteWorkflowByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewDeleteWorkflowByIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewDeleteWorkflowByIDPartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDeleteWorkflowByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewDeleteWorkflowByIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewDeleteWorkflowByIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteWorkflowByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewDeleteWorkflowByIDConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewDeleteWorkflowByIDUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewDeleteWorkflowByIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewDeleteWorkflowByIDNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewDeleteWorkflowByIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewDeleteWorkflowByIDGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteWorkflowByIDOK creates a DeleteWorkflowByIDOK with default headers values
func NewDeleteWorkflowByIDOK() *DeleteWorkflowByIDOK {
	return &DeleteWorkflowByIDOK{}
}

/*DeleteWorkflowByIDOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type DeleteWorkflowByIDOK struct {
	Payload *models.DeleteWorkflowByIDResponse
}

func (o *DeleteWorkflowByIDOK) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/onboarding/pnp-workflow/{id}][%d] deleteWorkflowByIdOK  %+v", 200, o.Payload)
}

func (o *DeleteWorkflowByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeleteWorkflowByIDResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteWorkflowByIDNoContent creates a DeleteWorkflowByIDNoContent with default headers values
func NewDeleteWorkflowByIDNoContent() *DeleteWorkflowByIDNoContent {
	return &DeleteWorkflowByIDNoContent{}
}

/*DeleteWorkflowByIDNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type DeleteWorkflowByIDNoContent struct {
}

func (o *DeleteWorkflowByIDNoContent) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/onboarding/pnp-workflow/{id}][%d] deleteWorkflowByIdNoContent ", 204)
}

func (o *DeleteWorkflowByIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteWorkflowByIDPartialContent creates a DeleteWorkflowByIDPartialContent with default headers values
func NewDeleteWorkflowByIDPartialContent() *DeleteWorkflowByIDPartialContent {
	return &DeleteWorkflowByIDPartialContent{}
}

/*DeleteWorkflowByIDPartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type DeleteWorkflowByIDPartialContent struct {
}

func (o *DeleteWorkflowByIDPartialContent) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/onboarding/pnp-workflow/{id}][%d] deleteWorkflowByIdPartialContent ", 206)
}

func (o *DeleteWorkflowByIDPartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteWorkflowByIDBadRequest creates a DeleteWorkflowByIDBadRequest with default headers values
func NewDeleteWorkflowByIDBadRequest() *DeleteWorkflowByIDBadRequest {
	return &DeleteWorkflowByIDBadRequest{}
}

/*DeleteWorkflowByIDBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type DeleteWorkflowByIDBadRequest struct {
}

func (o *DeleteWorkflowByIDBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/onboarding/pnp-workflow/{id}][%d] deleteWorkflowByIdBadRequest ", 400)
}

func (o *DeleteWorkflowByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteWorkflowByIDUnauthorized creates a DeleteWorkflowByIDUnauthorized with default headers values
func NewDeleteWorkflowByIDUnauthorized() *DeleteWorkflowByIDUnauthorized {
	return &DeleteWorkflowByIDUnauthorized{}
}

/*DeleteWorkflowByIDUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type DeleteWorkflowByIDUnauthorized struct {
}

func (o *DeleteWorkflowByIDUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/onboarding/pnp-workflow/{id}][%d] deleteWorkflowByIdUnauthorized ", 401)
}

func (o *DeleteWorkflowByIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteWorkflowByIDForbidden creates a DeleteWorkflowByIDForbidden with default headers values
func NewDeleteWorkflowByIDForbidden() *DeleteWorkflowByIDForbidden {
	return &DeleteWorkflowByIDForbidden{}
}

/*DeleteWorkflowByIDForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type DeleteWorkflowByIDForbidden struct {
}

func (o *DeleteWorkflowByIDForbidden) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/onboarding/pnp-workflow/{id}][%d] deleteWorkflowByIdForbidden ", 403)
}

func (o *DeleteWorkflowByIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteWorkflowByIDNotFound creates a DeleteWorkflowByIDNotFound with default headers values
func NewDeleteWorkflowByIDNotFound() *DeleteWorkflowByIDNotFound {
	return &DeleteWorkflowByIDNotFound{}
}

/*DeleteWorkflowByIDNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type DeleteWorkflowByIDNotFound struct {
}

func (o *DeleteWorkflowByIDNotFound) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/onboarding/pnp-workflow/{id}][%d] deleteWorkflowByIdNotFound ", 404)
}

func (o *DeleteWorkflowByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteWorkflowByIDConflict creates a DeleteWorkflowByIDConflict with default headers values
func NewDeleteWorkflowByIDConflict() *DeleteWorkflowByIDConflict {
	return &DeleteWorkflowByIDConflict{}
}

/*DeleteWorkflowByIDConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type DeleteWorkflowByIDConflict struct {
}

func (o *DeleteWorkflowByIDConflict) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/onboarding/pnp-workflow/{id}][%d] deleteWorkflowByIdConflict ", 409)
}

func (o *DeleteWorkflowByIDConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteWorkflowByIDUnsupportedMediaType creates a DeleteWorkflowByIDUnsupportedMediaType with default headers values
func NewDeleteWorkflowByIDUnsupportedMediaType() *DeleteWorkflowByIDUnsupportedMediaType {
	return &DeleteWorkflowByIDUnsupportedMediaType{}
}

/*DeleteWorkflowByIDUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type DeleteWorkflowByIDUnsupportedMediaType struct {
}

func (o *DeleteWorkflowByIDUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/onboarding/pnp-workflow/{id}][%d] deleteWorkflowByIdUnsupportedMediaType ", 415)
}

func (o *DeleteWorkflowByIDUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteWorkflowByIDInternalServerError creates a DeleteWorkflowByIDInternalServerError with default headers values
func NewDeleteWorkflowByIDInternalServerError() *DeleteWorkflowByIDInternalServerError {
	return &DeleteWorkflowByIDInternalServerError{}
}

/*DeleteWorkflowByIDInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type DeleteWorkflowByIDInternalServerError struct {
}

func (o *DeleteWorkflowByIDInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/onboarding/pnp-workflow/{id}][%d] deleteWorkflowByIdInternalServerError ", 500)
}

func (o *DeleteWorkflowByIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteWorkflowByIDNotImplemented creates a DeleteWorkflowByIDNotImplemented with default headers values
func NewDeleteWorkflowByIDNotImplemented() *DeleteWorkflowByIDNotImplemented {
	return &DeleteWorkflowByIDNotImplemented{}
}

/*DeleteWorkflowByIDNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type DeleteWorkflowByIDNotImplemented struct {
}

func (o *DeleteWorkflowByIDNotImplemented) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/onboarding/pnp-workflow/{id}][%d] deleteWorkflowByIdNotImplemented ", 501)
}

func (o *DeleteWorkflowByIDNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteWorkflowByIDServiceUnavailable creates a DeleteWorkflowByIDServiceUnavailable with default headers values
func NewDeleteWorkflowByIDServiceUnavailable() *DeleteWorkflowByIDServiceUnavailable {
	return &DeleteWorkflowByIDServiceUnavailable{}
}

/*DeleteWorkflowByIDServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type DeleteWorkflowByIDServiceUnavailable struct {
}

func (o *DeleteWorkflowByIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/onboarding/pnp-workflow/{id}][%d] deleteWorkflowByIdServiceUnavailable ", 503)
}

func (o *DeleteWorkflowByIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteWorkflowByIDGatewayTimeout creates a DeleteWorkflowByIDGatewayTimeout with default headers values
func NewDeleteWorkflowByIDGatewayTimeout() *DeleteWorkflowByIDGatewayTimeout {
	return &DeleteWorkflowByIDGatewayTimeout{}
}

/*DeleteWorkflowByIDGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type DeleteWorkflowByIDGatewayTimeout struct {
}

func (o *DeleteWorkflowByIDGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/onboarding/pnp-workflow/{id}][%d] deleteWorkflowByIdGatewayTimeout ", 504)
}

func (o *DeleteWorkflowByIDGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
