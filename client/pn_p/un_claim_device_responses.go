// Code generated by go-swagger; DO NOT EDIT.

package pn_p

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// UnClaimDeviceReader is a Reader for the UnClaimDevice structure.
type UnClaimDeviceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UnClaimDeviceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUnClaimDeviceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 201:
		result := NewUnClaimDeviceCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 202:
		result := NewUnClaimDeviceAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewUnClaimDeviceNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewUnClaimDevicePartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewUnClaimDeviceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewUnClaimDeviceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewUnClaimDeviceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewUnClaimDeviceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewUnClaimDeviceConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewUnClaimDeviceUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewUnClaimDeviceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewUnClaimDeviceNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewUnClaimDeviceServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewUnClaimDeviceGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUnClaimDeviceOK creates a UnClaimDeviceOK with default headers values
func NewUnClaimDeviceOK() *UnClaimDeviceOK {
	return &UnClaimDeviceOK{}
}

/*UnClaimDeviceOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type UnClaimDeviceOK struct {
	Payload *models.UnClaimDeviceResponse
}

func (o *UnClaimDeviceOK) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/unclaim][%d] unClaimDeviceOK  %+v", 200, o.Payload)
}

func (o *UnClaimDeviceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UnClaimDeviceResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUnClaimDeviceCreated creates a UnClaimDeviceCreated with default headers values
func NewUnClaimDeviceCreated() *UnClaimDeviceCreated {
	return &UnClaimDeviceCreated{}
}

/*UnClaimDeviceCreated handles this case with default header values.

The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body.
*/
type UnClaimDeviceCreated struct {
}

func (o *UnClaimDeviceCreated) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/unclaim][%d] unClaimDeviceCreated ", 201)
}

func (o *UnClaimDeviceCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUnClaimDeviceAccepted creates a UnClaimDeviceAccepted with default headers values
func NewUnClaimDeviceAccepted() *UnClaimDeviceAccepted {
	return &UnClaimDeviceAccepted{}
}

/*UnClaimDeviceAccepted handles this case with default header values.

The request was accepted for processing, but the processing has not been completed.
*/
type UnClaimDeviceAccepted struct {
}

func (o *UnClaimDeviceAccepted) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/unclaim][%d] unClaimDeviceAccepted ", 202)
}

func (o *UnClaimDeviceAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUnClaimDeviceNoContent creates a UnClaimDeviceNoContent with default headers values
func NewUnClaimDeviceNoContent() *UnClaimDeviceNoContent {
	return &UnClaimDeviceNoContent{}
}

/*UnClaimDeviceNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type UnClaimDeviceNoContent struct {
}

func (o *UnClaimDeviceNoContent) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/unclaim][%d] unClaimDeviceNoContent ", 204)
}

func (o *UnClaimDeviceNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUnClaimDevicePartialContent creates a UnClaimDevicePartialContent with default headers values
func NewUnClaimDevicePartialContent() *UnClaimDevicePartialContent {
	return &UnClaimDevicePartialContent{}
}

/*UnClaimDevicePartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type UnClaimDevicePartialContent struct {
}

func (o *UnClaimDevicePartialContent) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/unclaim][%d] unClaimDevicePartialContent ", 206)
}

func (o *UnClaimDevicePartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUnClaimDeviceBadRequest creates a UnClaimDeviceBadRequest with default headers values
func NewUnClaimDeviceBadRequest() *UnClaimDeviceBadRequest {
	return &UnClaimDeviceBadRequest{}
}

/*UnClaimDeviceBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type UnClaimDeviceBadRequest struct {
}

func (o *UnClaimDeviceBadRequest) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/unclaim][%d] unClaimDeviceBadRequest ", 400)
}

func (o *UnClaimDeviceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUnClaimDeviceUnauthorized creates a UnClaimDeviceUnauthorized with default headers values
func NewUnClaimDeviceUnauthorized() *UnClaimDeviceUnauthorized {
	return &UnClaimDeviceUnauthorized{}
}

/*UnClaimDeviceUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type UnClaimDeviceUnauthorized struct {
}

func (o *UnClaimDeviceUnauthorized) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/unclaim][%d] unClaimDeviceUnauthorized ", 401)
}

func (o *UnClaimDeviceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUnClaimDeviceForbidden creates a UnClaimDeviceForbidden with default headers values
func NewUnClaimDeviceForbidden() *UnClaimDeviceForbidden {
	return &UnClaimDeviceForbidden{}
}

/*UnClaimDeviceForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type UnClaimDeviceForbidden struct {
}

func (o *UnClaimDeviceForbidden) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/unclaim][%d] unClaimDeviceForbidden ", 403)
}

func (o *UnClaimDeviceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUnClaimDeviceNotFound creates a UnClaimDeviceNotFound with default headers values
func NewUnClaimDeviceNotFound() *UnClaimDeviceNotFound {
	return &UnClaimDeviceNotFound{}
}

/*UnClaimDeviceNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type UnClaimDeviceNotFound struct {
}

func (o *UnClaimDeviceNotFound) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/unclaim][%d] unClaimDeviceNotFound ", 404)
}

func (o *UnClaimDeviceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUnClaimDeviceConflict creates a UnClaimDeviceConflict with default headers values
func NewUnClaimDeviceConflict() *UnClaimDeviceConflict {
	return &UnClaimDeviceConflict{}
}

/*UnClaimDeviceConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type UnClaimDeviceConflict struct {
}

func (o *UnClaimDeviceConflict) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/unclaim][%d] unClaimDeviceConflict ", 409)
}

func (o *UnClaimDeviceConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUnClaimDeviceUnsupportedMediaType creates a UnClaimDeviceUnsupportedMediaType with default headers values
func NewUnClaimDeviceUnsupportedMediaType() *UnClaimDeviceUnsupportedMediaType {
	return &UnClaimDeviceUnsupportedMediaType{}
}

/*UnClaimDeviceUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type UnClaimDeviceUnsupportedMediaType struct {
}

func (o *UnClaimDeviceUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/unclaim][%d] unClaimDeviceUnsupportedMediaType ", 415)
}

func (o *UnClaimDeviceUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUnClaimDeviceInternalServerError creates a UnClaimDeviceInternalServerError with default headers values
func NewUnClaimDeviceInternalServerError() *UnClaimDeviceInternalServerError {
	return &UnClaimDeviceInternalServerError{}
}

/*UnClaimDeviceInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type UnClaimDeviceInternalServerError struct {
}

func (o *UnClaimDeviceInternalServerError) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/unclaim][%d] unClaimDeviceInternalServerError ", 500)
}

func (o *UnClaimDeviceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUnClaimDeviceNotImplemented creates a UnClaimDeviceNotImplemented with default headers values
func NewUnClaimDeviceNotImplemented() *UnClaimDeviceNotImplemented {
	return &UnClaimDeviceNotImplemented{}
}

/*UnClaimDeviceNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type UnClaimDeviceNotImplemented struct {
}

func (o *UnClaimDeviceNotImplemented) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/unclaim][%d] unClaimDeviceNotImplemented ", 501)
}

func (o *UnClaimDeviceNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUnClaimDeviceServiceUnavailable creates a UnClaimDeviceServiceUnavailable with default headers values
func NewUnClaimDeviceServiceUnavailable() *UnClaimDeviceServiceUnavailable {
	return &UnClaimDeviceServiceUnavailable{}
}

/*UnClaimDeviceServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type UnClaimDeviceServiceUnavailable struct {
}

func (o *UnClaimDeviceServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/unclaim][%d] unClaimDeviceServiceUnavailable ", 503)
}

func (o *UnClaimDeviceServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUnClaimDeviceGatewayTimeout creates a UnClaimDeviceGatewayTimeout with default headers values
func NewUnClaimDeviceGatewayTimeout() *UnClaimDeviceGatewayTimeout {
	return &UnClaimDeviceGatewayTimeout{}
}

/*UnClaimDeviceGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type UnClaimDeviceGatewayTimeout struct {
}

func (o *UnClaimDeviceGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/unclaim][%d] unClaimDeviceGatewayTimeout ", 504)
}

func (o *UnClaimDeviceGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
