// Code generated by go-swagger; DO NOT EDIT.

package pn_p

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// UpdateWorkflowReader is a Reader for the UpdateWorkflow structure.
type UpdateWorkflowReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateWorkflowReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUpdateWorkflowOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 201:
		result := NewUpdateWorkflowCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 202:
		result := NewUpdateWorkflowAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewUpdateWorkflowNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewUpdateWorkflowPartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewUpdateWorkflowBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewUpdateWorkflowUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewUpdateWorkflowForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewUpdateWorkflowNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewUpdateWorkflowConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewUpdateWorkflowUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewUpdateWorkflowInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewUpdateWorkflowNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewUpdateWorkflowServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewUpdateWorkflowGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateWorkflowOK creates a UpdateWorkflowOK with default headers values
func NewUpdateWorkflowOK() *UpdateWorkflowOK {
	return &UpdateWorkflowOK{}
}

/*UpdateWorkflowOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type UpdateWorkflowOK struct {
	Payload *models.UpdateWorkflowResponse
}

func (o *UpdateWorkflowOK) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/onboarding/pnp-workflow/{id}][%d] updateWorkflowOK  %+v", 200, o.Payload)
}

func (o *UpdateWorkflowOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UpdateWorkflowResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateWorkflowCreated creates a UpdateWorkflowCreated with default headers values
func NewUpdateWorkflowCreated() *UpdateWorkflowCreated {
	return &UpdateWorkflowCreated{}
}

/*UpdateWorkflowCreated handles this case with default header values.

The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body.
*/
type UpdateWorkflowCreated struct {
}

func (o *UpdateWorkflowCreated) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/onboarding/pnp-workflow/{id}][%d] updateWorkflowCreated ", 201)
}

func (o *UpdateWorkflowCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateWorkflowAccepted creates a UpdateWorkflowAccepted with default headers values
func NewUpdateWorkflowAccepted() *UpdateWorkflowAccepted {
	return &UpdateWorkflowAccepted{}
}

/*UpdateWorkflowAccepted handles this case with default header values.

The request was accepted for processing, but the processing has not been completed.
*/
type UpdateWorkflowAccepted struct {
}

func (o *UpdateWorkflowAccepted) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/onboarding/pnp-workflow/{id}][%d] updateWorkflowAccepted ", 202)
}

func (o *UpdateWorkflowAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateWorkflowNoContent creates a UpdateWorkflowNoContent with default headers values
func NewUpdateWorkflowNoContent() *UpdateWorkflowNoContent {
	return &UpdateWorkflowNoContent{}
}

/*UpdateWorkflowNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type UpdateWorkflowNoContent struct {
}

func (o *UpdateWorkflowNoContent) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/onboarding/pnp-workflow/{id}][%d] updateWorkflowNoContent ", 204)
}

func (o *UpdateWorkflowNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateWorkflowPartialContent creates a UpdateWorkflowPartialContent with default headers values
func NewUpdateWorkflowPartialContent() *UpdateWorkflowPartialContent {
	return &UpdateWorkflowPartialContent{}
}

/*UpdateWorkflowPartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type UpdateWorkflowPartialContent struct {
}

func (o *UpdateWorkflowPartialContent) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/onboarding/pnp-workflow/{id}][%d] updateWorkflowPartialContent ", 206)
}

func (o *UpdateWorkflowPartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateWorkflowBadRequest creates a UpdateWorkflowBadRequest with default headers values
func NewUpdateWorkflowBadRequest() *UpdateWorkflowBadRequest {
	return &UpdateWorkflowBadRequest{}
}

/*UpdateWorkflowBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type UpdateWorkflowBadRequest struct {
}

func (o *UpdateWorkflowBadRequest) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/onboarding/pnp-workflow/{id}][%d] updateWorkflowBadRequest ", 400)
}

func (o *UpdateWorkflowBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateWorkflowUnauthorized creates a UpdateWorkflowUnauthorized with default headers values
func NewUpdateWorkflowUnauthorized() *UpdateWorkflowUnauthorized {
	return &UpdateWorkflowUnauthorized{}
}

/*UpdateWorkflowUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type UpdateWorkflowUnauthorized struct {
}

func (o *UpdateWorkflowUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/onboarding/pnp-workflow/{id}][%d] updateWorkflowUnauthorized ", 401)
}

func (o *UpdateWorkflowUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateWorkflowForbidden creates a UpdateWorkflowForbidden with default headers values
func NewUpdateWorkflowForbidden() *UpdateWorkflowForbidden {
	return &UpdateWorkflowForbidden{}
}

/*UpdateWorkflowForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type UpdateWorkflowForbidden struct {
}

func (o *UpdateWorkflowForbidden) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/onboarding/pnp-workflow/{id}][%d] updateWorkflowForbidden ", 403)
}

func (o *UpdateWorkflowForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateWorkflowNotFound creates a UpdateWorkflowNotFound with default headers values
func NewUpdateWorkflowNotFound() *UpdateWorkflowNotFound {
	return &UpdateWorkflowNotFound{}
}

/*UpdateWorkflowNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type UpdateWorkflowNotFound struct {
}

func (o *UpdateWorkflowNotFound) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/onboarding/pnp-workflow/{id}][%d] updateWorkflowNotFound ", 404)
}

func (o *UpdateWorkflowNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateWorkflowConflict creates a UpdateWorkflowConflict with default headers values
func NewUpdateWorkflowConflict() *UpdateWorkflowConflict {
	return &UpdateWorkflowConflict{}
}

/*UpdateWorkflowConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type UpdateWorkflowConflict struct {
}

func (o *UpdateWorkflowConflict) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/onboarding/pnp-workflow/{id}][%d] updateWorkflowConflict ", 409)
}

func (o *UpdateWorkflowConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateWorkflowUnsupportedMediaType creates a UpdateWorkflowUnsupportedMediaType with default headers values
func NewUpdateWorkflowUnsupportedMediaType() *UpdateWorkflowUnsupportedMediaType {
	return &UpdateWorkflowUnsupportedMediaType{}
}

/*UpdateWorkflowUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type UpdateWorkflowUnsupportedMediaType struct {
}

func (o *UpdateWorkflowUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/onboarding/pnp-workflow/{id}][%d] updateWorkflowUnsupportedMediaType ", 415)
}

func (o *UpdateWorkflowUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateWorkflowInternalServerError creates a UpdateWorkflowInternalServerError with default headers values
func NewUpdateWorkflowInternalServerError() *UpdateWorkflowInternalServerError {
	return &UpdateWorkflowInternalServerError{}
}

/*UpdateWorkflowInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type UpdateWorkflowInternalServerError struct {
}

func (o *UpdateWorkflowInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/onboarding/pnp-workflow/{id}][%d] updateWorkflowInternalServerError ", 500)
}

func (o *UpdateWorkflowInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateWorkflowNotImplemented creates a UpdateWorkflowNotImplemented with default headers values
func NewUpdateWorkflowNotImplemented() *UpdateWorkflowNotImplemented {
	return &UpdateWorkflowNotImplemented{}
}

/*UpdateWorkflowNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type UpdateWorkflowNotImplemented struct {
}

func (o *UpdateWorkflowNotImplemented) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/onboarding/pnp-workflow/{id}][%d] updateWorkflowNotImplemented ", 501)
}

func (o *UpdateWorkflowNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateWorkflowServiceUnavailable creates a UpdateWorkflowServiceUnavailable with default headers values
func NewUpdateWorkflowServiceUnavailable() *UpdateWorkflowServiceUnavailable {
	return &UpdateWorkflowServiceUnavailable{}
}

/*UpdateWorkflowServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type UpdateWorkflowServiceUnavailable struct {
}

func (o *UpdateWorkflowServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/onboarding/pnp-workflow/{id}][%d] updateWorkflowServiceUnavailable ", 503)
}

func (o *UpdateWorkflowServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateWorkflowGatewayTimeout creates a UpdateWorkflowGatewayTimeout with default headers values
func NewUpdateWorkflowGatewayTimeout() *UpdateWorkflowGatewayTimeout {
	return &UpdateWorkflowGatewayTimeout{}
}

/*UpdateWorkflowGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type UpdateWorkflowGatewayTimeout struct {
}

func (o *UpdateWorkflowGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/onboarding/pnp-workflow/{id}][%d] updateWorkflowGatewayTimeout ", 504)
}

func (o *UpdateWorkflowGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
