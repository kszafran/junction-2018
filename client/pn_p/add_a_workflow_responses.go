// Code generated by go-swagger; DO NOT EDIT.

package pn_p

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// AddAWorkflowReader is a Reader for the AddAWorkflow structure.
type AddAWorkflowReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddAWorkflowReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewAddAWorkflowOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 201:
		result := NewAddAWorkflowCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 202:
		result := NewAddAWorkflowAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewAddAWorkflowNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewAddAWorkflowPartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewAddAWorkflowBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewAddAWorkflowUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewAddAWorkflowForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewAddAWorkflowNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewAddAWorkflowConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewAddAWorkflowUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewAddAWorkflowInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewAddAWorkflowNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewAddAWorkflowServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewAddAWorkflowGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAddAWorkflowOK creates a AddAWorkflowOK with default headers values
func NewAddAWorkflowOK() *AddAWorkflowOK {
	return &AddAWorkflowOK{}
}

/*AddAWorkflowOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type AddAWorkflowOK struct {
	Payload *models.AddAWorkflowResponse
}

func (o *AddAWorkflowOK) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-workflow][%d] addAWorkflowOK  %+v", 200, o.Payload)
}

func (o *AddAWorkflowOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AddAWorkflowResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddAWorkflowCreated creates a AddAWorkflowCreated with default headers values
func NewAddAWorkflowCreated() *AddAWorkflowCreated {
	return &AddAWorkflowCreated{}
}

/*AddAWorkflowCreated handles this case with default header values.

The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body.
*/
type AddAWorkflowCreated struct {
}

func (o *AddAWorkflowCreated) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-workflow][%d] addAWorkflowCreated ", 201)
}

func (o *AddAWorkflowCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddAWorkflowAccepted creates a AddAWorkflowAccepted with default headers values
func NewAddAWorkflowAccepted() *AddAWorkflowAccepted {
	return &AddAWorkflowAccepted{}
}

/*AddAWorkflowAccepted handles this case with default header values.

The request was accepted for processing, but the processing has not been completed.
*/
type AddAWorkflowAccepted struct {
}

func (o *AddAWorkflowAccepted) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-workflow][%d] addAWorkflowAccepted ", 202)
}

func (o *AddAWorkflowAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddAWorkflowNoContent creates a AddAWorkflowNoContent with default headers values
func NewAddAWorkflowNoContent() *AddAWorkflowNoContent {
	return &AddAWorkflowNoContent{}
}

/*AddAWorkflowNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type AddAWorkflowNoContent struct {
}

func (o *AddAWorkflowNoContent) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-workflow][%d] addAWorkflowNoContent ", 204)
}

func (o *AddAWorkflowNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddAWorkflowPartialContent creates a AddAWorkflowPartialContent with default headers values
func NewAddAWorkflowPartialContent() *AddAWorkflowPartialContent {
	return &AddAWorkflowPartialContent{}
}

/*AddAWorkflowPartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type AddAWorkflowPartialContent struct {
}

func (o *AddAWorkflowPartialContent) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-workflow][%d] addAWorkflowPartialContent ", 206)
}

func (o *AddAWorkflowPartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddAWorkflowBadRequest creates a AddAWorkflowBadRequest with default headers values
func NewAddAWorkflowBadRequest() *AddAWorkflowBadRequest {
	return &AddAWorkflowBadRequest{}
}

/*AddAWorkflowBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type AddAWorkflowBadRequest struct {
}

func (o *AddAWorkflowBadRequest) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-workflow][%d] addAWorkflowBadRequest ", 400)
}

func (o *AddAWorkflowBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddAWorkflowUnauthorized creates a AddAWorkflowUnauthorized with default headers values
func NewAddAWorkflowUnauthorized() *AddAWorkflowUnauthorized {
	return &AddAWorkflowUnauthorized{}
}

/*AddAWorkflowUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type AddAWorkflowUnauthorized struct {
}

func (o *AddAWorkflowUnauthorized) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-workflow][%d] addAWorkflowUnauthorized ", 401)
}

func (o *AddAWorkflowUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddAWorkflowForbidden creates a AddAWorkflowForbidden with default headers values
func NewAddAWorkflowForbidden() *AddAWorkflowForbidden {
	return &AddAWorkflowForbidden{}
}

/*AddAWorkflowForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type AddAWorkflowForbidden struct {
}

func (o *AddAWorkflowForbidden) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-workflow][%d] addAWorkflowForbidden ", 403)
}

func (o *AddAWorkflowForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddAWorkflowNotFound creates a AddAWorkflowNotFound with default headers values
func NewAddAWorkflowNotFound() *AddAWorkflowNotFound {
	return &AddAWorkflowNotFound{}
}

/*AddAWorkflowNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type AddAWorkflowNotFound struct {
}

func (o *AddAWorkflowNotFound) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-workflow][%d] addAWorkflowNotFound ", 404)
}

func (o *AddAWorkflowNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddAWorkflowConflict creates a AddAWorkflowConflict with default headers values
func NewAddAWorkflowConflict() *AddAWorkflowConflict {
	return &AddAWorkflowConflict{}
}

/*AddAWorkflowConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type AddAWorkflowConflict struct {
}

func (o *AddAWorkflowConflict) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-workflow][%d] addAWorkflowConflict ", 409)
}

func (o *AddAWorkflowConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddAWorkflowUnsupportedMediaType creates a AddAWorkflowUnsupportedMediaType with default headers values
func NewAddAWorkflowUnsupportedMediaType() *AddAWorkflowUnsupportedMediaType {
	return &AddAWorkflowUnsupportedMediaType{}
}

/*AddAWorkflowUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type AddAWorkflowUnsupportedMediaType struct {
}

func (o *AddAWorkflowUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-workflow][%d] addAWorkflowUnsupportedMediaType ", 415)
}

func (o *AddAWorkflowUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddAWorkflowInternalServerError creates a AddAWorkflowInternalServerError with default headers values
func NewAddAWorkflowInternalServerError() *AddAWorkflowInternalServerError {
	return &AddAWorkflowInternalServerError{}
}

/*AddAWorkflowInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type AddAWorkflowInternalServerError struct {
}

func (o *AddAWorkflowInternalServerError) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-workflow][%d] addAWorkflowInternalServerError ", 500)
}

func (o *AddAWorkflowInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddAWorkflowNotImplemented creates a AddAWorkflowNotImplemented with default headers values
func NewAddAWorkflowNotImplemented() *AddAWorkflowNotImplemented {
	return &AddAWorkflowNotImplemented{}
}

/*AddAWorkflowNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type AddAWorkflowNotImplemented struct {
}

func (o *AddAWorkflowNotImplemented) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-workflow][%d] addAWorkflowNotImplemented ", 501)
}

func (o *AddAWorkflowNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddAWorkflowServiceUnavailable creates a AddAWorkflowServiceUnavailable with default headers values
func NewAddAWorkflowServiceUnavailable() *AddAWorkflowServiceUnavailable {
	return &AddAWorkflowServiceUnavailable{}
}

/*AddAWorkflowServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type AddAWorkflowServiceUnavailable struct {
}

func (o *AddAWorkflowServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-workflow][%d] addAWorkflowServiceUnavailable ", 503)
}

func (o *AddAWorkflowServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddAWorkflowGatewayTimeout creates a AddAWorkflowGatewayTimeout with default headers values
func NewAddAWorkflowGatewayTimeout() *AddAWorkflowGatewayTimeout {
	return &AddAWorkflowGatewayTimeout{}
}

/*AddAWorkflowGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type AddAWorkflowGatewayTimeout struct {
}

func (o *AddAWorkflowGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-workflow][%d] addAWorkflowGatewayTimeout ", 504)
}

func (o *AddAWorkflowGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
