// Code generated by go-swagger; DO NOT EDIT.

package pn_p

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// GetDeviceHistoryReader is a Reader for the GetDeviceHistory structure.
type GetDeviceHistoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDeviceHistoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetDeviceHistoryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewGetDeviceHistoryNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewGetDeviceHistoryPartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetDeviceHistoryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetDeviceHistoryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetDeviceHistoryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetDeviceHistoryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewGetDeviceHistoryConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewGetDeviceHistoryUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetDeviceHistoryInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewGetDeviceHistoryNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetDeviceHistoryServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetDeviceHistoryGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDeviceHistoryOK creates a GetDeviceHistoryOK with default headers values
func NewGetDeviceHistoryOK() *GetDeviceHistoryOK {
	return &GetDeviceHistoryOK{}
}

/*GetDeviceHistoryOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type GetDeviceHistoryOK struct {
	Payload *models.GetDeviceHistoryResponse
}

func (o *GetDeviceHistoryOK) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device/history][%d] getDeviceHistoryOK  %+v", 200, o.Payload)
}

func (o *GetDeviceHistoryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetDeviceHistoryResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeviceHistoryNoContent creates a GetDeviceHistoryNoContent with default headers values
func NewGetDeviceHistoryNoContent() *GetDeviceHistoryNoContent {
	return &GetDeviceHistoryNoContent{}
}

/*GetDeviceHistoryNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type GetDeviceHistoryNoContent struct {
}

func (o *GetDeviceHistoryNoContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device/history][%d] getDeviceHistoryNoContent ", 204)
}

func (o *GetDeviceHistoryNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceHistoryPartialContent creates a GetDeviceHistoryPartialContent with default headers values
func NewGetDeviceHistoryPartialContent() *GetDeviceHistoryPartialContent {
	return &GetDeviceHistoryPartialContent{}
}

/*GetDeviceHistoryPartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type GetDeviceHistoryPartialContent struct {
}

func (o *GetDeviceHistoryPartialContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device/history][%d] getDeviceHistoryPartialContent ", 206)
}

func (o *GetDeviceHistoryPartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceHistoryBadRequest creates a GetDeviceHistoryBadRequest with default headers values
func NewGetDeviceHistoryBadRequest() *GetDeviceHistoryBadRequest {
	return &GetDeviceHistoryBadRequest{}
}

/*GetDeviceHistoryBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type GetDeviceHistoryBadRequest struct {
}

func (o *GetDeviceHistoryBadRequest) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device/history][%d] getDeviceHistoryBadRequest ", 400)
}

func (o *GetDeviceHistoryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceHistoryUnauthorized creates a GetDeviceHistoryUnauthorized with default headers values
func NewGetDeviceHistoryUnauthorized() *GetDeviceHistoryUnauthorized {
	return &GetDeviceHistoryUnauthorized{}
}

/*GetDeviceHistoryUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type GetDeviceHistoryUnauthorized struct {
}

func (o *GetDeviceHistoryUnauthorized) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device/history][%d] getDeviceHistoryUnauthorized ", 401)
}

func (o *GetDeviceHistoryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceHistoryForbidden creates a GetDeviceHistoryForbidden with default headers values
func NewGetDeviceHistoryForbidden() *GetDeviceHistoryForbidden {
	return &GetDeviceHistoryForbidden{}
}

/*GetDeviceHistoryForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type GetDeviceHistoryForbidden struct {
}

func (o *GetDeviceHistoryForbidden) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device/history][%d] getDeviceHistoryForbidden ", 403)
}

func (o *GetDeviceHistoryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceHistoryNotFound creates a GetDeviceHistoryNotFound with default headers values
func NewGetDeviceHistoryNotFound() *GetDeviceHistoryNotFound {
	return &GetDeviceHistoryNotFound{}
}

/*GetDeviceHistoryNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type GetDeviceHistoryNotFound struct {
}

func (o *GetDeviceHistoryNotFound) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device/history][%d] getDeviceHistoryNotFound ", 404)
}

func (o *GetDeviceHistoryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceHistoryConflict creates a GetDeviceHistoryConflict with default headers values
func NewGetDeviceHistoryConflict() *GetDeviceHistoryConflict {
	return &GetDeviceHistoryConflict{}
}

/*GetDeviceHistoryConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type GetDeviceHistoryConflict struct {
}

func (o *GetDeviceHistoryConflict) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device/history][%d] getDeviceHistoryConflict ", 409)
}

func (o *GetDeviceHistoryConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceHistoryUnsupportedMediaType creates a GetDeviceHistoryUnsupportedMediaType with default headers values
func NewGetDeviceHistoryUnsupportedMediaType() *GetDeviceHistoryUnsupportedMediaType {
	return &GetDeviceHistoryUnsupportedMediaType{}
}

/*GetDeviceHistoryUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type GetDeviceHistoryUnsupportedMediaType struct {
}

func (o *GetDeviceHistoryUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device/history][%d] getDeviceHistoryUnsupportedMediaType ", 415)
}

func (o *GetDeviceHistoryUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceHistoryInternalServerError creates a GetDeviceHistoryInternalServerError with default headers values
func NewGetDeviceHistoryInternalServerError() *GetDeviceHistoryInternalServerError {
	return &GetDeviceHistoryInternalServerError{}
}

/*GetDeviceHistoryInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type GetDeviceHistoryInternalServerError struct {
}

func (o *GetDeviceHistoryInternalServerError) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device/history][%d] getDeviceHistoryInternalServerError ", 500)
}

func (o *GetDeviceHistoryInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceHistoryNotImplemented creates a GetDeviceHistoryNotImplemented with default headers values
func NewGetDeviceHistoryNotImplemented() *GetDeviceHistoryNotImplemented {
	return &GetDeviceHistoryNotImplemented{}
}

/*GetDeviceHistoryNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type GetDeviceHistoryNotImplemented struct {
}

func (o *GetDeviceHistoryNotImplemented) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device/history][%d] getDeviceHistoryNotImplemented ", 501)
}

func (o *GetDeviceHistoryNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceHistoryServiceUnavailable creates a GetDeviceHistoryServiceUnavailable with default headers values
func NewGetDeviceHistoryServiceUnavailable() *GetDeviceHistoryServiceUnavailable {
	return &GetDeviceHistoryServiceUnavailable{}
}

/*GetDeviceHistoryServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type GetDeviceHistoryServiceUnavailable struct {
}

func (o *GetDeviceHistoryServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device/history][%d] getDeviceHistoryServiceUnavailable ", 503)
}

func (o *GetDeviceHistoryServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceHistoryGatewayTimeout creates a GetDeviceHistoryGatewayTimeout with default headers values
func NewGetDeviceHistoryGatewayTimeout() *GetDeviceHistoryGatewayTimeout {
	return &GetDeviceHistoryGatewayTimeout{}
}

/*GetDeviceHistoryGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type GetDeviceHistoryGatewayTimeout struct {
}

func (o *GetDeviceHistoryGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device/history][%d] getDeviceHistoryGatewayTimeout ", 504)
}

func (o *GetDeviceHistoryGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
