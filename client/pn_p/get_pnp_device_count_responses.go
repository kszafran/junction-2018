// Code generated by go-swagger; DO NOT EDIT.

package pn_p

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// GetPnpDeviceCountReader is a Reader for the GetPnpDeviceCount structure.
type GetPnpDeviceCountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPnpDeviceCountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetPnpDeviceCountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewGetPnpDeviceCountNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewGetPnpDeviceCountPartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetPnpDeviceCountBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetPnpDeviceCountUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetPnpDeviceCountForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetPnpDeviceCountNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewGetPnpDeviceCountConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewGetPnpDeviceCountUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetPnpDeviceCountInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewGetPnpDeviceCountNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetPnpDeviceCountServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetPnpDeviceCountGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetPnpDeviceCountOK creates a GetPnpDeviceCountOK with default headers values
func NewGetPnpDeviceCountOK() *GetPnpDeviceCountOK {
	return &GetPnpDeviceCountOK{}
}

/*GetPnpDeviceCountOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type GetPnpDeviceCountOK struct {
	Payload *models.GetDeviceCountResponse
}

func (o *GetPnpDeviceCountOK) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device/count][%d] getPnpDeviceCountOK  %+v", 200, o.Payload)
}

func (o *GetPnpDeviceCountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetDeviceCountResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPnpDeviceCountNoContent creates a GetPnpDeviceCountNoContent with default headers values
func NewGetPnpDeviceCountNoContent() *GetPnpDeviceCountNoContent {
	return &GetPnpDeviceCountNoContent{}
}

/*GetPnpDeviceCountNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type GetPnpDeviceCountNoContent struct {
}

func (o *GetPnpDeviceCountNoContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device/count][%d] getPnpDeviceCountNoContent ", 204)
}

func (o *GetPnpDeviceCountNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPnpDeviceCountPartialContent creates a GetPnpDeviceCountPartialContent with default headers values
func NewGetPnpDeviceCountPartialContent() *GetPnpDeviceCountPartialContent {
	return &GetPnpDeviceCountPartialContent{}
}

/*GetPnpDeviceCountPartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type GetPnpDeviceCountPartialContent struct {
}

func (o *GetPnpDeviceCountPartialContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device/count][%d] getPnpDeviceCountPartialContent ", 206)
}

func (o *GetPnpDeviceCountPartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPnpDeviceCountBadRequest creates a GetPnpDeviceCountBadRequest with default headers values
func NewGetPnpDeviceCountBadRequest() *GetPnpDeviceCountBadRequest {
	return &GetPnpDeviceCountBadRequest{}
}

/*GetPnpDeviceCountBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type GetPnpDeviceCountBadRequest struct {
}

func (o *GetPnpDeviceCountBadRequest) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device/count][%d] getPnpDeviceCountBadRequest ", 400)
}

func (o *GetPnpDeviceCountBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPnpDeviceCountUnauthorized creates a GetPnpDeviceCountUnauthorized with default headers values
func NewGetPnpDeviceCountUnauthorized() *GetPnpDeviceCountUnauthorized {
	return &GetPnpDeviceCountUnauthorized{}
}

/*GetPnpDeviceCountUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type GetPnpDeviceCountUnauthorized struct {
}

func (o *GetPnpDeviceCountUnauthorized) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device/count][%d] getPnpDeviceCountUnauthorized ", 401)
}

func (o *GetPnpDeviceCountUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPnpDeviceCountForbidden creates a GetPnpDeviceCountForbidden with default headers values
func NewGetPnpDeviceCountForbidden() *GetPnpDeviceCountForbidden {
	return &GetPnpDeviceCountForbidden{}
}

/*GetPnpDeviceCountForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type GetPnpDeviceCountForbidden struct {
}

func (o *GetPnpDeviceCountForbidden) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device/count][%d] getPnpDeviceCountForbidden ", 403)
}

func (o *GetPnpDeviceCountForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPnpDeviceCountNotFound creates a GetPnpDeviceCountNotFound with default headers values
func NewGetPnpDeviceCountNotFound() *GetPnpDeviceCountNotFound {
	return &GetPnpDeviceCountNotFound{}
}

/*GetPnpDeviceCountNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type GetPnpDeviceCountNotFound struct {
}

func (o *GetPnpDeviceCountNotFound) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device/count][%d] getPnpDeviceCountNotFound ", 404)
}

func (o *GetPnpDeviceCountNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPnpDeviceCountConflict creates a GetPnpDeviceCountConflict with default headers values
func NewGetPnpDeviceCountConflict() *GetPnpDeviceCountConflict {
	return &GetPnpDeviceCountConflict{}
}

/*GetPnpDeviceCountConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type GetPnpDeviceCountConflict struct {
}

func (o *GetPnpDeviceCountConflict) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device/count][%d] getPnpDeviceCountConflict ", 409)
}

func (o *GetPnpDeviceCountConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPnpDeviceCountUnsupportedMediaType creates a GetPnpDeviceCountUnsupportedMediaType with default headers values
func NewGetPnpDeviceCountUnsupportedMediaType() *GetPnpDeviceCountUnsupportedMediaType {
	return &GetPnpDeviceCountUnsupportedMediaType{}
}

/*GetPnpDeviceCountUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type GetPnpDeviceCountUnsupportedMediaType struct {
}

func (o *GetPnpDeviceCountUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device/count][%d] getPnpDeviceCountUnsupportedMediaType ", 415)
}

func (o *GetPnpDeviceCountUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPnpDeviceCountInternalServerError creates a GetPnpDeviceCountInternalServerError with default headers values
func NewGetPnpDeviceCountInternalServerError() *GetPnpDeviceCountInternalServerError {
	return &GetPnpDeviceCountInternalServerError{}
}

/*GetPnpDeviceCountInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type GetPnpDeviceCountInternalServerError struct {
}

func (o *GetPnpDeviceCountInternalServerError) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device/count][%d] getPnpDeviceCountInternalServerError ", 500)
}

func (o *GetPnpDeviceCountInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPnpDeviceCountNotImplemented creates a GetPnpDeviceCountNotImplemented with default headers values
func NewGetPnpDeviceCountNotImplemented() *GetPnpDeviceCountNotImplemented {
	return &GetPnpDeviceCountNotImplemented{}
}

/*GetPnpDeviceCountNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type GetPnpDeviceCountNotImplemented struct {
}

func (o *GetPnpDeviceCountNotImplemented) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device/count][%d] getPnpDeviceCountNotImplemented ", 501)
}

func (o *GetPnpDeviceCountNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPnpDeviceCountServiceUnavailable creates a GetPnpDeviceCountServiceUnavailable with default headers values
func NewGetPnpDeviceCountServiceUnavailable() *GetPnpDeviceCountServiceUnavailable {
	return &GetPnpDeviceCountServiceUnavailable{}
}

/*GetPnpDeviceCountServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type GetPnpDeviceCountServiceUnavailable struct {
}

func (o *GetPnpDeviceCountServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device/count][%d] getPnpDeviceCountServiceUnavailable ", 503)
}

func (o *GetPnpDeviceCountServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPnpDeviceCountGatewayTimeout creates a GetPnpDeviceCountGatewayTimeout with default headers values
func NewGetPnpDeviceCountGatewayTimeout() *GetPnpDeviceCountGatewayTimeout {
	return &GetPnpDeviceCountGatewayTimeout{}
}

/*GetPnpDeviceCountGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type GetPnpDeviceCountGatewayTimeout struct {
}

func (o *GetPnpDeviceCountGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device/count][%d] getPnpDeviceCountGatewayTimeout ", 504)
}

func (o *GetPnpDeviceCountGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
