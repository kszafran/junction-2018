// Code generated by go-swagger; DO NOT EDIT.

package pn_p

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// GetPnpDeviceListReader is a Reader for the GetPnpDeviceList structure.
type GetPnpDeviceListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPnpDeviceListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetPnpDeviceListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewGetPnpDeviceListNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewGetPnpDeviceListPartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetPnpDeviceListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetPnpDeviceListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetPnpDeviceListForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetPnpDeviceListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewGetPnpDeviceListConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewGetPnpDeviceListUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetPnpDeviceListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewGetPnpDeviceListNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetPnpDeviceListServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetPnpDeviceListGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetPnpDeviceListOK creates a GetPnpDeviceListOK with default headers values
func NewGetPnpDeviceListOK() *GetPnpDeviceListOK {
	return &GetPnpDeviceListOK{}
}

/*GetPnpDeviceListOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type GetPnpDeviceListOK struct {
	Payload *models.Device
}

func (o *GetPnpDeviceListOK) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device][%d] getPnpDeviceListOK  %+v", 200, o.Payload)
}

func (o *GetPnpDeviceListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Device)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPnpDeviceListNoContent creates a GetPnpDeviceListNoContent with default headers values
func NewGetPnpDeviceListNoContent() *GetPnpDeviceListNoContent {
	return &GetPnpDeviceListNoContent{}
}

/*GetPnpDeviceListNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type GetPnpDeviceListNoContent struct {
}

func (o *GetPnpDeviceListNoContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device][%d] getPnpDeviceListNoContent ", 204)
}

func (o *GetPnpDeviceListNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPnpDeviceListPartialContent creates a GetPnpDeviceListPartialContent with default headers values
func NewGetPnpDeviceListPartialContent() *GetPnpDeviceListPartialContent {
	return &GetPnpDeviceListPartialContent{}
}

/*GetPnpDeviceListPartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type GetPnpDeviceListPartialContent struct {
}

func (o *GetPnpDeviceListPartialContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device][%d] getPnpDeviceListPartialContent ", 206)
}

func (o *GetPnpDeviceListPartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPnpDeviceListBadRequest creates a GetPnpDeviceListBadRequest with default headers values
func NewGetPnpDeviceListBadRequest() *GetPnpDeviceListBadRequest {
	return &GetPnpDeviceListBadRequest{}
}

/*GetPnpDeviceListBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type GetPnpDeviceListBadRequest struct {
}

func (o *GetPnpDeviceListBadRequest) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device][%d] getPnpDeviceListBadRequest ", 400)
}

func (o *GetPnpDeviceListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPnpDeviceListUnauthorized creates a GetPnpDeviceListUnauthorized with default headers values
func NewGetPnpDeviceListUnauthorized() *GetPnpDeviceListUnauthorized {
	return &GetPnpDeviceListUnauthorized{}
}

/*GetPnpDeviceListUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type GetPnpDeviceListUnauthorized struct {
}

func (o *GetPnpDeviceListUnauthorized) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device][%d] getPnpDeviceListUnauthorized ", 401)
}

func (o *GetPnpDeviceListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPnpDeviceListForbidden creates a GetPnpDeviceListForbidden with default headers values
func NewGetPnpDeviceListForbidden() *GetPnpDeviceListForbidden {
	return &GetPnpDeviceListForbidden{}
}

/*GetPnpDeviceListForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type GetPnpDeviceListForbidden struct {
}

func (o *GetPnpDeviceListForbidden) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device][%d] getPnpDeviceListForbidden ", 403)
}

func (o *GetPnpDeviceListForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPnpDeviceListNotFound creates a GetPnpDeviceListNotFound with default headers values
func NewGetPnpDeviceListNotFound() *GetPnpDeviceListNotFound {
	return &GetPnpDeviceListNotFound{}
}

/*GetPnpDeviceListNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type GetPnpDeviceListNotFound struct {
}

func (o *GetPnpDeviceListNotFound) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device][%d] getPnpDeviceListNotFound ", 404)
}

func (o *GetPnpDeviceListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPnpDeviceListConflict creates a GetPnpDeviceListConflict with default headers values
func NewGetPnpDeviceListConflict() *GetPnpDeviceListConflict {
	return &GetPnpDeviceListConflict{}
}

/*GetPnpDeviceListConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type GetPnpDeviceListConflict struct {
}

func (o *GetPnpDeviceListConflict) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device][%d] getPnpDeviceListConflict ", 409)
}

func (o *GetPnpDeviceListConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPnpDeviceListUnsupportedMediaType creates a GetPnpDeviceListUnsupportedMediaType with default headers values
func NewGetPnpDeviceListUnsupportedMediaType() *GetPnpDeviceListUnsupportedMediaType {
	return &GetPnpDeviceListUnsupportedMediaType{}
}

/*GetPnpDeviceListUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type GetPnpDeviceListUnsupportedMediaType struct {
}

func (o *GetPnpDeviceListUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device][%d] getPnpDeviceListUnsupportedMediaType ", 415)
}

func (o *GetPnpDeviceListUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPnpDeviceListInternalServerError creates a GetPnpDeviceListInternalServerError with default headers values
func NewGetPnpDeviceListInternalServerError() *GetPnpDeviceListInternalServerError {
	return &GetPnpDeviceListInternalServerError{}
}

/*GetPnpDeviceListInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type GetPnpDeviceListInternalServerError struct {
}

func (o *GetPnpDeviceListInternalServerError) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device][%d] getPnpDeviceListInternalServerError ", 500)
}

func (o *GetPnpDeviceListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPnpDeviceListNotImplemented creates a GetPnpDeviceListNotImplemented with default headers values
func NewGetPnpDeviceListNotImplemented() *GetPnpDeviceListNotImplemented {
	return &GetPnpDeviceListNotImplemented{}
}

/*GetPnpDeviceListNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type GetPnpDeviceListNotImplemented struct {
}

func (o *GetPnpDeviceListNotImplemented) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device][%d] getPnpDeviceListNotImplemented ", 501)
}

func (o *GetPnpDeviceListNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPnpDeviceListServiceUnavailable creates a GetPnpDeviceListServiceUnavailable with default headers values
func NewGetPnpDeviceListServiceUnavailable() *GetPnpDeviceListServiceUnavailable {
	return &GetPnpDeviceListServiceUnavailable{}
}

/*GetPnpDeviceListServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type GetPnpDeviceListServiceUnavailable struct {
}

func (o *GetPnpDeviceListServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device][%d] getPnpDeviceListServiceUnavailable ", 503)
}

func (o *GetPnpDeviceListServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPnpDeviceListGatewayTimeout creates a GetPnpDeviceListGatewayTimeout with default headers values
func NewGetPnpDeviceListGatewayTimeout() *GetPnpDeviceListGatewayTimeout {
	return &GetPnpDeviceListGatewayTimeout{}
}

/*GetPnpDeviceListGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type GetPnpDeviceListGatewayTimeout struct {
}

func (o *GetPnpDeviceListGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device][%d] getPnpDeviceListGatewayTimeout ", 504)
}

func (o *GetPnpDeviceListGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
