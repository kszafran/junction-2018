// Code generated by go-swagger; DO NOT EDIT.

package pn_p

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetDeviceHistoryParams creates a new GetDeviceHistoryParams object
// with the default values initialized.
func NewGetDeviceHistoryParams() *GetDeviceHistoryParams {
	var ()
	return &GetDeviceHistoryParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetDeviceHistoryParamsWithTimeout creates a new GetDeviceHistoryParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetDeviceHistoryParamsWithTimeout(timeout time.Duration) *GetDeviceHistoryParams {
	var ()
	return &GetDeviceHistoryParams{

		timeout: timeout,
	}
}

// NewGetDeviceHistoryParamsWithContext creates a new GetDeviceHistoryParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetDeviceHistoryParamsWithContext(ctx context.Context) *GetDeviceHistoryParams {
	var ()
	return &GetDeviceHistoryParams{

		Context: ctx,
	}
}

// NewGetDeviceHistoryParamsWithHTTPClient creates a new GetDeviceHistoryParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetDeviceHistoryParamsWithHTTPClient(client *http.Client) *GetDeviceHistoryParams {
	var ()
	return &GetDeviceHistoryParams{
		HTTPClient: client,
	}
}

/*GetDeviceHistoryParams contains all the parameters to send to the API endpoint
for the get device history operation typically these are written to a http.Request
*/
type GetDeviceHistoryParams struct {

	/*SerialNumber
	  Device Serial Number

	*/
	SerialNumber string
	/*Sort
	  Comma seperated list of fields to sort on

	*/
	Sort []string
	/*SortOrder
	  Sort Order Ascending (asc) or Descending (des)

	*/
	SortOrder *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get device history params
func (o *GetDeviceHistoryParams) WithTimeout(timeout time.Duration) *GetDeviceHistoryParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get device history params
func (o *GetDeviceHistoryParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get device history params
func (o *GetDeviceHistoryParams) WithContext(ctx context.Context) *GetDeviceHistoryParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get device history params
func (o *GetDeviceHistoryParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get device history params
func (o *GetDeviceHistoryParams) WithHTTPClient(client *http.Client) *GetDeviceHistoryParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get device history params
func (o *GetDeviceHistoryParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithSerialNumber adds the serialNumber to the get device history params
func (o *GetDeviceHistoryParams) WithSerialNumber(serialNumber string) *GetDeviceHistoryParams {
	o.SetSerialNumber(serialNumber)
	return o
}

// SetSerialNumber adds the serialNumber to the get device history params
func (o *GetDeviceHistoryParams) SetSerialNumber(serialNumber string) {
	o.SerialNumber = serialNumber
}

// WithSort adds the sort to the get device history params
func (o *GetDeviceHistoryParams) WithSort(sort []string) *GetDeviceHistoryParams {
	o.SetSort(sort)
	return o
}

// SetSort adds the sort to the get device history params
func (o *GetDeviceHistoryParams) SetSort(sort []string) {
	o.Sort = sort
}

// WithSortOrder adds the sortOrder to the get device history params
func (o *GetDeviceHistoryParams) WithSortOrder(sortOrder *string) *GetDeviceHistoryParams {
	o.SetSortOrder(sortOrder)
	return o
}

// SetSortOrder adds the sortOrder to the get device history params
func (o *GetDeviceHistoryParams) SetSortOrder(sortOrder *string) {
	o.SortOrder = sortOrder
}

// WriteToRequest writes these params to a swagger request
func (o *GetDeviceHistoryParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param serialNumber
	qrSerialNumber := o.SerialNumber
	qSerialNumber := qrSerialNumber
	if qSerialNumber != "" {
		if err := r.SetQueryParam("serialNumber", qSerialNumber); err != nil {
			return err
		}
	}

	valuesSort := o.Sort

	joinedSort := swag.JoinByFormat(valuesSort, "")
	// query array param sort
	if err := r.SetQueryParam("sort", joinedSort...); err != nil {
		return err
	}

	if o.SortOrder != nil {

		// query param sortOrder
		var qrSortOrder string
		if o.SortOrder != nil {
			qrSortOrder = *o.SortOrder
		}
		qSortOrder := qrSortOrder
		if qSortOrder != "" {
			if err := r.SetQueryParam("sortOrder", qSortOrder); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
