// Code generated by go-swagger; DO NOT EDIT.

package pn_p

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// ImportDevicesInBulkReader is a Reader for the ImportDevicesInBulk structure.
type ImportDevicesInBulkReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ImportDevicesInBulkReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewImportDevicesInBulkOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 201:
		result := NewImportDevicesInBulkCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 202:
		result := NewImportDevicesInBulkAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewImportDevicesInBulkNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewImportDevicesInBulkPartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewImportDevicesInBulkBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewImportDevicesInBulkUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewImportDevicesInBulkForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewImportDevicesInBulkNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewImportDevicesInBulkConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewImportDevicesInBulkUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewImportDevicesInBulkInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewImportDevicesInBulkNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewImportDevicesInBulkServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewImportDevicesInBulkGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewImportDevicesInBulkOK creates a ImportDevicesInBulkOK with default headers values
func NewImportDevicesInBulkOK() *ImportDevicesInBulkOK {
	return &ImportDevicesInBulkOK{}
}

/*ImportDevicesInBulkOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type ImportDevicesInBulkOK struct {
	Payload *models.ImportDevicesInBulkResponse
}

func (o *ImportDevicesInBulkOK) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/import][%d] importDevicesInBulkOK  %+v", 200, o.Payload)
}

func (o *ImportDevicesInBulkOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ImportDevicesInBulkResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImportDevicesInBulkCreated creates a ImportDevicesInBulkCreated with default headers values
func NewImportDevicesInBulkCreated() *ImportDevicesInBulkCreated {
	return &ImportDevicesInBulkCreated{}
}

/*ImportDevicesInBulkCreated handles this case with default header values.

The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body.
*/
type ImportDevicesInBulkCreated struct {
}

func (o *ImportDevicesInBulkCreated) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/import][%d] importDevicesInBulkCreated ", 201)
}

func (o *ImportDevicesInBulkCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewImportDevicesInBulkAccepted creates a ImportDevicesInBulkAccepted with default headers values
func NewImportDevicesInBulkAccepted() *ImportDevicesInBulkAccepted {
	return &ImportDevicesInBulkAccepted{}
}

/*ImportDevicesInBulkAccepted handles this case with default header values.

The request was accepted for processing, but the processing has not been completed.
*/
type ImportDevicesInBulkAccepted struct {
}

func (o *ImportDevicesInBulkAccepted) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/import][%d] importDevicesInBulkAccepted ", 202)
}

func (o *ImportDevicesInBulkAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewImportDevicesInBulkNoContent creates a ImportDevicesInBulkNoContent with default headers values
func NewImportDevicesInBulkNoContent() *ImportDevicesInBulkNoContent {
	return &ImportDevicesInBulkNoContent{}
}

/*ImportDevicesInBulkNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type ImportDevicesInBulkNoContent struct {
}

func (o *ImportDevicesInBulkNoContent) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/import][%d] importDevicesInBulkNoContent ", 204)
}

func (o *ImportDevicesInBulkNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewImportDevicesInBulkPartialContent creates a ImportDevicesInBulkPartialContent with default headers values
func NewImportDevicesInBulkPartialContent() *ImportDevicesInBulkPartialContent {
	return &ImportDevicesInBulkPartialContent{}
}

/*ImportDevicesInBulkPartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type ImportDevicesInBulkPartialContent struct {
}

func (o *ImportDevicesInBulkPartialContent) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/import][%d] importDevicesInBulkPartialContent ", 206)
}

func (o *ImportDevicesInBulkPartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewImportDevicesInBulkBadRequest creates a ImportDevicesInBulkBadRequest with default headers values
func NewImportDevicesInBulkBadRequest() *ImportDevicesInBulkBadRequest {
	return &ImportDevicesInBulkBadRequest{}
}

/*ImportDevicesInBulkBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type ImportDevicesInBulkBadRequest struct {
}

func (o *ImportDevicesInBulkBadRequest) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/import][%d] importDevicesInBulkBadRequest ", 400)
}

func (o *ImportDevicesInBulkBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewImportDevicesInBulkUnauthorized creates a ImportDevicesInBulkUnauthorized with default headers values
func NewImportDevicesInBulkUnauthorized() *ImportDevicesInBulkUnauthorized {
	return &ImportDevicesInBulkUnauthorized{}
}

/*ImportDevicesInBulkUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type ImportDevicesInBulkUnauthorized struct {
}

func (o *ImportDevicesInBulkUnauthorized) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/import][%d] importDevicesInBulkUnauthorized ", 401)
}

func (o *ImportDevicesInBulkUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewImportDevicesInBulkForbidden creates a ImportDevicesInBulkForbidden with default headers values
func NewImportDevicesInBulkForbidden() *ImportDevicesInBulkForbidden {
	return &ImportDevicesInBulkForbidden{}
}

/*ImportDevicesInBulkForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type ImportDevicesInBulkForbidden struct {
}

func (o *ImportDevicesInBulkForbidden) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/import][%d] importDevicesInBulkForbidden ", 403)
}

func (o *ImportDevicesInBulkForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewImportDevicesInBulkNotFound creates a ImportDevicesInBulkNotFound with default headers values
func NewImportDevicesInBulkNotFound() *ImportDevicesInBulkNotFound {
	return &ImportDevicesInBulkNotFound{}
}

/*ImportDevicesInBulkNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type ImportDevicesInBulkNotFound struct {
}

func (o *ImportDevicesInBulkNotFound) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/import][%d] importDevicesInBulkNotFound ", 404)
}

func (o *ImportDevicesInBulkNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewImportDevicesInBulkConflict creates a ImportDevicesInBulkConflict with default headers values
func NewImportDevicesInBulkConflict() *ImportDevicesInBulkConflict {
	return &ImportDevicesInBulkConflict{}
}

/*ImportDevicesInBulkConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type ImportDevicesInBulkConflict struct {
}

func (o *ImportDevicesInBulkConflict) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/import][%d] importDevicesInBulkConflict ", 409)
}

func (o *ImportDevicesInBulkConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewImportDevicesInBulkUnsupportedMediaType creates a ImportDevicesInBulkUnsupportedMediaType with default headers values
func NewImportDevicesInBulkUnsupportedMediaType() *ImportDevicesInBulkUnsupportedMediaType {
	return &ImportDevicesInBulkUnsupportedMediaType{}
}

/*ImportDevicesInBulkUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type ImportDevicesInBulkUnsupportedMediaType struct {
}

func (o *ImportDevicesInBulkUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/import][%d] importDevicesInBulkUnsupportedMediaType ", 415)
}

func (o *ImportDevicesInBulkUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewImportDevicesInBulkInternalServerError creates a ImportDevicesInBulkInternalServerError with default headers values
func NewImportDevicesInBulkInternalServerError() *ImportDevicesInBulkInternalServerError {
	return &ImportDevicesInBulkInternalServerError{}
}

/*ImportDevicesInBulkInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type ImportDevicesInBulkInternalServerError struct {
}

func (o *ImportDevicesInBulkInternalServerError) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/import][%d] importDevicesInBulkInternalServerError ", 500)
}

func (o *ImportDevicesInBulkInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewImportDevicesInBulkNotImplemented creates a ImportDevicesInBulkNotImplemented with default headers values
func NewImportDevicesInBulkNotImplemented() *ImportDevicesInBulkNotImplemented {
	return &ImportDevicesInBulkNotImplemented{}
}

/*ImportDevicesInBulkNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type ImportDevicesInBulkNotImplemented struct {
}

func (o *ImportDevicesInBulkNotImplemented) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/import][%d] importDevicesInBulkNotImplemented ", 501)
}

func (o *ImportDevicesInBulkNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewImportDevicesInBulkServiceUnavailable creates a ImportDevicesInBulkServiceUnavailable with default headers values
func NewImportDevicesInBulkServiceUnavailable() *ImportDevicesInBulkServiceUnavailable {
	return &ImportDevicesInBulkServiceUnavailable{}
}

/*ImportDevicesInBulkServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type ImportDevicesInBulkServiceUnavailable struct {
}

func (o *ImportDevicesInBulkServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/import][%d] importDevicesInBulkServiceUnavailable ", 503)
}

func (o *ImportDevicesInBulkServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewImportDevicesInBulkGatewayTimeout creates a ImportDevicesInBulkGatewayTimeout with default headers values
func NewImportDevicesInBulkGatewayTimeout() *ImportDevicesInBulkGatewayTimeout {
	return &ImportDevicesInBulkGatewayTimeout{}
}

/*ImportDevicesInBulkGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type ImportDevicesInBulkGatewayTimeout struct {
}

func (o *ImportDevicesInBulkGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/import][%d] importDevicesInBulkGatewayTimeout ", 504)
}

func (o *ImportDevicesInBulkGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
