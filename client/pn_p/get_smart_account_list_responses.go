// Code generated by go-swagger; DO NOT EDIT.

package pn_p

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// GetSmartAccountListReader is a Reader for the GetSmartAccountList structure.
type GetSmartAccountListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSmartAccountListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetSmartAccountListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewGetSmartAccountListNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewGetSmartAccountListPartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetSmartAccountListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetSmartAccountListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetSmartAccountListForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetSmartAccountListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewGetSmartAccountListConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewGetSmartAccountListUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetSmartAccountListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewGetSmartAccountListNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetSmartAccountListServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetSmartAccountListGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetSmartAccountListOK creates a GetSmartAccountListOK with default headers values
func NewGetSmartAccountListOK() *GetSmartAccountListOK {
	return &GetSmartAccountListOK{}
}

/*GetSmartAccountListOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type GetSmartAccountListOK struct {
	Payload models.GetSmartAccountListResponse
}

func (o *GetSmartAccountListOK) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-settings/sacct][%d] getSmartAccountListOK  %+v", 200, o.Payload)
}

func (o *GetSmartAccountListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSmartAccountListNoContent creates a GetSmartAccountListNoContent with default headers values
func NewGetSmartAccountListNoContent() *GetSmartAccountListNoContent {
	return &GetSmartAccountListNoContent{}
}

/*GetSmartAccountListNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type GetSmartAccountListNoContent struct {
}

func (o *GetSmartAccountListNoContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-settings/sacct][%d] getSmartAccountListNoContent ", 204)
}

func (o *GetSmartAccountListNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSmartAccountListPartialContent creates a GetSmartAccountListPartialContent with default headers values
func NewGetSmartAccountListPartialContent() *GetSmartAccountListPartialContent {
	return &GetSmartAccountListPartialContent{}
}

/*GetSmartAccountListPartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type GetSmartAccountListPartialContent struct {
}

func (o *GetSmartAccountListPartialContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-settings/sacct][%d] getSmartAccountListPartialContent ", 206)
}

func (o *GetSmartAccountListPartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSmartAccountListBadRequest creates a GetSmartAccountListBadRequest with default headers values
func NewGetSmartAccountListBadRequest() *GetSmartAccountListBadRequest {
	return &GetSmartAccountListBadRequest{}
}

/*GetSmartAccountListBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type GetSmartAccountListBadRequest struct {
}

func (o *GetSmartAccountListBadRequest) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-settings/sacct][%d] getSmartAccountListBadRequest ", 400)
}

func (o *GetSmartAccountListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSmartAccountListUnauthorized creates a GetSmartAccountListUnauthorized with default headers values
func NewGetSmartAccountListUnauthorized() *GetSmartAccountListUnauthorized {
	return &GetSmartAccountListUnauthorized{}
}

/*GetSmartAccountListUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type GetSmartAccountListUnauthorized struct {
}

func (o *GetSmartAccountListUnauthorized) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-settings/sacct][%d] getSmartAccountListUnauthorized ", 401)
}

func (o *GetSmartAccountListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSmartAccountListForbidden creates a GetSmartAccountListForbidden with default headers values
func NewGetSmartAccountListForbidden() *GetSmartAccountListForbidden {
	return &GetSmartAccountListForbidden{}
}

/*GetSmartAccountListForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type GetSmartAccountListForbidden struct {
}

func (o *GetSmartAccountListForbidden) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-settings/sacct][%d] getSmartAccountListForbidden ", 403)
}

func (o *GetSmartAccountListForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSmartAccountListNotFound creates a GetSmartAccountListNotFound with default headers values
func NewGetSmartAccountListNotFound() *GetSmartAccountListNotFound {
	return &GetSmartAccountListNotFound{}
}

/*GetSmartAccountListNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type GetSmartAccountListNotFound struct {
}

func (o *GetSmartAccountListNotFound) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-settings/sacct][%d] getSmartAccountListNotFound ", 404)
}

func (o *GetSmartAccountListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSmartAccountListConflict creates a GetSmartAccountListConflict with default headers values
func NewGetSmartAccountListConflict() *GetSmartAccountListConflict {
	return &GetSmartAccountListConflict{}
}

/*GetSmartAccountListConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type GetSmartAccountListConflict struct {
}

func (o *GetSmartAccountListConflict) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-settings/sacct][%d] getSmartAccountListConflict ", 409)
}

func (o *GetSmartAccountListConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSmartAccountListUnsupportedMediaType creates a GetSmartAccountListUnsupportedMediaType with default headers values
func NewGetSmartAccountListUnsupportedMediaType() *GetSmartAccountListUnsupportedMediaType {
	return &GetSmartAccountListUnsupportedMediaType{}
}

/*GetSmartAccountListUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type GetSmartAccountListUnsupportedMediaType struct {
}

func (o *GetSmartAccountListUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-settings/sacct][%d] getSmartAccountListUnsupportedMediaType ", 415)
}

func (o *GetSmartAccountListUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSmartAccountListInternalServerError creates a GetSmartAccountListInternalServerError with default headers values
func NewGetSmartAccountListInternalServerError() *GetSmartAccountListInternalServerError {
	return &GetSmartAccountListInternalServerError{}
}

/*GetSmartAccountListInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type GetSmartAccountListInternalServerError struct {
}

func (o *GetSmartAccountListInternalServerError) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-settings/sacct][%d] getSmartAccountListInternalServerError ", 500)
}

func (o *GetSmartAccountListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSmartAccountListNotImplemented creates a GetSmartAccountListNotImplemented with default headers values
func NewGetSmartAccountListNotImplemented() *GetSmartAccountListNotImplemented {
	return &GetSmartAccountListNotImplemented{}
}

/*GetSmartAccountListNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type GetSmartAccountListNotImplemented struct {
}

func (o *GetSmartAccountListNotImplemented) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-settings/sacct][%d] getSmartAccountListNotImplemented ", 501)
}

func (o *GetSmartAccountListNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSmartAccountListServiceUnavailable creates a GetSmartAccountListServiceUnavailable with default headers values
func NewGetSmartAccountListServiceUnavailable() *GetSmartAccountListServiceUnavailable {
	return &GetSmartAccountListServiceUnavailable{}
}

/*GetSmartAccountListServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type GetSmartAccountListServiceUnavailable struct {
}

func (o *GetSmartAccountListServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-settings/sacct][%d] getSmartAccountListServiceUnavailable ", 503)
}

func (o *GetSmartAccountListServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSmartAccountListGatewayTimeout creates a GetSmartAccountListGatewayTimeout with default headers values
func NewGetSmartAccountListGatewayTimeout() *GetSmartAccountListGatewayTimeout {
	return &GetSmartAccountListGatewayTimeout{}
}

/*GetSmartAccountListGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type GetSmartAccountListGatewayTimeout struct {
}

func (o *GetSmartAccountListGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-settings/sacct][%d] getSmartAccountListGatewayTimeout ", 504)
}

func (o *GetSmartAccountListGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
