// Code generated by go-swagger; DO NOT EDIT.

package pn_p

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// ResetDeviceReader is a Reader for the ResetDevice structure.
type ResetDeviceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ResetDeviceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewResetDeviceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 201:
		result := NewResetDeviceCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 202:
		result := NewResetDeviceAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewResetDeviceNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewResetDevicePartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewResetDeviceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewResetDeviceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewResetDeviceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewResetDeviceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewResetDeviceConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewResetDeviceUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewResetDeviceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewResetDeviceNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewResetDeviceServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewResetDeviceGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewResetDeviceOK creates a ResetDeviceOK with default headers values
func NewResetDeviceOK() *ResetDeviceOK {
	return &ResetDeviceOK{}
}

/*ResetDeviceOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type ResetDeviceOK struct {
	Payload *models.ResetDeviceResponse
}

func (o *ResetDeviceOK) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/reset][%d] resetDeviceOK  %+v", 200, o.Payload)
}

func (o *ResetDeviceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResetDeviceResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewResetDeviceCreated creates a ResetDeviceCreated with default headers values
func NewResetDeviceCreated() *ResetDeviceCreated {
	return &ResetDeviceCreated{}
}

/*ResetDeviceCreated handles this case with default header values.

The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body.
*/
type ResetDeviceCreated struct {
}

func (o *ResetDeviceCreated) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/reset][%d] resetDeviceCreated ", 201)
}

func (o *ResetDeviceCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewResetDeviceAccepted creates a ResetDeviceAccepted with default headers values
func NewResetDeviceAccepted() *ResetDeviceAccepted {
	return &ResetDeviceAccepted{}
}

/*ResetDeviceAccepted handles this case with default header values.

The request was accepted for processing, but the processing has not been completed.
*/
type ResetDeviceAccepted struct {
}

func (o *ResetDeviceAccepted) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/reset][%d] resetDeviceAccepted ", 202)
}

func (o *ResetDeviceAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewResetDeviceNoContent creates a ResetDeviceNoContent with default headers values
func NewResetDeviceNoContent() *ResetDeviceNoContent {
	return &ResetDeviceNoContent{}
}

/*ResetDeviceNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type ResetDeviceNoContent struct {
}

func (o *ResetDeviceNoContent) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/reset][%d] resetDeviceNoContent ", 204)
}

func (o *ResetDeviceNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewResetDevicePartialContent creates a ResetDevicePartialContent with default headers values
func NewResetDevicePartialContent() *ResetDevicePartialContent {
	return &ResetDevicePartialContent{}
}

/*ResetDevicePartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type ResetDevicePartialContent struct {
}

func (o *ResetDevicePartialContent) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/reset][%d] resetDevicePartialContent ", 206)
}

func (o *ResetDevicePartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewResetDeviceBadRequest creates a ResetDeviceBadRequest with default headers values
func NewResetDeviceBadRequest() *ResetDeviceBadRequest {
	return &ResetDeviceBadRequest{}
}

/*ResetDeviceBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type ResetDeviceBadRequest struct {
}

func (o *ResetDeviceBadRequest) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/reset][%d] resetDeviceBadRequest ", 400)
}

func (o *ResetDeviceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewResetDeviceUnauthorized creates a ResetDeviceUnauthorized with default headers values
func NewResetDeviceUnauthorized() *ResetDeviceUnauthorized {
	return &ResetDeviceUnauthorized{}
}

/*ResetDeviceUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type ResetDeviceUnauthorized struct {
}

func (o *ResetDeviceUnauthorized) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/reset][%d] resetDeviceUnauthorized ", 401)
}

func (o *ResetDeviceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewResetDeviceForbidden creates a ResetDeviceForbidden with default headers values
func NewResetDeviceForbidden() *ResetDeviceForbidden {
	return &ResetDeviceForbidden{}
}

/*ResetDeviceForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type ResetDeviceForbidden struct {
}

func (o *ResetDeviceForbidden) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/reset][%d] resetDeviceForbidden ", 403)
}

func (o *ResetDeviceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewResetDeviceNotFound creates a ResetDeviceNotFound with default headers values
func NewResetDeviceNotFound() *ResetDeviceNotFound {
	return &ResetDeviceNotFound{}
}

/*ResetDeviceNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type ResetDeviceNotFound struct {
}

func (o *ResetDeviceNotFound) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/reset][%d] resetDeviceNotFound ", 404)
}

func (o *ResetDeviceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewResetDeviceConflict creates a ResetDeviceConflict with default headers values
func NewResetDeviceConflict() *ResetDeviceConflict {
	return &ResetDeviceConflict{}
}

/*ResetDeviceConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type ResetDeviceConflict struct {
}

func (o *ResetDeviceConflict) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/reset][%d] resetDeviceConflict ", 409)
}

func (o *ResetDeviceConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewResetDeviceUnsupportedMediaType creates a ResetDeviceUnsupportedMediaType with default headers values
func NewResetDeviceUnsupportedMediaType() *ResetDeviceUnsupportedMediaType {
	return &ResetDeviceUnsupportedMediaType{}
}

/*ResetDeviceUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type ResetDeviceUnsupportedMediaType struct {
}

func (o *ResetDeviceUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/reset][%d] resetDeviceUnsupportedMediaType ", 415)
}

func (o *ResetDeviceUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewResetDeviceInternalServerError creates a ResetDeviceInternalServerError with default headers values
func NewResetDeviceInternalServerError() *ResetDeviceInternalServerError {
	return &ResetDeviceInternalServerError{}
}

/*ResetDeviceInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type ResetDeviceInternalServerError struct {
}

func (o *ResetDeviceInternalServerError) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/reset][%d] resetDeviceInternalServerError ", 500)
}

func (o *ResetDeviceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewResetDeviceNotImplemented creates a ResetDeviceNotImplemented with default headers values
func NewResetDeviceNotImplemented() *ResetDeviceNotImplemented {
	return &ResetDeviceNotImplemented{}
}

/*ResetDeviceNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type ResetDeviceNotImplemented struct {
}

func (o *ResetDeviceNotImplemented) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/reset][%d] resetDeviceNotImplemented ", 501)
}

func (o *ResetDeviceNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewResetDeviceServiceUnavailable creates a ResetDeviceServiceUnavailable with default headers values
func NewResetDeviceServiceUnavailable() *ResetDeviceServiceUnavailable {
	return &ResetDeviceServiceUnavailable{}
}

/*ResetDeviceServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type ResetDeviceServiceUnavailable struct {
}

func (o *ResetDeviceServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/reset][%d] resetDeviceServiceUnavailable ", 503)
}

func (o *ResetDeviceServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewResetDeviceGatewayTimeout creates a ResetDeviceGatewayTimeout with default headers values
func NewResetDeviceGatewayTimeout() *ResetDeviceGatewayTimeout {
	return &ResetDeviceGatewayTimeout{}
}

/*ResetDeviceGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type ResetDeviceGatewayTimeout struct {
}

func (o *ResetDeviceGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/reset][%d] resetDeviceGatewayTimeout ", 504)
}

func (o *ResetDeviceGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
