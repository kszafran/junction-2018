// Code generated by go-swagger; DO NOT EDIT.

package pn_p

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// DeregisterVirtualAccountReader is a Reader for the DeregisterVirtualAccount structure.
type DeregisterVirtualAccountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeregisterVirtualAccountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeregisterVirtualAccountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewDeregisterVirtualAccountNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewDeregisterVirtualAccountPartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDeregisterVirtualAccountBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewDeregisterVirtualAccountUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewDeregisterVirtualAccountForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeregisterVirtualAccountNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewDeregisterVirtualAccountConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewDeregisterVirtualAccountUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewDeregisterVirtualAccountInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewDeregisterVirtualAccountNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewDeregisterVirtualAccountServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewDeregisterVirtualAccountGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeregisterVirtualAccountOK creates a DeregisterVirtualAccountOK with default headers values
func NewDeregisterVirtualAccountOK() *DeregisterVirtualAccountOK {
	return &DeregisterVirtualAccountOK{}
}

/*DeregisterVirtualAccountOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type DeregisterVirtualAccountOK struct {
	Payload *models.DeregisterVirtualAccountResponse
}

func (o *DeregisterVirtualAccountOK) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/onboarding/pnp-settings/vacct][%d] deregisterVirtualAccountOK  %+v", 200, o.Payload)
}

func (o *DeregisterVirtualAccountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeregisterVirtualAccountResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeregisterVirtualAccountNoContent creates a DeregisterVirtualAccountNoContent with default headers values
func NewDeregisterVirtualAccountNoContent() *DeregisterVirtualAccountNoContent {
	return &DeregisterVirtualAccountNoContent{}
}

/*DeregisterVirtualAccountNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type DeregisterVirtualAccountNoContent struct {
}

func (o *DeregisterVirtualAccountNoContent) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/onboarding/pnp-settings/vacct][%d] deregisterVirtualAccountNoContent ", 204)
}

func (o *DeregisterVirtualAccountNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeregisterVirtualAccountPartialContent creates a DeregisterVirtualAccountPartialContent with default headers values
func NewDeregisterVirtualAccountPartialContent() *DeregisterVirtualAccountPartialContent {
	return &DeregisterVirtualAccountPartialContent{}
}

/*DeregisterVirtualAccountPartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type DeregisterVirtualAccountPartialContent struct {
}

func (o *DeregisterVirtualAccountPartialContent) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/onboarding/pnp-settings/vacct][%d] deregisterVirtualAccountPartialContent ", 206)
}

func (o *DeregisterVirtualAccountPartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeregisterVirtualAccountBadRequest creates a DeregisterVirtualAccountBadRequest with default headers values
func NewDeregisterVirtualAccountBadRequest() *DeregisterVirtualAccountBadRequest {
	return &DeregisterVirtualAccountBadRequest{}
}

/*DeregisterVirtualAccountBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type DeregisterVirtualAccountBadRequest struct {
}

func (o *DeregisterVirtualAccountBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/onboarding/pnp-settings/vacct][%d] deregisterVirtualAccountBadRequest ", 400)
}

func (o *DeregisterVirtualAccountBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeregisterVirtualAccountUnauthorized creates a DeregisterVirtualAccountUnauthorized with default headers values
func NewDeregisterVirtualAccountUnauthorized() *DeregisterVirtualAccountUnauthorized {
	return &DeregisterVirtualAccountUnauthorized{}
}

/*DeregisterVirtualAccountUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type DeregisterVirtualAccountUnauthorized struct {
}

func (o *DeregisterVirtualAccountUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/onboarding/pnp-settings/vacct][%d] deregisterVirtualAccountUnauthorized ", 401)
}

func (o *DeregisterVirtualAccountUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeregisterVirtualAccountForbidden creates a DeregisterVirtualAccountForbidden with default headers values
func NewDeregisterVirtualAccountForbidden() *DeregisterVirtualAccountForbidden {
	return &DeregisterVirtualAccountForbidden{}
}

/*DeregisterVirtualAccountForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type DeregisterVirtualAccountForbidden struct {
}

func (o *DeregisterVirtualAccountForbidden) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/onboarding/pnp-settings/vacct][%d] deregisterVirtualAccountForbidden ", 403)
}

func (o *DeregisterVirtualAccountForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeregisterVirtualAccountNotFound creates a DeregisterVirtualAccountNotFound with default headers values
func NewDeregisterVirtualAccountNotFound() *DeregisterVirtualAccountNotFound {
	return &DeregisterVirtualAccountNotFound{}
}

/*DeregisterVirtualAccountNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type DeregisterVirtualAccountNotFound struct {
}

func (o *DeregisterVirtualAccountNotFound) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/onboarding/pnp-settings/vacct][%d] deregisterVirtualAccountNotFound ", 404)
}

func (o *DeregisterVirtualAccountNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeregisterVirtualAccountConflict creates a DeregisterVirtualAccountConflict with default headers values
func NewDeregisterVirtualAccountConflict() *DeregisterVirtualAccountConflict {
	return &DeregisterVirtualAccountConflict{}
}

/*DeregisterVirtualAccountConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type DeregisterVirtualAccountConflict struct {
}

func (o *DeregisterVirtualAccountConflict) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/onboarding/pnp-settings/vacct][%d] deregisterVirtualAccountConflict ", 409)
}

func (o *DeregisterVirtualAccountConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeregisterVirtualAccountUnsupportedMediaType creates a DeregisterVirtualAccountUnsupportedMediaType with default headers values
func NewDeregisterVirtualAccountUnsupportedMediaType() *DeregisterVirtualAccountUnsupportedMediaType {
	return &DeregisterVirtualAccountUnsupportedMediaType{}
}

/*DeregisterVirtualAccountUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type DeregisterVirtualAccountUnsupportedMediaType struct {
}

func (o *DeregisterVirtualAccountUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/onboarding/pnp-settings/vacct][%d] deregisterVirtualAccountUnsupportedMediaType ", 415)
}

func (o *DeregisterVirtualAccountUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeregisterVirtualAccountInternalServerError creates a DeregisterVirtualAccountInternalServerError with default headers values
func NewDeregisterVirtualAccountInternalServerError() *DeregisterVirtualAccountInternalServerError {
	return &DeregisterVirtualAccountInternalServerError{}
}

/*DeregisterVirtualAccountInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type DeregisterVirtualAccountInternalServerError struct {
}

func (o *DeregisterVirtualAccountInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/onboarding/pnp-settings/vacct][%d] deregisterVirtualAccountInternalServerError ", 500)
}

func (o *DeregisterVirtualAccountInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeregisterVirtualAccountNotImplemented creates a DeregisterVirtualAccountNotImplemented with default headers values
func NewDeregisterVirtualAccountNotImplemented() *DeregisterVirtualAccountNotImplemented {
	return &DeregisterVirtualAccountNotImplemented{}
}

/*DeregisterVirtualAccountNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type DeregisterVirtualAccountNotImplemented struct {
}

func (o *DeregisterVirtualAccountNotImplemented) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/onboarding/pnp-settings/vacct][%d] deregisterVirtualAccountNotImplemented ", 501)
}

func (o *DeregisterVirtualAccountNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeregisterVirtualAccountServiceUnavailable creates a DeregisterVirtualAccountServiceUnavailable with default headers values
func NewDeregisterVirtualAccountServiceUnavailable() *DeregisterVirtualAccountServiceUnavailable {
	return &DeregisterVirtualAccountServiceUnavailable{}
}

/*DeregisterVirtualAccountServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type DeregisterVirtualAccountServiceUnavailable struct {
}

func (o *DeregisterVirtualAccountServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/onboarding/pnp-settings/vacct][%d] deregisterVirtualAccountServiceUnavailable ", 503)
}

func (o *DeregisterVirtualAccountServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeregisterVirtualAccountGatewayTimeout creates a DeregisterVirtualAccountGatewayTimeout with default headers values
func NewDeregisterVirtualAccountGatewayTimeout() *DeregisterVirtualAccountGatewayTimeout {
	return &DeregisterVirtualAccountGatewayTimeout{}
}

/*DeregisterVirtualAccountGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type DeregisterVirtualAccountGatewayTimeout struct {
}

func (o *DeregisterVirtualAccountGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/onboarding/pnp-settings/vacct][%d] deregisterVirtualAccountGatewayTimeout ", 504)
}

func (o *DeregisterVirtualAccountGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
