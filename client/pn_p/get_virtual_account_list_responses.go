// Code generated by go-swagger; DO NOT EDIT.

package pn_p

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// GetVirtualAccountListReader is a Reader for the GetVirtualAccountList structure.
type GetVirtualAccountListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVirtualAccountListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetVirtualAccountListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewGetVirtualAccountListNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewGetVirtualAccountListPartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetVirtualAccountListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetVirtualAccountListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetVirtualAccountListForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetVirtualAccountListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewGetVirtualAccountListConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewGetVirtualAccountListUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetVirtualAccountListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewGetVirtualAccountListNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetVirtualAccountListServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetVirtualAccountListGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetVirtualAccountListOK creates a GetVirtualAccountListOK with default headers values
func NewGetVirtualAccountListOK() *GetVirtualAccountListOK {
	return &GetVirtualAccountListOK{}
}

/*GetVirtualAccountListOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type GetVirtualAccountListOK struct {
	Payload models.GetVirtualAccountListResponse
}

func (o *GetVirtualAccountListOK) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-settings/sacct/{domain}/vacct][%d] getVirtualAccountListOK  %+v", 200, o.Payload)
}

func (o *GetVirtualAccountListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVirtualAccountListNoContent creates a GetVirtualAccountListNoContent with default headers values
func NewGetVirtualAccountListNoContent() *GetVirtualAccountListNoContent {
	return &GetVirtualAccountListNoContent{}
}

/*GetVirtualAccountListNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type GetVirtualAccountListNoContent struct {
}

func (o *GetVirtualAccountListNoContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-settings/sacct/{domain}/vacct][%d] getVirtualAccountListNoContent ", 204)
}

func (o *GetVirtualAccountListNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetVirtualAccountListPartialContent creates a GetVirtualAccountListPartialContent with default headers values
func NewGetVirtualAccountListPartialContent() *GetVirtualAccountListPartialContent {
	return &GetVirtualAccountListPartialContent{}
}

/*GetVirtualAccountListPartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type GetVirtualAccountListPartialContent struct {
}

func (o *GetVirtualAccountListPartialContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-settings/sacct/{domain}/vacct][%d] getVirtualAccountListPartialContent ", 206)
}

func (o *GetVirtualAccountListPartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetVirtualAccountListBadRequest creates a GetVirtualAccountListBadRequest with default headers values
func NewGetVirtualAccountListBadRequest() *GetVirtualAccountListBadRequest {
	return &GetVirtualAccountListBadRequest{}
}

/*GetVirtualAccountListBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type GetVirtualAccountListBadRequest struct {
}

func (o *GetVirtualAccountListBadRequest) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-settings/sacct/{domain}/vacct][%d] getVirtualAccountListBadRequest ", 400)
}

func (o *GetVirtualAccountListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetVirtualAccountListUnauthorized creates a GetVirtualAccountListUnauthorized with default headers values
func NewGetVirtualAccountListUnauthorized() *GetVirtualAccountListUnauthorized {
	return &GetVirtualAccountListUnauthorized{}
}

/*GetVirtualAccountListUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type GetVirtualAccountListUnauthorized struct {
}

func (o *GetVirtualAccountListUnauthorized) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-settings/sacct/{domain}/vacct][%d] getVirtualAccountListUnauthorized ", 401)
}

func (o *GetVirtualAccountListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetVirtualAccountListForbidden creates a GetVirtualAccountListForbidden with default headers values
func NewGetVirtualAccountListForbidden() *GetVirtualAccountListForbidden {
	return &GetVirtualAccountListForbidden{}
}

/*GetVirtualAccountListForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type GetVirtualAccountListForbidden struct {
}

func (o *GetVirtualAccountListForbidden) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-settings/sacct/{domain}/vacct][%d] getVirtualAccountListForbidden ", 403)
}

func (o *GetVirtualAccountListForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetVirtualAccountListNotFound creates a GetVirtualAccountListNotFound with default headers values
func NewGetVirtualAccountListNotFound() *GetVirtualAccountListNotFound {
	return &GetVirtualAccountListNotFound{}
}

/*GetVirtualAccountListNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type GetVirtualAccountListNotFound struct {
}

func (o *GetVirtualAccountListNotFound) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-settings/sacct/{domain}/vacct][%d] getVirtualAccountListNotFound ", 404)
}

func (o *GetVirtualAccountListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetVirtualAccountListConflict creates a GetVirtualAccountListConflict with default headers values
func NewGetVirtualAccountListConflict() *GetVirtualAccountListConflict {
	return &GetVirtualAccountListConflict{}
}

/*GetVirtualAccountListConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type GetVirtualAccountListConflict struct {
}

func (o *GetVirtualAccountListConflict) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-settings/sacct/{domain}/vacct][%d] getVirtualAccountListConflict ", 409)
}

func (o *GetVirtualAccountListConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetVirtualAccountListUnsupportedMediaType creates a GetVirtualAccountListUnsupportedMediaType with default headers values
func NewGetVirtualAccountListUnsupportedMediaType() *GetVirtualAccountListUnsupportedMediaType {
	return &GetVirtualAccountListUnsupportedMediaType{}
}

/*GetVirtualAccountListUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type GetVirtualAccountListUnsupportedMediaType struct {
}

func (o *GetVirtualAccountListUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-settings/sacct/{domain}/vacct][%d] getVirtualAccountListUnsupportedMediaType ", 415)
}

func (o *GetVirtualAccountListUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetVirtualAccountListInternalServerError creates a GetVirtualAccountListInternalServerError with default headers values
func NewGetVirtualAccountListInternalServerError() *GetVirtualAccountListInternalServerError {
	return &GetVirtualAccountListInternalServerError{}
}

/*GetVirtualAccountListInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type GetVirtualAccountListInternalServerError struct {
}

func (o *GetVirtualAccountListInternalServerError) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-settings/sacct/{domain}/vacct][%d] getVirtualAccountListInternalServerError ", 500)
}

func (o *GetVirtualAccountListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetVirtualAccountListNotImplemented creates a GetVirtualAccountListNotImplemented with default headers values
func NewGetVirtualAccountListNotImplemented() *GetVirtualAccountListNotImplemented {
	return &GetVirtualAccountListNotImplemented{}
}

/*GetVirtualAccountListNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type GetVirtualAccountListNotImplemented struct {
}

func (o *GetVirtualAccountListNotImplemented) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-settings/sacct/{domain}/vacct][%d] getVirtualAccountListNotImplemented ", 501)
}

func (o *GetVirtualAccountListNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetVirtualAccountListServiceUnavailable creates a GetVirtualAccountListServiceUnavailable with default headers values
func NewGetVirtualAccountListServiceUnavailable() *GetVirtualAccountListServiceUnavailable {
	return &GetVirtualAccountListServiceUnavailable{}
}

/*GetVirtualAccountListServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type GetVirtualAccountListServiceUnavailable struct {
}

func (o *GetVirtualAccountListServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-settings/sacct/{domain}/vacct][%d] getVirtualAccountListServiceUnavailable ", 503)
}

func (o *GetVirtualAccountListServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetVirtualAccountListGatewayTimeout creates a GetVirtualAccountListGatewayTimeout with default headers values
func NewGetVirtualAccountListGatewayTimeout() *GetVirtualAccountListGatewayTimeout {
	return &GetVirtualAccountListGatewayTimeout{}
}

/*GetVirtualAccountListGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type GetVirtualAccountListGatewayTimeout struct {
}

func (o *GetVirtualAccountListGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-settings/sacct/{domain}/vacct][%d] getVirtualAccountListGatewayTimeout ", 504)
}

func (o *GetVirtualAccountListGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
