// Code generated by go-swagger; DO NOT EDIT.

package pn_p

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// GetSyncResultForVirtualAccountReader is a Reader for the GetSyncResultForVirtualAccount structure.
type GetSyncResultForVirtualAccountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSyncResultForVirtualAccountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetSyncResultForVirtualAccountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewGetSyncResultForVirtualAccountNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewGetSyncResultForVirtualAccountPartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetSyncResultForVirtualAccountBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetSyncResultForVirtualAccountUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetSyncResultForVirtualAccountForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetSyncResultForVirtualAccountNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewGetSyncResultForVirtualAccountConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewGetSyncResultForVirtualAccountUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetSyncResultForVirtualAccountInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewGetSyncResultForVirtualAccountNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetSyncResultForVirtualAccountServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetSyncResultForVirtualAccountGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetSyncResultForVirtualAccountOK creates a GetSyncResultForVirtualAccountOK with default headers values
func NewGetSyncResultForVirtualAccountOK() *GetSyncResultForVirtualAccountOK {
	return &GetSyncResultForVirtualAccountOK{}
}

/*GetSyncResultForVirtualAccountOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type GetSyncResultForVirtualAccountOK struct {
	Payload *models.GetSyncResultForVirtualAccountResponse
}

func (o *GetSyncResultForVirtualAccountOK) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device/sacct/{domain}/vacct/{name}/sync-result][%d] getSyncResultForVirtualAccountOK  %+v", 200, o.Payload)
}

func (o *GetSyncResultForVirtualAccountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetSyncResultForVirtualAccountResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSyncResultForVirtualAccountNoContent creates a GetSyncResultForVirtualAccountNoContent with default headers values
func NewGetSyncResultForVirtualAccountNoContent() *GetSyncResultForVirtualAccountNoContent {
	return &GetSyncResultForVirtualAccountNoContent{}
}

/*GetSyncResultForVirtualAccountNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type GetSyncResultForVirtualAccountNoContent struct {
}

func (o *GetSyncResultForVirtualAccountNoContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device/sacct/{domain}/vacct/{name}/sync-result][%d] getSyncResultForVirtualAccountNoContent ", 204)
}

func (o *GetSyncResultForVirtualAccountNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSyncResultForVirtualAccountPartialContent creates a GetSyncResultForVirtualAccountPartialContent with default headers values
func NewGetSyncResultForVirtualAccountPartialContent() *GetSyncResultForVirtualAccountPartialContent {
	return &GetSyncResultForVirtualAccountPartialContent{}
}

/*GetSyncResultForVirtualAccountPartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type GetSyncResultForVirtualAccountPartialContent struct {
}

func (o *GetSyncResultForVirtualAccountPartialContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device/sacct/{domain}/vacct/{name}/sync-result][%d] getSyncResultForVirtualAccountPartialContent ", 206)
}

func (o *GetSyncResultForVirtualAccountPartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSyncResultForVirtualAccountBadRequest creates a GetSyncResultForVirtualAccountBadRequest with default headers values
func NewGetSyncResultForVirtualAccountBadRequest() *GetSyncResultForVirtualAccountBadRequest {
	return &GetSyncResultForVirtualAccountBadRequest{}
}

/*GetSyncResultForVirtualAccountBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type GetSyncResultForVirtualAccountBadRequest struct {
}

func (o *GetSyncResultForVirtualAccountBadRequest) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device/sacct/{domain}/vacct/{name}/sync-result][%d] getSyncResultForVirtualAccountBadRequest ", 400)
}

func (o *GetSyncResultForVirtualAccountBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSyncResultForVirtualAccountUnauthorized creates a GetSyncResultForVirtualAccountUnauthorized with default headers values
func NewGetSyncResultForVirtualAccountUnauthorized() *GetSyncResultForVirtualAccountUnauthorized {
	return &GetSyncResultForVirtualAccountUnauthorized{}
}

/*GetSyncResultForVirtualAccountUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type GetSyncResultForVirtualAccountUnauthorized struct {
}

func (o *GetSyncResultForVirtualAccountUnauthorized) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device/sacct/{domain}/vacct/{name}/sync-result][%d] getSyncResultForVirtualAccountUnauthorized ", 401)
}

func (o *GetSyncResultForVirtualAccountUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSyncResultForVirtualAccountForbidden creates a GetSyncResultForVirtualAccountForbidden with default headers values
func NewGetSyncResultForVirtualAccountForbidden() *GetSyncResultForVirtualAccountForbidden {
	return &GetSyncResultForVirtualAccountForbidden{}
}

/*GetSyncResultForVirtualAccountForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type GetSyncResultForVirtualAccountForbidden struct {
}

func (o *GetSyncResultForVirtualAccountForbidden) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device/sacct/{domain}/vacct/{name}/sync-result][%d] getSyncResultForVirtualAccountForbidden ", 403)
}

func (o *GetSyncResultForVirtualAccountForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSyncResultForVirtualAccountNotFound creates a GetSyncResultForVirtualAccountNotFound with default headers values
func NewGetSyncResultForVirtualAccountNotFound() *GetSyncResultForVirtualAccountNotFound {
	return &GetSyncResultForVirtualAccountNotFound{}
}

/*GetSyncResultForVirtualAccountNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type GetSyncResultForVirtualAccountNotFound struct {
}

func (o *GetSyncResultForVirtualAccountNotFound) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device/sacct/{domain}/vacct/{name}/sync-result][%d] getSyncResultForVirtualAccountNotFound ", 404)
}

func (o *GetSyncResultForVirtualAccountNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSyncResultForVirtualAccountConflict creates a GetSyncResultForVirtualAccountConflict with default headers values
func NewGetSyncResultForVirtualAccountConflict() *GetSyncResultForVirtualAccountConflict {
	return &GetSyncResultForVirtualAccountConflict{}
}

/*GetSyncResultForVirtualAccountConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type GetSyncResultForVirtualAccountConflict struct {
}

func (o *GetSyncResultForVirtualAccountConflict) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device/sacct/{domain}/vacct/{name}/sync-result][%d] getSyncResultForVirtualAccountConflict ", 409)
}

func (o *GetSyncResultForVirtualAccountConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSyncResultForVirtualAccountUnsupportedMediaType creates a GetSyncResultForVirtualAccountUnsupportedMediaType with default headers values
func NewGetSyncResultForVirtualAccountUnsupportedMediaType() *GetSyncResultForVirtualAccountUnsupportedMediaType {
	return &GetSyncResultForVirtualAccountUnsupportedMediaType{}
}

/*GetSyncResultForVirtualAccountUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type GetSyncResultForVirtualAccountUnsupportedMediaType struct {
}

func (o *GetSyncResultForVirtualAccountUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device/sacct/{domain}/vacct/{name}/sync-result][%d] getSyncResultForVirtualAccountUnsupportedMediaType ", 415)
}

func (o *GetSyncResultForVirtualAccountUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSyncResultForVirtualAccountInternalServerError creates a GetSyncResultForVirtualAccountInternalServerError with default headers values
func NewGetSyncResultForVirtualAccountInternalServerError() *GetSyncResultForVirtualAccountInternalServerError {
	return &GetSyncResultForVirtualAccountInternalServerError{}
}

/*GetSyncResultForVirtualAccountInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type GetSyncResultForVirtualAccountInternalServerError struct {
}

func (o *GetSyncResultForVirtualAccountInternalServerError) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device/sacct/{domain}/vacct/{name}/sync-result][%d] getSyncResultForVirtualAccountInternalServerError ", 500)
}

func (o *GetSyncResultForVirtualAccountInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSyncResultForVirtualAccountNotImplemented creates a GetSyncResultForVirtualAccountNotImplemented with default headers values
func NewGetSyncResultForVirtualAccountNotImplemented() *GetSyncResultForVirtualAccountNotImplemented {
	return &GetSyncResultForVirtualAccountNotImplemented{}
}

/*GetSyncResultForVirtualAccountNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type GetSyncResultForVirtualAccountNotImplemented struct {
}

func (o *GetSyncResultForVirtualAccountNotImplemented) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device/sacct/{domain}/vacct/{name}/sync-result][%d] getSyncResultForVirtualAccountNotImplemented ", 501)
}

func (o *GetSyncResultForVirtualAccountNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSyncResultForVirtualAccountServiceUnavailable creates a GetSyncResultForVirtualAccountServiceUnavailable with default headers values
func NewGetSyncResultForVirtualAccountServiceUnavailable() *GetSyncResultForVirtualAccountServiceUnavailable {
	return &GetSyncResultForVirtualAccountServiceUnavailable{}
}

/*GetSyncResultForVirtualAccountServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type GetSyncResultForVirtualAccountServiceUnavailable struct {
}

func (o *GetSyncResultForVirtualAccountServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device/sacct/{domain}/vacct/{name}/sync-result][%d] getSyncResultForVirtualAccountServiceUnavailable ", 503)
}

func (o *GetSyncResultForVirtualAccountServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSyncResultForVirtualAccountGatewayTimeout creates a GetSyncResultForVirtualAccountGatewayTimeout with default headers values
func NewGetSyncResultForVirtualAccountGatewayTimeout() *GetSyncResultForVirtualAccountGatewayTimeout {
	return &GetSyncResultForVirtualAccountGatewayTimeout{}
}

/*GetSyncResultForVirtualAccountGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type GetSyncResultForVirtualAccountGatewayTimeout struct {
}

func (o *GetSyncResultForVirtualAccountGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-device/sacct/{domain}/vacct/{name}/sync-result][%d] getSyncResultForVirtualAccountGatewayTimeout ", 504)
}

func (o *GetSyncResultForVirtualAccountGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
