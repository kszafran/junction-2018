// Code generated by go-swagger; DO NOT EDIT.

package pn_p

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// DeleteDeviceByIDFromPnPReader is a Reader for the DeleteDeviceByIDFromPnP structure.
type DeleteDeviceByIDFromPnPReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteDeviceByIDFromPnPReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeleteDeviceByIDFromPnPOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewDeleteDeviceByIDFromPnPNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewDeleteDeviceByIDFromPnPPartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDeleteDeviceByIDFromPnPBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewDeleteDeviceByIDFromPnPUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewDeleteDeviceByIDFromPnPForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteDeviceByIDFromPnPNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewDeleteDeviceByIDFromPnPConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewDeleteDeviceByIDFromPnPUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewDeleteDeviceByIDFromPnPInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewDeleteDeviceByIDFromPnPNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewDeleteDeviceByIDFromPnPServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewDeleteDeviceByIDFromPnPGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteDeviceByIDFromPnPOK creates a DeleteDeviceByIDFromPnPOK with default headers values
func NewDeleteDeviceByIDFromPnPOK() *DeleteDeviceByIDFromPnPOK {
	return &DeleteDeviceByIDFromPnPOK{}
}

/*DeleteDeviceByIDFromPnPOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type DeleteDeviceByIDFromPnPOK struct {
	Payload *models.DeleteDeviceByIDFromPnPResponse
}

func (o *DeleteDeviceByIDFromPnPOK) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/onboarding/pnp-device/{id}][%d] deleteDeviceByIdFromPnPOK  %+v", 200, o.Payload)
}

func (o *DeleteDeviceByIDFromPnPOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeleteDeviceByIDFromPnPResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDeviceByIDFromPnPNoContent creates a DeleteDeviceByIDFromPnPNoContent with default headers values
func NewDeleteDeviceByIDFromPnPNoContent() *DeleteDeviceByIDFromPnPNoContent {
	return &DeleteDeviceByIDFromPnPNoContent{}
}

/*DeleteDeviceByIDFromPnPNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type DeleteDeviceByIDFromPnPNoContent struct {
}

func (o *DeleteDeviceByIDFromPnPNoContent) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/onboarding/pnp-device/{id}][%d] deleteDeviceByIdFromPnPNoContent ", 204)
}

func (o *DeleteDeviceByIDFromPnPNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDeviceByIDFromPnPPartialContent creates a DeleteDeviceByIDFromPnPPartialContent with default headers values
func NewDeleteDeviceByIDFromPnPPartialContent() *DeleteDeviceByIDFromPnPPartialContent {
	return &DeleteDeviceByIDFromPnPPartialContent{}
}

/*DeleteDeviceByIDFromPnPPartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type DeleteDeviceByIDFromPnPPartialContent struct {
}

func (o *DeleteDeviceByIDFromPnPPartialContent) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/onboarding/pnp-device/{id}][%d] deleteDeviceByIdFromPnPPartialContent ", 206)
}

func (o *DeleteDeviceByIDFromPnPPartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDeviceByIDFromPnPBadRequest creates a DeleteDeviceByIDFromPnPBadRequest with default headers values
func NewDeleteDeviceByIDFromPnPBadRequest() *DeleteDeviceByIDFromPnPBadRequest {
	return &DeleteDeviceByIDFromPnPBadRequest{}
}

/*DeleteDeviceByIDFromPnPBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type DeleteDeviceByIDFromPnPBadRequest struct {
}

func (o *DeleteDeviceByIDFromPnPBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/onboarding/pnp-device/{id}][%d] deleteDeviceByIdFromPnPBadRequest ", 400)
}

func (o *DeleteDeviceByIDFromPnPBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDeviceByIDFromPnPUnauthorized creates a DeleteDeviceByIDFromPnPUnauthorized with default headers values
func NewDeleteDeviceByIDFromPnPUnauthorized() *DeleteDeviceByIDFromPnPUnauthorized {
	return &DeleteDeviceByIDFromPnPUnauthorized{}
}

/*DeleteDeviceByIDFromPnPUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type DeleteDeviceByIDFromPnPUnauthorized struct {
}

func (o *DeleteDeviceByIDFromPnPUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/onboarding/pnp-device/{id}][%d] deleteDeviceByIdFromPnPUnauthorized ", 401)
}

func (o *DeleteDeviceByIDFromPnPUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDeviceByIDFromPnPForbidden creates a DeleteDeviceByIDFromPnPForbidden with default headers values
func NewDeleteDeviceByIDFromPnPForbidden() *DeleteDeviceByIDFromPnPForbidden {
	return &DeleteDeviceByIDFromPnPForbidden{}
}

/*DeleteDeviceByIDFromPnPForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type DeleteDeviceByIDFromPnPForbidden struct {
}

func (o *DeleteDeviceByIDFromPnPForbidden) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/onboarding/pnp-device/{id}][%d] deleteDeviceByIdFromPnPForbidden ", 403)
}

func (o *DeleteDeviceByIDFromPnPForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDeviceByIDFromPnPNotFound creates a DeleteDeviceByIDFromPnPNotFound with default headers values
func NewDeleteDeviceByIDFromPnPNotFound() *DeleteDeviceByIDFromPnPNotFound {
	return &DeleteDeviceByIDFromPnPNotFound{}
}

/*DeleteDeviceByIDFromPnPNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type DeleteDeviceByIDFromPnPNotFound struct {
}

func (o *DeleteDeviceByIDFromPnPNotFound) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/onboarding/pnp-device/{id}][%d] deleteDeviceByIdFromPnPNotFound ", 404)
}

func (o *DeleteDeviceByIDFromPnPNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDeviceByIDFromPnPConflict creates a DeleteDeviceByIDFromPnPConflict with default headers values
func NewDeleteDeviceByIDFromPnPConflict() *DeleteDeviceByIDFromPnPConflict {
	return &DeleteDeviceByIDFromPnPConflict{}
}

/*DeleteDeviceByIDFromPnPConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type DeleteDeviceByIDFromPnPConflict struct {
}

func (o *DeleteDeviceByIDFromPnPConflict) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/onboarding/pnp-device/{id}][%d] deleteDeviceByIdFromPnPConflict ", 409)
}

func (o *DeleteDeviceByIDFromPnPConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDeviceByIDFromPnPUnsupportedMediaType creates a DeleteDeviceByIDFromPnPUnsupportedMediaType with default headers values
func NewDeleteDeviceByIDFromPnPUnsupportedMediaType() *DeleteDeviceByIDFromPnPUnsupportedMediaType {
	return &DeleteDeviceByIDFromPnPUnsupportedMediaType{}
}

/*DeleteDeviceByIDFromPnPUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type DeleteDeviceByIDFromPnPUnsupportedMediaType struct {
}

func (o *DeleteDeviceByIDFromPnPUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/onboarding/pnp-device/{id}][%d] deleteDeviceByIdFromPnPUnsupportedMediaType ", 415)
}

func (o *DeleteDeviceByIDFromPnPUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDeviceByIDFromPnPInternalServerError creates a DeleteDeviceByIDFromPnPInternalServerError with default headers values
func NewDeleteDeviceByIDFromPnPInternalServerError() *DeleteDeviceByIDFromPnPInternalServerError {
	return &DeleteDeviceByIDFromPnPInternalServerError{}
}

/*DeleteDeviceByIDFromPnPInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type DeleteDeviceByIDFromPnPInternalServerError struct {
}

func (o *DeleteDeviceByIDFromPnPInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/onboarding/pnp-device/{id}][%d] deleteDeviceByIdFromPnPInternalServerError ", 500)
}

func (o *DeleteDeviceByIDFromPnPInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDeviceByIDFromPnPNotImplemented creates a DeleteDeviceByIDFromPnPNotImplemented with default headers values
func NewDeleteDeviceByIDFromPnPNotImplemented() *DeleteDeviceByIDFromPnPNotImplemented {
	return &DeleteDeviceByIDFromPnPNotImplemented{}
}

/*DeleteDeviceByIDFromPnPNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type DeleteDeviceByIDFromPnPNotImplemented struct {
}

func (o *DeleteDeviceByIDFromPnPNotImplemented) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/onboarding/pnp-device/{id}][%d] deleteDeviceByIdFromPnPNotImplemented ", 501)
}

func (o *DeleteDeviceByIDFromPnPNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDeviceByIDFromPnPServiceUnavailable creates a DeleteDeviceByIDFromPnPServiceUnavailable with default headers values
func NewDeleteDeviceByIDFromPnPServiceUnavailable() *DeleteDeviceByIDFromPnPServiceUnavailable {
	return &DeleteDeviceByIDFromPnPServiceUnavailable{}
}

/*DeleteDeviceByIDFromPnPServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type DeleteDeviceByIDFromPnPServiceUnavailable struct {
}

func (o *DeleteDeviceByIDFromPnPServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/onboarding/pnp-device/{id}][%d] deleteDeviceByIdFromPnPServiceUnavailable ", 503)
}

func (o *DeleteDeviceByIDFromPnPServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDeviceByIDFromPnPGatewayTimeout creates a DeleteDeviceByIDFromPnPGatewayTimeout with default headers values
func NewDeleteDeviceByIDFromPnPGatewayTimeout() *DeleteDeviceByIDFromPnPGatewayTimeout {
	return &DeleteDeviceByIDFromPnPGatewayTimeout{}
}

/*DeleteDeviceByIDFromPnPGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type DeleteDeviceByIDFromPnPGatewayTimeout struct {
}

func (o *DeleteDeviceByIDFromPnPGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/onboarding/pnp-device/{id}][%d] deleteDeviceByIdFromPnPGatewayTimeout ", 504)
}

func (o *DeleteDeviceByIDFromPnPGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
