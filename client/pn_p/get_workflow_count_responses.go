// Code generated by go-swagger; DO NOT EDIT.

package pn_p

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// GetWorkflowCountReader is a Reader for the GetWorkflowCount structure.
type GetWorkflowCountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetWorkflowCountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetWorkflowCountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewGetWorkflowCountNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewGetWorkflowCountPartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetWorkflowCountBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetWorkflowCountUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetWorkflowCountForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetWorkflowCountNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewGetWorkflowCountConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewGetWorkflowCountUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetWorkflowCountInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewGetWorkflowCountNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetWorkflowCountServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetWorkflowCountGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetWorkflowCountOK creates a GetWorkflowCountOK with default headers values
func NewGetWorkflowCountOK() *GetWorkflowCountOK {
	return &GetWorkflowCountOK{}
}

/*GetWorkflowCountOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type GetWorkflowCountOK struct {
	Payload *models.GetWorkflowCountResponse
}

func (o *GetWorkflowCountOK) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-workflow/count][%d] getWorkflowCountOK  %+v", 200, o.Payload)
}

func (o *GetWorkflowCountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetWorkflowCountResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkflowCountNoContent creates a GetWorkflowCountNoContent with default headers values
func NewGetWorkflowCountNoContent() *GetWorkflowCountNoContent {
	return &GetWorkflowCountNoContent{}
}

/*GetWorkflowCountNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type GetWorkflowCountNoContent struct {
}

func (o *GetWorkflowCountNoContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-workflow/count][%d] getWorkflowCountNoContent ", 204)
}

func (o *GetWorkflowCountNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetWorkflowCountPartialContent creates a GetWorkflowCountPartialContent with default headers values
func NewGetWorkflowCountPartialContent() *GetWorkflowCountPartialContent {
	return &GetWorkflowCountPartialContent{}
}

/*GetWorkflowCountPartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type GetWorkflowCountPartialContent struct {
}

func (o *GetWorkflowCountPartialContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-workflow/count][%d] getWorkflowCountPartialContent ", 206)
}

func (o *GetWorkflowCountPartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetWorkflowCountBadRequest creates a GetWorkflowCountBadRequest with default headers values
func NewGetWorkflowCountBadRequest() *GetWorkflowCountBadRequest {
	return &GetWorkflowCountBadRequest{}
}

/*GetWorkflowCountBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type GetWorkflowCountBadRequest struct {
}

func (o *GetWorkflowCountBadRequest) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-workflow/count][%d] getWorkflowCountBadRequest ", 400)
}

func (o *GetWorkflowCountBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetWorkflowCountUnauthorized creates a GetWorkflowCountUnauthorized with default headers values
func NewGetWorkflowCountUnauthorized() *GetWorkflowCountUnauthorized {
	return &GetWorkflowCountUnauthorized{}
}

/*GetWorkflowCountUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type GetWorkflowCountUnauthorized struct {
}

func (o *GetWorkflowCountUnauthorized) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-workflow/count][%d] getWorkflowCountUnauthorized ", 401)
}

func (o *GetWorkflowCountUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetWorkflowCountForbidden creates a GetWorkflowCountForbidden with default headers values
func NewGetWorkflowCountForbidden() *GetWorkflowCountForbidden {
	return &GetWorkflowCountForbidden{}
}

/*GetWorkflowCountForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type GetWorkflowCountForbidden struct {
}

func (o *GetWorkflowCountForbidden) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-workflow/count][%d] getWorkflowCountForbidden ", 403)
}

func (o *GetWorkflowCountForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetWorkflowCountNotFound creates a GetWorkflowCountNotFound with default headers values
func NewGetWorkflowCountNotFound() *GetWorkflowCountNotFound {
	return &GetWorkflowCountNotFound{}
}

/*GetWorkflowCountNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type GetWorkflowCountNotFound struct {
}

func (o *GetWorkflowCountNotFound) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-workflow/count][%d] getWorkflowCountNotFound ", 404)
}

func (o *GetWorkflowCountNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetWorkflowCountConflict creates a GetWorkflowCountConflict with default headers values
func NewGetWorkflowCountConflict() *GetWorkflowCountConflict {
	return &GetWorkflowCountConflict{}
}

/*GetWorkflowCountConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type GetWorkflowCountConflict struct {
}

func (o *GetWorkflowCountConflict) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-workflow/count][%d] getWorkflowCountConflict ", 409)
}

func (o *GetWorkflowCountConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetWorkflowCountUnsupportedMediaType creates a GetWorkflowCountUnsupportedMediaType with default headers values
func NewGetWorkflowCountUnsupportedMediaType() *GetWorkflowCountUnsupportedMediaType {
	return &GetWorkflowCountUnsupportedMediaType{}
}

/*GetWorkflowCountUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type GetWorkflowCountUnsupportedMediaType struct {
}

func (o *GetWorkflowCountUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-workflow/count][%d] getWorkflowCountUnsupportedMediaType ", 415)
}

func (o *GetWorkflowCountUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetWorkflowCountInternalServerError creates a GetWorkflowCountInternalServerError with default headers values
func NewGetWorkflowCountInternalServerError() *GetWorkflowCountInternalServerError {
	return &GetWorkflowCountInternalServerError{}
}

/*GetWorkflowCountInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type GetWorkflowCountInternalServerError struct {
}

func (o *GetWorkflowCountInternalServerError) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-workflow/count][%d] getWorkflowCountInternalServerError ", 500)
}

func (o *GetWorkflowCountInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetWorkflowCountNotImplemented creates a GetWorkflowCountNotImplemented with default headers values
func NewGetWorkflowCountNotImplemented() *GetWorkflowCountNotImplemented {
	return &GetWorkflowCountNotImplemented{}
}

/*GetWorkflowCountNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type GetWorkflowCountNotImplemented struct {
}

func (o *GetWorkflowCountNotImplemented) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-workflow/count][%d] getWorkflowCountNotImplemented ", 501)
}

func (o *GetWorkflowCountNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetWorkflowCountServiceUnavailable creates a GetWorkflowCountServiceUnavailable with default headers values
func NewGetWorkflowCountServiceUnavailable() *GetWorkflowCountServiceUnavailable {
	return &GetWorkflowCountServiceUnavailable{}
}

/*GetWorkflowCountServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type GetWorkflowCountServiceUnavailable struct {
}

func (o *GetWorkflowCountServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-workflow/count][%d] getWorkflowCountServiceUnavailable ", 503)
}

func (o *GetWorkflowCountServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetWorkflowCountGatewayTimeout creates a GetWorkflowCountGatewayTimeout with default headers values
func NewGetWorkflowCountGatewayTimeout() *GetWorkflowCountGatewayTimeout {
	return &GetWorkflowCountGatewayTimeout{}
}

/*GetWorkflowCountGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type GetWorkflowCountGatewayTimeout struct {
}

func (o *GetWorkflowCountGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/onboarding/pnp-workflow/count][%d] getWorkflowCountGatewayTimeout ", 504)
}

func (o *GetWorkflowCountGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
