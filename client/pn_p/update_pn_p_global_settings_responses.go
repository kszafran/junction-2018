// Code generated by go-swagger; DO NOT EDIT.

package pn_p

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// UpdatePnPGlobalSettingsReader is a Reader for the UpdatePnPGlobalSettings structure.
type UpdatePnPGlobalSettingsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdatePnPGlobalSettingsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUpdatePnPGlobalSettingsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 201:
		result := NewUpdatePnPGlobalSettingsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 202:
		result := NewUpdatePnPGlobalSettingsAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewUpdatePnPGlobalSettingsNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewUpdatePnPGlobalSettingsPartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewUpdatePnPGlobalSettingsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewUpdatePnPGlobalSettingsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewUpdatePnPGlobalSettingsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewUpdatePnPGlobalSettingsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewUpdatePnPGlobalSettingsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewUpdatePnPGlobalSettingsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewUpdatePnPGlobalSettingsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewUpdatePnPGlobalSettingsNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewUpdatePnPGlobalSettingsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewUpdatePnPGlobalSettingsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdatePnPGlobalSettingsOK creates a UpdatePnPGlobalSettingsOK with default headers values
func NewUpdatePnPGlobalSettingsOK() *UpdatePnPGlobalSettingsOK {
	return &UpdatePnPGlobalSettingsOK{}
}

/*UpdatePnPGlobalSettingsOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type UpdatePnPGlobalSettingsOK struct {
	Payload *models.UpdatePnPGlobalSettingsResponse
}

func (o *UpdatePnPGlobalSettingsOK) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/onboarding/pnp-settings][%d] updatePnPGlobalSettingsOK  %+v", 200, o.Payload)
}

func (o *UpdatePnPGlobalSettingsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UpdatePnPGlobalSettingsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdatePnPGlobalSettingsCreated creates a UpdatePnPGlobalSettingsCreated with default headers values
func NewUpdatePnPGlobalSettingsCreated() *UpdatePnPGlobalSettingsCreated {
	return &UpdatePnPGlobalSettingsCreated{}
}

/*UpdatePnPGlobalSettingsCreated handles this case with default header values.

The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body.
*/
type UpdatePnPGlobalSettingsCreated struct {
}

func (o *UpdatePnPGlobalSettingsCreated) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/onboarding/pnp-settings][%d] updatePnPGlobalSettingsCreated ", 201)
}

func (o *UpdatePnPGlobalSettingsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdatePnPGlobalSettingsAccepted creates a UpdatePnPGlobalSettingsAccepted with default headers values
func NewUpdatePnPGlobalSettingsAccepted() *UpdatePnPGlobalSettingsAccepted {
	return &UpdatePnPGlobalSettingsAccepted{}
}

/*UpdatePnPGlobalSettingsAccepted handles this case with default header values.

The request was accepted for processing, but the processing has not been completed.
*/
type UpdatePnPGlobalSettingsAccepted struct {
}

func (o *UpdatePnPGlobalSettingsAccepted) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/onboarding/pnp-settings][%d] updatePnPGlobalSettingsAccepted ", 202)
}

func (o *UpdatePnPGlobalSettingsAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdatePnPGlobalSettingsNoContent creates a UpdatePnPGlobalSettingsNoContent with default headers values
func NewUpdatePnPGlobalSettingsNoContent() *UpdatePnPGlobalSettingsNoContent {
	return &UpdatePnPGlobalSettingsNoContent{}
}

/*UpdatePnPGlobalSettingsNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type UpdatePnPGlobalSettingsNoContent struct {
}

func (o *UpdatePnPGlobalSettingsNoContent) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/onboarding/pnp-settings][%d] updatePnPGlobalSettingsNoContent ", 204)
}

func (o *UpdatePnPGlobalSettingsNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdatePnPGlobalSettingsPartialContent creates a UpdatePnPGlobalSettingsPartialContent with default headers values
func NewUpdatePnPGlobalSettingsPartialContent() *UpdatePnPGlobalSettingsPartialContent {
	return &UpdatePnPGlobalSettingsPartialContent{}
}

/*UpdatePnPGlobalSettingsPartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type UpdatePnPGlobalSettingsPartialContent struct {
}

func (o *UpdatePnPGlobalSettingsPartialContent) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/onboarding/pnp-settings][%d] updatePnPGlobalSettingsPartialContent ", 206)
}

func (o *UpdatePnPGlobalSettingsPartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdatePnPGlobalSettingsBadRequest creates a UpdatePnPGlobalSettingsBadRequest with default headers values
func NewUpdatePnPGlobalSettingsBadRequest() *UpdatePnPGlobalSettingsBadRequest {
	return &UpdatePnPGlobalSettingsBadRequest{}
}

/*UpdatePnPGlobalSettingsBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type UpdatePnPGlobalSettingsBadRequest struct {
}

func (o *UpdatePnPGlobalSettingsBadRequest) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/onboarding/pnp-settings][%d] updatePnPGlobalSettingsBadRequest ", 400)
}

func (o *UpdatePnPGlobalSettingsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdatePnPGlobalSettingsUnauthorized creates a UpdatePnPGlobalSettingsUnauthorized with default headers values
func NewUpdatePnPGlobalSettingsUnauthorized() *UpdatePnPGlobalSettingsUnauthorized {
	return &UpdatePnPGlobalSettingsUnauthorized{}
}

/*UpdatePnPGlobalSettingsUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type UpdatePnPGlobalSettingsUnauthorized struct {
}

func (o *UpdatePnPGlobalSettingsUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/onboarding/pnp-settings][%d] updatePnPGlobalSettingsUnauthorized ", 401)
}

func (o *UpdatePnPGlobalSettingsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdatePnPGlobalSettingsForbidden creates a UpdatePnPGlobalSettingsForbidden with default headers values
func NewUpdatePnPGlobalSettingsForbidden() *UpdatePnPGlobalSettingsForbidden {
	return &UpdatePnPGlobalSettingsForbidden{}
}

/*UpdatePnPGlobalSettingsForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type UpdatePnPGlobalSettingsForbidden struct {
}

func (o *UpdatePnPGlobalSettingsForbidden) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/onboarding/pnp-settings][%d] updatePnPGlobalSettingsForbidden ", 403)
}

func (o *UpdatePnPGlobalSettingsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdatePnPGlobalSettingsNotFound creates a UpdatePnPGlobalSettingsNotFound with default headers values
func NewUpdatePnPGlobalSettingsNotFound() *UpdatePnPGlobalSettingsNotFound {
	return &UpdatePnPGlobalSettingsNotFound{}
}

/*UpdatePnPGlobalSettingsNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type UpdatePnPGlobalSettingsNotFound struct {
}

func (o *UpdatePnPGlobalSettingsNotFound) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/onboarding/pnp-settings][%d] updatePnPGlobalSettingsNotFound ", 404)
}

func (o *UpdatePnPGlobalSettingsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdatePnPGlobalSettingsConflict creates a UpdatePnPGlobalSettingsConflict with default headers values
func NewUpdatePnPGlobalSettingsConflict() *UpdatePnPGlobalSettingsConflict {
	return &UpdatePnPGlobalSettingsConflict{}
}

/*UpdatePnPGlobalSettingsConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type UpdatePnPGlobalSettingsConflict struct {
}

func (o *UpdatePnPGlobalSettingsConflict) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/onboarding/pnp-settings][%d] updatePnPGlobalSettingsConflict ", 409)
}

func (o *UpdatePnPGlobalSettingsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdatePnPGlobalSettingsUnsupportedMediaType creates a UpdatePnPGlobalSettingsUnsupportedMediaType with default headers values
func NewUpdatePnPGlobalSettingsUnsupportedMediaType() *UpdatePnPGlobalSettingsUnsupportedMediaType {
	return &UpdatePnPGlobalSettingsUnsupportedMediaType{}
}

/*UpdatePnPGlobalSettingsUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type UpdatePnPGlobalSettingsUnsupportedMediaType struct {
}

func (o *UpdatePnPGlobalSettingsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/onboarding/pnp-settings][%d] updatePnPGlobalSettingsUnsupportedMediaType ", 415)
}

func (o *UpdatePnPGlobalSettingsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdatePnPGlobalSettingsInternalServerError creates a UpdatePnPGlobalSettingsInternalServerError with default headers values
func NewUpdatePnPGlobalSettingsInternalServerError() *UpdatePnPGlobalSettingsInternalServerError {
	return &UpdatePnPGlobalSettingsInternalServerError{}
}

/*UpdatePnPGlobalSettingsInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type UpdatePnPGlobalSettingsInternalServerError struct {
}

func (o *UpdatePnPGlobalSettingsInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/onboarding/pnp-settings][%d] updatePnPGlobalSettingsInternalServerError ", 500)
}

func (o *UpdatePnPGlobalSettingsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdatePnPGlobalSettingsNotImplemented creates a UpdatePnPGlobalSettingsNotImplemented with default headers values
func NewUpdatePnPGlobalSettingsNotImplemented() *UpdatePnPGlobalSettingsNotImplemented {
	return &UpdatePnPGlobalSettingsNotImplemented{}
}

/*UpdatePnPGlobalSettingsNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type UpdatePnPGlobalSettingsNotImplemented struct {
}

func (o *UpdatePnPGlobalSettingsNotImplemented) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/onboarding/pnp-settings][%d] updatePnPGlobalSettingsNotImplemented ", 501)
}

func (o *UpdatePnPGlobalSettingsNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdatePnPGlobalSettingsServiceUnavailable creates a UpdatePnPGlobalSettingsServiceUnavailable with default headers values
func NewUpdatePnPGlobalSettingsServiceUnavailable() *UpdatePnPGlobalSettingsServiceUnavailable {
	return &UpdatePnPGlobalSettingsServiceUnavailable{}
}

/*UpdatePnPGlobalSettingsServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type UpdatePnPGlobalSettingsServiceUnavailable struct {
}

func (o *UpdatePnPGlobalSettingsServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/onboarding/pnp-settings][%d] updatePnPGlobalSettingsServiceUnavailable ", 503)
}

func (o *UpdatePnPGlobalSettingsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdatePnPGlobalSettingsGatewayTimeout creates a UpdatePnPGlobalSettingsGatewayTimeout with default headers values
func NewUpdatePnPGlobalSettingsGatewayTimeout() *UpdatePnPGlobalSettingsGatewayTimeout {
	return &UpdatePnPGlobalSettingsGatewayTimeout{}
}

/*UpdatePnPGlobalSettingsGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type UpdatePnPGlobalSettingsGatewayTimeout struct {
}

func (o *UpdatePnPGlobalSettingsGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/onboarding/pnp-settings][%d] updatePnPGlobalSettingsGatewayTimeout ", 504)
}

func (o *UpdatePnPGlobalSettingsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
