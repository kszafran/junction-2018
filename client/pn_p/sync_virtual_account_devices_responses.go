// Code generated by go-swagger; DO NOT EDIT.

package pn_p

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// SyncVirtualAccountDevicesReader is a Reader for the SyncVirtualAccountDevices structure.
type SyncVirtualAccountDevicesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SyncVirtualAccountDevicesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewSyncVirtualAccountDevicesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 201:
		result := NewSyncVirtualAccountDevicesCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 202:
		result := NewSyncVirtualAccountDevicesAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewSyncVirtualAccountDevicesNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewSyncVirtualAccountDevicesPartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewSyncVirtualAccountDevicesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewSyncVirtualAccountDevicesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewSyncVirtualAccountDevicesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewSyncVirtualAccountDevicesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewSyncVirtualAccountDevicesConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewSyncVirtualAccountDevicesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewSyncVirtualAccountDevicesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewSyncVirtualAccountDevicesNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewSyncVirtualAccountDevicesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewSyncVirtualAccountDevicesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSyncVirtualAccountDevicesOK creates a SyncVirtualAccountDevicesOK with default headers values
func NewSyncVirtualAccountDevicesOK() *SyncVirtualAccountDevicesOK {
	return &SyncVirtualAccountDevicesOK{}
}

/*SyncVirtualAccountDevicesOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type SyncVirtualAccountDevicesOK struct {
	Payload *models.SyncVirtualAccountDevicesResponse
}

func (o *SyncVirtualAccountDevicesOK) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/vacct-sync][%d] syncVirtualAccountDevicesOK  %+v", 200, o.Payload)
}

func (o *SyncVirtualAccountDevicesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SyncVirtualAccountDevicesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSyncVirtualAccountDevicesCreated creates a SyncVirtualAccountDevicesCreated with default headers values
func NewSyncVirtualAccountDevicesCreated() *SyncVirtualAccountDevicesCreated {
	return &SyncVirtualAccountDevicesCreated{}
}

/*SyncVirtualAccountDevicesCreated handles this case with default header values.

The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body.
*/
type SyncVirtualAccountDevicesCreated struct {
}

func (o *SyncVirtualAccountDevicesCreated) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/vacct-sync][%d] syncVirtualAccountDevicesCreated ", 201)
}

func (o *SyncVirtualAccountDevicesCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSyncVirtualAccountDevicesAccepted creates a SyncVirtualAccountDevicesAccepted with default headers values
func NewSyncVirtualAccountDevicesAccepted() *SyncVirtualAccountDevicesAccepted {
	return &SyncVirtualAccountDevicesAccepted{}
}

/*SyncVirtualAccountDevicesAccepted handles this case with default header values.

The request was accepted for processing, but the processing has not been completed.
*/
type SyncVirtualAccountDevicesAccepted struct {
}

func (o *SyncVirtualAccountDevicesAccepted) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/vacct-sync][%d] syncVirtualAccountDevicesAccepted ", 202)
}

func (o *SyncVirtualAccountDevicesAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSyncVirtualAccountDevicesNoContent creates a SyncVirtualAccountDevicesNoContent with default headers values
func NewSyncVirtualAccountDevicesNoContent() *SyncVirtualAccountDevicesNoContent {
	return &SyncVirtualAccountDevicesNoContent{}
}

/*SyncVirtualAccountDevicesNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type SyncVirtualAccountDevicesNoContent struct {
}

func (o *SyncVirtualAccountDevicesNoContent) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/vacct-sync][%d] syncVirtualAccountDevicesNoContent ", 204)
}

func (o *SyncVirtualAccountDevicesNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSyncVirtualAccountDevicesPartialContent creates a SyncVirtualAccountDevicesPartialContent with default headers values
func NewSyncVirtualAccountDevicesPartialContent() *SyncVirtualAccountDevicesPartialContent {
	return &SyncVirtualAccountDevicesPartialContent{}
}

/*SyncVirtualAccountDevicesPartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type SyncVirtualAccountDevicesPartialContent struct {
}

func (o *SyncVirtualAccountDevicesPartialContent) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/vacct-sync][%d] syncVirtualAccountDevicesPartialContent ", 206)
}

func (o *SyncVirtualAccountDevicesPartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSyncVirtualAccountDevicesBadRequest creates a SyncVirtualAccountDevicesBadRequest with default headers values
func NewSyncVirtualAccountDevicesBadRequest() *SyncVirtualAccountDevicesBadRequest {
	return &SyncVirtualAccountDevicesBadRequest{}
}

/*SyncVirtualAccountDevicesBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type SyncVirtualAccountDevicesBadRequest struct {
}

func (o *SyncVirtualAccountDevicesBadRequest) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/vacct-sync][%d] syncVirtualAccountDevicesBadRequest ", 400)
}

func (o *SyncVirtualAccountDevicesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSyncVirtualAccountDevicesUnauthorized creates a SyncVirtualAccountDevicesUnauthorized with default headers values
func NewSyncVirtualAccountDevicesUnauthorized() *SyncVirtualAccountDevicesUnauthorized {
	return &SyncVirtualAccountDevicesUnauthorized{}
}

/*SyncVirtualAccountDevicesUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type SyncVirtualAccountDevicesUnauthorized struct {
}

func (o *SyncVirtualAccountDevicesUnauthorized) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/vacct-sync][%d] syncVirtualAccountDevicesUnauthorized ", 401)
}

func (o *SyncVirtualAccountDevicesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSyncVirtualAccountDevicesForbidden creates a SyncVirtualAccountDevicesForbidden with default headers values
func NewSyncVirtualAccountDevicesForbidden() *SyncVirtualAccountDevicesForbidden {
	return &SyncVirtualAccountDevicesForbidden{}
}

/*SyncVirtualAccountDevicesForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type SyncVirtualAccountDevicesForbidden struct {
}

func (o *SyncVirtualAccountDevicesForbidden) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/vacct-sync][%d] syncVirtualAccountDevicesForbidden ", 403)
}

func (o *SyncVirtualAccountDevicesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSyncVirtualAccountDevicesNotFound creates a SyncVirtualAccountDevicesNotFound with default headers values
func NewSyncVirtualAccountDevicesNotFound() *SyncVirtualAccountDevicesNotFound {
	return &SyncVirtualAccountDevicesNotFound{}
}

/*SyncVirtualAccountDevicesNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type SyncVirtualAccountDevicesNotFound struct {
}

func (o *SyncVirtualAccountDevicesNotFound) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/vacct-sync][%d] syncVirtualAccountDevicesNotFound ", 404)
}

func (o *SyncVirtualAccountDevicesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSyncVirtualAccountDevicesConflict creates a SyncVirtualAccountDevicesConflict with default headers values
func NewSyncVirtualAccountDevicesConflict() *SyncVirtualAccountDevicesConflict {
	return &SyncVirtualAccountDevicesConflict{}
}

/*SyncVirtualAccountDevicesConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type SyncVirtualAccountDevicesConflict struct {
}

func (o *SyncVirtualAccountDevicesConflict) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/vacct-sync][%d] syncVirtualAccountDevicesConflict ", 409)
}

func (o *SyncVirtualAccountDevicesConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSyncVirtualAccountDevicesUnsupportedMediaType creates a SyncVirtualAccountDevicesUnsupportedMediaType with default headers values
func NewSyncVirtualAccountDevicesUnsupportedMediaType() *SyncVirtualAccountDevicesUnsupportedMediaType {
	return &SyncVirtualAccountDevicesUnsupportedMediaType{}
}

/*SyncVirtualAccountDevicesUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type SyncVirtualAccountDevicesUnsupportedMediaType struct {
}

func (o *SyncVirtualAccountDevicesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/vacct-sync][%d] syncVirtualAccountDevicesUnsupportedMediaType ", 415)
}

func (o *SyncVirtualAccountDevicesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSyncVirtualAccountDevicesInternalServerError creates a SyncVirtualAccountDevicesInternalServerError with default headers values
func NewSyncVirtualAccountDevicesInternalServerError() *SyncVirtualAccountDevicesInternalServerError {
	return &SyncVirtualAccountDevicesInternalServerError{}
}

/*SyncVirtualAccountDevicesInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type SyncVirtualAccountDevicesInternalServerError struct {
}

func (o *SyncVirtualAccountDevicesInternalServerError) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/vacct-sync][%d] syncVirtualAccountDevicesInternalServerError ", 500)
}

func (o *SyncVirtualAccountDevicesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSyncVirtualAccountDevicesNotImplemented creates a SyncVirtualAccountDevicesNotImplemented with default headers values
func NewSyncVirtualAccountDevicesNotImplemented() *SyncVirtualAccountDevicesNotImplemented {
	return &SyncVirtualAccountDevicesNotImplemented{}
}

/*SyncVirtualAccountDevicesNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type SyncVirtualAccountDevicesNotImplemented struct {
}

func (o *SyncVirtualAccountDevicesNotImplemented) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/vacct-sync][%d] syncVirtualAccountDevicesNotImplemented ", 501)
}

func (o *SyncVirtualAccountDevicesNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSyncVirtualAccountDevicesServiceUnavailable creates a SyncVirtualAccountDevicesServiceUnavailable with default headers values
func NewSyncVirtualAccountDevicesServiceUnavailable() *SyncVirtualAccountDevicesServiceUnavailable {
	return &SyncVirtualAccountDevicesServiceUnavailable{}
}

/*SyncVirtualAccountDevicesServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type SyncVirtualAccountDevicesServiceUnavailable struct {
}

func (o *SyncVirtualAccountDevicesServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/vacct-sync][%d] syncVirtualAccountDevicesServiceUnavailable ", 503)
}

func (o *SyncVirtualAccountDevicesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSyncVirtualAccountDevicesGatewayTimeout creates a SyncVirtualAccountDevicesGatewayTimeout with default headers values
func NewSyncVirtualAccountDevicesGatewayTimeout() *SyncVirtualAccountDevicesGatewayTimeout {
	return &SyncVirtualAccountDevicesGatewayTimeout{}
}

/*SyncVirtualAccountDevicesGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type SyncVirtualAccountDevicesGatewayTimeout struct {
}

func (o *SyncVirtualAccountDevicesGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/onboarding/pnp-device/vacct-sync][%d] syncVirtualAccountDevicesGatewayTimeout ", 504)
}

func (o *SyncVirtualAccountDevicesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
