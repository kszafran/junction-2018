// Code generated by go-swagger; DO NOT EDIT.

package clients

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetClientDetailParams creates a new GetClientDetailParams object
// with the default values initialized.
func NewGetClientDetailParams() *GetClientDetailParams {
	var (
		persistbapioutputDefault = bool(true)
		runsyncDefault           = bool(true)
		timeoutDefault           = float64(30)
		timestampDefault         = string("1542990102")
	)
	return &GetClientDetailParams{
		Persistbapioutput: persistbapioutputDefault,
		Runsync:           runsyncDefault,
		Timeout:           timeoutDefault,
		Timestamp:         timestampDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewGetClientDetailParamsWithTimeout creates a new GetClientDetailParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetClientDetailParamsWithTimeout(timeout time.Duration) *GetClientDetailParams {
	var (
		persistbapioutputDefault = bool(true)
		runsyncDefault           = bool(true)
		timeoutDefault           = float64(30)
		timestampDefault         = string("1542990102")
	)
	return &GetClientDetailParams{
		Persistbapioutput: persistbapioutputDefault,
		Runsync:           runsyncDefault,
		Timeout:           timeoutDefault,
		Timestamp:         timestampDefault,

		timeout: timeout,
	}
}

// NewGetClientDetailParamsWithContext creates a new GetClientDetailParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetClientDetailParamsWithContext(ctx context.Context) *GetClientDetailParams {
	var (
		persistbapioutputDefault = bool(true)
		runsyncDefault           = bool(true)
		timeoutDefault           = float64(30)
		timestampDefault         = string("1542990102")
	)
	return &GetClientDetailParams{
		Persistbapioutput: persistbapioutputDefault,
		Runsync:           runsyncDefault,
		Timeout:           timeoutDefault,
		Timestamp:         timestampDefault,

		Context: ctx,
	}
}

// NewGetClientDetailParamsWithHTTPClient creates a new GetClientDetailParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetClientDetailParamsWithHTTPClient(client *http.Client) *GetClientDetailParams {
	var (
		persistbapioutputDefault = bool(true)
		runsyncDefault           = bool(true)
		timeoutDefault           = float64(30)
		timestampDefault         = string("1542990102")
	)
	return &GetClientDetailParams{
		Persistbapioutput: persistbapioutputDefault,
		Runsync:           runsyncDefault,
		Timeout:           timeoutDefault,
		Timestamp:         timestampDefault,
		HTTPClient:        client,
	}
}

/*GetClientDetailParams contains all the parameters to send to the API endpoint
for the get client detail operation typically these are written to a http.Request
*/
type GetClientDetailParams struct {

	/*Persistbapioutput
	  Enable this parameter to ensure that the synchronous response of the API is made available as part of the logs and the execution status

	*/
	Persistbapioutput bool
	/*Runsync
	  Enable this parameter to execute the API and return a response synchronously

	*/
	Runsync bool
	/*Timeout
	  If __runsync is set to ‘true’, this defines the maximum time before which if the API completes its execution, then a synchronous response is returned.  If the time taken for the API to complete the execution, exceeds this time, then an asynchronous response is returned with an execution id, that can be used to get the status and response associated with the API execution

	*/
	Timeout float64
	/*MacAddress
	  MAC Address of the client

	*/
	MacAddress string
	/*Timestamp
	  Epoch time(in milliseconds) when the Client health data is required

	*/
	Timestamp string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get client detail params
func (o *GetClientDetailParams) WithTimeout(timeout time.Duration) *GetClientDetailParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get client detail params
func (o *GetClientDetailParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get client detail params
func (o *GetClientDetailParams) WithContext(ctx context.Context) *GetClientDetailParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get client detail params
func (o *GetClientDetailParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get client detail params
func (o *GetClientDetailParams) WithHTTPClient(client *http.Client) *GetClientDetailParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get client detail params
func (o *GetClientDetailParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPersistbapioutput adds the persistbapioutput to the get client detail params
func (o *GetClientDetailParams) WithPersistbapioutput(persistbapioutput bool) *GetClientDetailParams {
	o.SetPersistbapioutput(persistbapioutput)
	return o
}

// SetPersistbapioutput adds the persistbapioutput to the get client detail params
func (o *GetClientDetailParams) SetPersistbapioutput(persistbapioutput bool) {
	o.Persistbapioutput = persistbapioutput
}

// WithRunsync adds the runsync to the get client detail params
func (o *GetClientDetailParams) WithRunsync(runsync bool) *GetClientDetailParams {
	o.SetRunsync(runsync)
	return o
}

// SetRunsync adds the runsync to the get client detail params
func (o *GetClientDetailParams) SetRunsync(runsync bool) {
	o.Runsync = runsync
}

// WithTimeout adds the timeout to the get client detail params
func (o *GetClientDetailParams) WithTimeout(timeout float64) *GetClientDetailParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get client detail params
func (o *GetClientDetailParams) SetTimeout(timeout float64) {
	o.Timeout = timeout
}

// WithMacAddress adds the macAddress to the get client detail params
func (o *GetClientDetailParams) WithMacAddress(macAddress string) *GetClientDetailParams {
	o.SetMacAddress(macAddress)
	return o
}

// SetMacAddress adds the macAddress to the get client detail params
func (o *GetClientDetailParams) SetMacAddress(macAddress string) {
	o.MacAddress = macAddress
}

// WithTimestamp adds the timestamp to the get client detail params
func (o *GetClientDetailParams) WithTimestamp(timestamp string) *GetClientDetailParams {
	o.SetTimestamp(timestamp)
	return o
}

// SetTimestamp adds the timestamp to the get client detail params
func (o *GetClientDetailParams) SetTimestamp(timestamp string) {
	o.Timestamp = timestamp
}

// WriteToRequest writes these params to a swagger request
func (o *GetClientDetailParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// header param __persistbapioutput
	if err := r.SetHeaderParam("__persistbapioutput", swag.FormatBool(o.Persistbapioutput)); err != nil {
		return err
	}

	// header param __runsync
	if err := r.SetHeaderParam("__runsync", swag.FormatBool(o.Runsync)); err != nil {
		return err
	}

	// header param __timeout
	if err := r.SetHeaderParam("__timeout", swag.FormatFloat64(o.Timeout)); err != nil {
		return err
	}

	// query param macAddress
	qrMacAddress := o.MacAddress
	qMacAddress := qrMacAddress
	if qMacAddress != "" {
		if err := r.SetQueryParam("macAddress", qMacAddress); err != nil {
			return err
		}
	}

	// query param timestamp
	qrTimestamp := o.Timestamp
	qTimestamp := qrTimestamp
	if qTimestamp != "" {
		if err := r.SetQueryParam("timestamp", qTimestamp); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
