// Code generated by go-swagger; DO NOT EDIT.

package networks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// GetSiteTopologyReader is a Reader for the GetSiteTopology structure.
type GetSiteTopologyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSiteTopologyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetSiteTopologyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewGetSiteTopologyNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewGetSiteTopologyPartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetSiteTopologyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetSiteTopologyUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetSiteTopologyForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetSiteTopologyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewGetSiteTopologyConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewGetSiteTopologyUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetSiteTopologyInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewGetSiteTopologyNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetSiteTopologyServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetSiteTopologyGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetSiteTopologyOK creates a GetSiteTopologyOK with default headers values
func NewGetSiteTopologyOK() *GetSiteTopologyOK {
	return &GetSiteTopologyOK{}
}

/*GetSiteTopologyOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type GetSiteTopologyOK struct {
	Payload *models.SiteResult
}

func (o *GetSiteTopologyOK) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/topology/site-topology][%d] getSiteTopologyOK  %+v", 200, o.Payload)
}

func (o *GetSiteTopologyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SiteResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSiteTopologyNoContent creates a GetSiteTopologyNoContent with default headers values
func NewGetSiteTopologyNoContent() *GetSiteTopologyNoContent {
	return &GetSiteTopologyNoContent{}
}

/*GetSiteTopologyNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type GetSiteTopologyNoContent struct {
}

func (o *GetSiteTopologyNoContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/topology/site-topology][%d] getSiteTopologyNoContent ", 204)
}

func (o *GetSiteTopologyNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSiteTopologyPartialContent creates a GetSiteTopologyPartialContent with default headers values
func NewGetSiteTopologyPartialContent() *GetSiteTopologyPartialContent {
	return &GetSiteTopologyPartialContent{}
}

/*GetSiteTopologyPartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type GetSiteTopologyPartialContent struct {
}

func (o *GetSiteTopologyPartialContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/topology/site-topology][%d] getSiteTopologyPartialContent ", 206)
}

func (o *GetSiteTopologyPartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSiteTopologyBadRequest creates a GetSiteTopologyBadRequest with default headers values
func NewGetSiteTopologyBadRequest() *GetSiteTopologyBadRequest {
	return &GetSiteTopologyBadRequest{}
}

/*GetSiteTopologyBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type GetSiteTopologyBadRequest struct {
}

func (o *GetSiteTopologyBadRequest) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/topology/site-topology][%d] getSiteTopologyBadRequest ", 400)
}

func (o *GetSiteTopologyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSiteTopologyUnauthorized creates a GetSiteTopologyUnauthorized with default headers values
func NewGetSiteTopologyUnauthorized() *GetSiteTopologyUnauthorized {
	return &GetSiteTopologyUnauthorized{}
}

/*GetSiteTopologyUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type GetSiteTopologyUnauthorized struct {
}

func (o *GetSiteTopologyUnauthorized) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/topology/site-topology][%d] getSiteTopologyUnauthorized ", 401)
}

func (o *GetSiteTopologyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSiteTopologyForbidden creates a GetSiteTopologyForbidden with default headers values
func NewGetSiteTopologyForbidden() *GetSiteTopologyForbidden {
	return &GetSiteTopologyForbidden{}
}

/*GetSiteTopologyForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type GetSiteTopologyForbidden struct {
}

func (o *GetSiteTopologyForbidden) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/topology/site-topology][%d] getSiteTopologyForbidden ", 403)
}

func (o *GetSiteTopologyForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSiteTopologyNotFound creates a GetSiteTopologyNotFound with default headers values
func NewGetSiteTopologyNotFound() *GetSiteTopologyNotFound {
	return &GetSiteTopologyNotFound{}
}

/*GetSiteTopologyNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type GetSiteTopologyNotFound struct {
}

func (o *GetSiteTopologyNotFound) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/topology/site-topology][%d] getSiteTopologyNotFound ", 404)
}

func (o *GetSiteTopologyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSiteTopologyConflict creates a GetSiteTopologyConflict with default headers values
func NewGetSiteTopologyConflict() *GetSiteTopologyConflict {
	return &GetSiteTopologyConflict{}
}

/*GetSiteTopologyConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type GetSiteTopologyConflict struct {
}

func (o *GetSiteTopologyConflict) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/topology/site-topology][%d] getSiteTopologyConflict ", 409)
}

func (o *GetSiteTopologyConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSiteTopologyUnsupportedMediaType creates a GetSiteTopologyUnsupportedMediaType with default headers values
func NewGetSiteTopologyUnsupportedMediaType() *GetSiteTopologyUnsupportedMediaType {
	return &GetSiteTopologyUnsupportedMediaType{}
}

/*GetSiteTopologyUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type GetSiteTopologyUnsupportedMediaType struct {
}

func (o *GetSiteTopologyUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/topology/site-topology][%d] getSiteTopologyUnsupportedMediaType ", 415)
}

func (o *GetSiteTopologyUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSiteTopologyInternalServerError creates a GetSiteTopologyInternalServerError with default headers values
func NewGetSiteTopologyInternalServerError() *GetSiteTopologyInternalServerError {
	return &GetSiteTopologyInternalServerError{}
}

/*GetSiteTopologyInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type GetSiteTopologyInternalServerError struct {
}

func (o *GetSiteTopologyInternalServerError) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/topology/site-topology][%d] getSiteTopologyInternalServerError ", 500)
}

func (o *GetSiteTopologyInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSiteTopologyNotImplemented creates a GetSiteTopologyNotImplemented with default headers values
func NewGetSiteTopologyNotImplemented() *GetSiteTopologyNotImplemented {
	return &GetSiteTopologyNotImplemented{}
}

/*GetSiteTopologyNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type GetSiteTopologyNotImplemented struct {
}

func (o *GetSiteTopologyNotImplemented) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/topology/site-topology][%d] getSiteTopologyNotImplemented ", 501)
}

func (o *GetSiteTopologyNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSiteTopologyServiceUnavailable creates a GetSiteTopologyServiceUnavailable with default headers values
func NewGetSiteTopologyServiceUnavailable() *GetSiteTopologyServiceUnavailable {
	return &GetSiteTopologyServiceUnavailable{}
}

/*GetSiteTopologyServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type GetSiteTopologyServiceUnavailable struct {
}

func (o *GetSiteTopologyServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/topology/site-topology][%d] getSiteTopologyServiceUnavailable ", 503)
}

func (o *GetSiteTopologyServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSiteTopologyGatewayTimeout creates a GetSiteTopologyGatewayTimeout with default headers values
func NewGetSiteTopologyGatewayTimeout() *GetSiteTopologyGatewayTimeout {
	return &GetSiteTopologyGatewayTimeout{}
}

/*GetSiteTopologyGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type GetSiteTopologyGatewayTimeout struct {
}

func (o *GetSiteTopologyGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/topology/site-topology][%d] getSiteTopologyGatewayTimeout ", 504)
}

func (o *GetSiteTopologyGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
