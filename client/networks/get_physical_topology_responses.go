// Code generated by go-swagger; DO NOT EDIT.

package networks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// GetPhysicalTopologyReader is a Reader for the GetPhysicalTopology structure.
type GetPhysicalTopologyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPhysicalTopologyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetPhysicalTopologyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewGetPhysicalTopologyNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewGetPhysicalTopologyPartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetPhysicalTopologyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetPhysicalTopologyUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetPhysicalTopologyForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetPhysicalTopologyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewGetPhysicalTopologyConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewGetPhysicalTopologyUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetPhysicalTopologyInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewGetPhysicalTopologyNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetPhysicalTopologyServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetPhysicalTopologyGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetPhysicalTopologyOK creates a GetPhysicalTopologyOK with default headers values
func NewGetPhysicalTopologyOK() *GetPhysicalTopologyOK {
	return &GetPhysicalTopologyOK{}
}

/*GetPhysicalTopologyOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type GetPhysicalTopologyOK struct {
	Payload *models.TopologyResult
}

func (o *GetPhysicalTopologyOK) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/topology/physical-topology][%d] getPhysicalTopologyOK  %+v", 200, o.Payload)
}

func (o *GetPhysicalTopologyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TopologyResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPhysicalTopologyNoContent creates a GetPhysicalTopologyNoContent with default headers values
func NewGetPhysicalTopologyNoContent() *GetPhysicalTopologyNoContent {
	return &GetPhysicalTopologyNoContent{}
}

/*GetPhysicalTopologyNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type GetPhysicalTopologyNoContent struct {
}

func (o *GetPhysicalTopologyNoContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/topology/physical-topology][%d] getPhysicalTopologyNoContent ", 204)
}

func (o *GetPhysicalTopologyNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPhysicalTopologyPartialContent creates a GetPhysicalTopologyPartialContent with default headers values
func NewGetPhysicalTopologyPartialContent() *GetPhysicalTopologyPartialContent {
	return &GetPhysicalTopologyPartialContent{}
}

/*GetPhysicalTopologyPartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type GetPhysicalTopologyPartialContent struct {
}

func (o *GetPhysicalTopologyPartialContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/topology/physical-topology][%d] getPhysicalTopologyPartialContent ", 206)
}

func (o *GetPhysicalTopologyPartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPhysicalTopologyBadRequest creates a GetPhysicalTopologyBadRequest with default headers values
func NewGetPhysicalTopologyBadRequest() *GetPhysicalTopologyBadRequest {
	return &GetPhysicalTopologyBadRequest{}
}

/*GetPhysicalTopologyBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type GetPhysicalTopologyBadRequest struct {
}

func (o *GetPhysicalTopologyBadRequest) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/topology/physical-topology][%d] getPhysicalTopologyBadRequest ", 400)
}

func (o *GetPhysicalTopologyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPhysicalTopologyUnauthorized creates a GetPhysicalTopologyUnauthorized with default headers values
func NewGetPhysicalTopologyUnauthorized() *GetPhysicalTopologyUnauthorized {
	return &GetPhysicalTopologyUnauthorized{}
}

/*GetPhysicalTopologyUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type GetPhysicalTopologyUnauthorized struct {
}

func (o *GetPhysicalTopologyUnauthorized) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/topology/physical-topology][%d] getPhysicalTopologyUnauthorized ", 401)
}

func (o *GetPhysicalTopologyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPhysicalTopologyForbidden creates a GetPhysicalTopologyForbidden with default headers values
func NewGetPhysicalTopologyForbidden() *GetPhysicalTopologyForbidden {
	return &GetPhysicalTopologyForbidden{}
}

/*GetPhysicalTopologyForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type GetPhysicalTopologyForbidden struct {
}

func (o *GetPhysicalTopologyForbidden) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/topology/physical-topology][%d] getPhysicalTopologyForbidden ", 403)
}

func (o *GetPhysicalTopologyForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPhysicalTopologyNotFound creates a GetPhysicalTopologyNotFound with default headers values
func NewGetPhysicalTopologyNotFound() *GetPhysicalTopologyNotFound {
	return &GetPhysicalTopologyNotFound{}
}

/*GetPhysicalTopologyNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type GetPhysicalTopologyNotFound struct {
}

func (o *GetPhysicalTopologyNotFound) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/topology/physical-topology][%d] getPhysicalTopologyNotFound ", 404)
}

func (o *GetPhysicalTopologyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPhysicalTopologyConflict creates a GetPhysicalTopologyConflict with default headers values
func NewGetPhysicalTopologyConflict() *GetPhysicalTopologyConflict {
	return &GetPhysicalTopologyConflict{}
}

/*GetPhysicalTopologyConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type GetPhysicalTopologyConflict struct {
}

func (o *GetPhysicalTopologyConflict) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/topology/physical-topology][%d] getPhysicalTopologyConflict ", 409)
}

func (o *GetPhysicalTopologyConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPhysicalTopologyUnsupportedMediaType creates a GetPhysicalTopologyUnsupportedMediaType with default headers values
func NewGetPhysicalTopologyUnsupportedMediaType() *GetPhysicalTopologyUnsupportedMediaType {
	return &GetPhysicalTopologyUnsupportedMediaType{}
}

/*GetPhysicalTopologyUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type GetPhysicalTopologyUnsupportedMediaType struct {
}

func (o *GetPhysicalTopologyUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/topology/physical-topology][%d] getPhysicalTopologyUnsupportedMediaType ", 415)
}

func (o *GetPhysicalTopologyUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPhysicalTopologyInternalServerError creates a GetPhysicalTopologyInternalServerError with default headers values
func NewGetPhysicalTopologyInternalServerError() *GetPhysicalTopologyInternalServerError {
	return &GetPhysicalTopologyInternalServerError{}
}

/*GetPhysicalTopologyInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type GetPhysicalTopologyInternalServerError struct {
}

func (o *GetPhysicalTopologyInternalServerError) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/topology/physical-topology][%d] getPhysicalTopologyInternalServerError ", 500)
}

func (o *GetPhysicalTopologyInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPhysicalTopologyNotImplemented creates a GetPhysicalTopologyNotImplemented with default headers values
func NewGetPhysicalTopologyNotImplemented() *GetPhysicalTopologyNotImplemented {
	return &GetPhysicalTopologyNotImplemented{}
}

/*GetPhysicalTopologyNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type GetPhysicalTopologyNotImplemented struct {
}

func (o *GetPhysicalTopologyNotImplemented) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/topology/physical-topology][%d] getPhysicalTopologyNotImplemented ", 501)
}

func (o *GetPhysicalTopologyNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPhysicalTopologyServiceUnavailable creates a GetPhysicalTopologyServiceUnavailable with default headers values
func NewGetPhysicalTopologyServiceUnavailable() *GetPhysicalTopologyServiceUnavailable {
	return &GetPhysicalTopologyServiceUnavailable{}
}

/*GetPhysicalTopologyServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type GetPhysicalTopologyServiceUnavailable struct {
}

func (o *GetPhysicalTopologyServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/topology/physical-topology][%d] getPhysicalTopologyServiceUnavailable ", 503)
}

func (o *GetPhysicalTopologyServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPhysicalTopologyGatewayTimeout creates a GetPhysicalTopologyGatewayTimeout with default headers values
func NewGetPhysicalTopologyGatewayTimeout() *GetPhysicalTopologyGatewayTimeout {
	return &GetPhysicalTopologyGatewayTimeout{}
}

/*GetPhysicalTopologyGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type GetPhysicalTopologyGatewayTimeout struct {
}

func (o *GetPhysicalTopologyGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/topology/physical-topology][%d] getPhysicalTopologyGatewayTimeout ", 504)
}

func (o *GetPhysicalTopologyGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
