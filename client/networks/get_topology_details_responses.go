// Code generated by go-swagger; DO NOT EDIT.

package networks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// GetTopologyDetailsReader is a Reader for the GetTopologyDetails structure.
type GetTopologyDetailsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTopologyDetailsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetTopologyDetailsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewGetTopologyDetailsNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewGetTopologyDetailsPartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetTopologyDetailsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetTopologyDetailsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetTopologyDetailsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetTopologyDetailsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewGetTopologyDetailsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewGetTopologyDetailsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetTopologyDetailsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewGetTopologyDetailsNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetTopologyDetailsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetTopologyDetailsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetTopologyDetailsOK creates a GetTopologyDetailsOK with default headers values
func NewGetTopologyDetailsOK() *GetTopologyDetailsOK {
	return &GetTopologyDetailsOK{}
}

/*GetTopologyDetailsOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type GetTopologyDetailsOK struct {
	Payload *models.TopologyResult
}

func (o *GetTopologyDetailsOK) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/topology/l2/{vlanID}][%d] getTopologyDetailsOK  %+v", 200, o.Payload)
}

func (o *GetTopologyDetailsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TopologyResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTopologyDetailsNoContent creates a GetTopologyDetailsNoContent with default headers values
func NewGetTopologyDetailsNoContent() *GetTopologyDetailsNoContent {
	return &GetTopologyDetailsNoContent{}
}

/*GetTopologyDetailsNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type GetTopologyDetailsNoContent struct {
}

func (o *GetTopologyDetailsNoContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/topology/l2/{vlanID}][%d] getTopologyDetailsNoContent ", 204)
}

func (o *GetTopologyDetailsNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTopologyDetailsPartialContent creates a GetTopologyDetailsPartialContent with default headers values
func NewGetTopologyDetailsPartialContent() *GetTopologyDetailsPartialContent {
	return &GetTopologyDetailsPartialContent{}
}

/*GetTopologyDetailsPartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type GetTopologyDetailsPartialContent struct {
}

func (o *GetTopologyDetailsPartialContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/topology/l2/{vlanID}][%d] getTopologyDetailsPartialContent ", 206)
}

func (o *GetTopologyDetailsPartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTopologyDetailsBadRequest creates a GetTopologyDetailsBadRequest with default headers values
func NewGetTopologyDetailsBadRequest() *GetTopologyDetailsBadRequest {
	return &GetTopologyDetailsBadRequest{}
}

/*GetTopologyDetailsBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type GetTopologyDetailsBadRequest struct {
}

func (o *GetTopologyDetailsBadRequest) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/topology/l2/{vlanID}][%d] getTopologyDetailsBadRequest ", 400)
}

func (o *GetTopologyDetailsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTopologyDetailsUnauthorized creates a GetTopologyDetailsUnauthorized with default headers values
func NewGetTopologyDetailsUnauthorized() *GetTopologyDetailsUnauthorized {
	return &GetTopologyDetailsUnauthorized{}
}

/*GetTopologyDetailsUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type GetTopologyDetailsUnauthorized struct {
}

func (o *GetTopologyDetailsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/topology/l2/{vlanID}][%d] getTopologyDetailsUnauthorized ", 401)
}

func (o *GetTopologyDetailsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTopologyDetailsForbidden creates a GetTopologyDetailsForbidden with default headers values
func NewGetTopologyDetailsForbidden() *GetTopologyDetailsForbidden {
	return &GetTopologyDetailsForbidden{}
}

/*GetTopologyDetailsForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type GetTopologyDetailsForbidden struct {
}

func (o *GetTopologyDetailsForbidden) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/topology/l2/{vlanID}][%d] getTopologyDetailsForbidden ", 403)
}

func (o *GetTopologyDetailsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTopologyDetailsNotFound creates a GetTopologyDetailsNotFound with default headers values
func NewGetTopologyDetailsNotFound() *GetTopologyDetailsNotFound {
	return &GetTopologyDetailsNotFound{}
}

/*GetTopologyDetailsNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type GetTopologyDetailsNotFound struct {
}

func (o *GetTopologyDetailsNotFound) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/topology/l2/{vlanID}][%d] getTopologyDetailsNotFound ", 404)
}

func (o *GetTopologyDetailsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTopologyDetailsConflict creates a GetTopologyDetailsConflict with default headers values
func NewGetTopologyDetailsConflict() *GetTopologyDetailsConflict {
	return &GetTopologyDetailsConflict{}
}

/*GetTopologyDetailsConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type GetTopologyDetailsConflict struct {
}

func (o *GetTopologyDetailsConflict) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/topology/l2/{vlanID}][%d] getTopologyDetailsConflict ", 409)
}

func (o *GetTopologyDetailsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTopologyDetailsUnsupportedMediaType creates a GetTopologyDetailsUnsupportedMediaType with default headers values
func NewGetTopologyDetailsUnsupportedMediaType() *GetTopologyDetailsUnsupportedMediaType {
	return &GetTopologyDetailsUnsupportedMediaType{}
}

/*GetTopologyDetailsUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type GetTopologyDetailsUnsupportedMediaType struct {
}

func (o *GetTopologyDetailsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/topology/l2/{vlanID}][%d] getTopologyDetailsUnsupportedMediaType ", 415)
}

func (o *GetTopologyDetailsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTopologyDetailsInternalServerError creates a GetTopologyDetailsInternalServerError with default headers values
func NewGetTopologyDetailsInternalServerError() *GetTopologyDetailsInternalServerError {
	return &GetTopologyDetailsInternalServerError{}
}

/*GetTopologyDetailsInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type GetTopologyDetailsInternalServerError struct {
}

func (o *GetTopologyDetailsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/topology/l2/{vlanID}][%d] getTopologyDetailsInternalServerError ", 500)
}

func (o *GetTopologyDetailsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTopologyDetailsNotImplemented creates a GetTopologyDetailsNotImplemented with default headers values
func NewGetTopologyDetailsNotImplemented() *GetTopologyDetailsNotImplemented {
	return &GetTopologyDetailsNotImplemented{}
}

/*GetTopologyDetailsNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type GetTopologyDetailsNotImplemented struct {
}

func (o *GetTopologyDetailsNotImplemented) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/topology/l2/{vlanID}][%d] getTopologyDetailsNotImplemented ", 501)
}

func (o *GetTopologyDetailsNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTopologyDetailsServiceUnavailable creates a GetTopologyDetailsServiceUnavailable with default headers values
func NewGetTopologyDetailsServiceUnavailable() *GetTopologyDetailsServiceUnavailable {
	return &GetTopologyDetailsServiceUnavailable{}
}

/*GetTopologyDetailsServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type GetTopologyDetailsServiceUnavailable struct {
}

func (o *GetTopologyDetailsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/topology/l2/{vlanID}][%d] getTopologyDetailsServiceUnavailable ", 503)
}

func (o *GetTopologyDetailsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTopologyDetailsGatewayTimeout creates a GetTopologyDetailsGatewayTimeout with default headers values
func NewGetTopologyDetailsGatewayTimeout() *GetTopologyDetailsGatewayTimeout {
	return &GetTopologyDetailsGatewayTimeout{}
}

/*GetTopologyDetailsGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type GetTopologyDetailsGatewayTimeout struct {
}

func (o *GetTopologyDetailsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/topology/l2/{vlanID}][%d] getTopologyDetailsGatewayTimeout ", 504)
}

func (o *GetTopologyDetailsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
