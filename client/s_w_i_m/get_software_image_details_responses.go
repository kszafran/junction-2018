// Code generated by go-swagger; DO NOT EDIT.

package s_w_i_m

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// GetSoftwareImageDetailsReader is a Reader for the GetSoftwareImageDetails structure.
type GetSoftwareImageDetailsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSoftwareImageDetailsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetSoftwareImageDetailsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewGetSoftwareImageDetailsNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewGetSoftwareImageDetailsPartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetSoftwareImageDetailsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetSoftwareImageDetailsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetSoftwareImageDetailsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetSoftwareImageDetailsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewGetSoftwareImageDetailsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewGetSoftwareImageDetailsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetSoftwareImageDetailsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewGetSoftwareImageDetailsNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetSoftwareImageDetailsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetSoftwareImageDetailsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetSoftwareImageDetailsOK creates a GetSoftwareImageDetailsOK with default headers values
func NewGetSoftwareImageDetailsOK() *GetSoftwareImageDetailsOK {
	return &GetSoftwareImageDetailsOK{}
}

/*GetSoftwareImageDetailsOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type GetSoftwareImageDetailsOK struct {
	Payload *models.ImageInfoListResponse
}

func (o *GetSoftwareImageDetailsOK) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/image/importation][%d] getSoftwareImageDetailsOK  %+v", 200, o.Payload)
}

func (o *GetSoftwareImageDetailsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ImageInfoListResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSoftwareImageDetailsNoContent creates a GetSoftwareImageDetailsNoContent with default headers values
func NewGetSoftwareImageDetailsNoContent() *GetSoftwareImageDetailsNoContent {
	return &GetSoftwareImageDetailsNoContent{}
}

/*GetSoftwareImageDetailsNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type GetSoftwareImageDetailsNoContent struct {
}

func (o *GetSoftwareImageDetailsNoContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/image/importation][%d] getSoftwareImageDetailsNoContent ", 204)
}

func (o *GetSoftwareImageDetailsNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSoftwareImageDetailsPartialContent creates a GetSoftwareImageDetailsPartialContent with default headers values
func NewGetSoftwareImageDetailsPartialContent() *GetSoftwareImageDetailsPartialContent {
	return &GetSoftwareImageDetailsPartialContent{}
}

/*GetSoftwareImageDetailsPartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type GetSoftwareImageDetailsPartialContent struct {
}

func (o *GetSoftwareImageDetailsPartialContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/image/importation][%d] getSoftwareImageDetailsPartialContent ", 206)
}

func (o *GetSoftwareImageDetailsPartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSoftwareImageDetailsBadRequest creates a GetSoftwareImageDetailsBadRequest with default headers values
func NewGetSoftwareImageDetailsBadRequest() *GetSoftwareImageDetailsBadRequest {
	return &GetSoftwareImageDetailsBadRequest{}
}

/*GetSoftwareImageDetailsBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type GetSoftwareImageDetailsBadRequest struct {
}

func (o *GetSoftwareImageDetailsBadRequest) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/image/importation][%d] getSoftwareImageDetailsBadRequest ", 400)
}

func (o *GetSoftwareImageDetailsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSoftwareImageDetailsUnauthorized creates a GetSoftwareImageDetailsUnauthorized with default headers values
func NewGetSoftwareImageDetailsUnauthorized() *GetSoftwareImageDetailsUnauthorized {
	return &GetSoftwareImageDetailsUnauthorized{}
}

/*GetSoftwareImageDetailsUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type GetSoftwareImageDetailsUnauthorized struct {
}

func (o *GetSoftwareImageDetailsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/image/importation][%d] getSoftwareImageDetailsUnauthorized ", 401)
}

func (o *GetSoftwareImageDetailsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSoftwareImageDetailsForbidden creates a GetSoftwareImageDetailsForbidden with default headers values
func NewGetSoftwareImageDetailsForbidden() *GetSoftwareImageDetailsForbidden {
	return &GetSoftwareImageDetailsForbidden{}
}

/*GetSoftwareImageDetailsForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type GetSoftwareImageDetailsForbidden struct {
}

func (o *GetSoftwareImageDetailsForbidden) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/image/importation][%d] getSoftwareImageDetailsForbidden ", 403)
}

func (o *GetSoftwareImageDetailsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSoftwareImageDetailsNotFound creates a GetSoftwareImageDetailsNotFound with default headers values
func NewGetSoftwareImageDetailsNotFound() *GetSoftwareImageDetailsNotFound {
	return &GetSoftwareImageDetailsNotFound{}
}

/*GetSoftwareImageDetailsNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type GetSoftwareImageDetailsNotFound struct {
}

func (o *GetSoftwareImageDetailsNotFound) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/image/importation][%d] getSoftwareImageDetailsNotFound ", 404)
}

func (o *GetSoftwareImageDetailsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSoftwareImageDetailsConflict creates a GetSoftwareImageDetailsConflict with default headers values
func NewGetSoftwareImageDetailsConflict() *GetSoftwareImageDetailsConflict {
	return &GetSoftwareImageDetailsConflict{}
}

/*GetSoftwareImageDetailsConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type GetSoftwareImageDetailsConflict struct {
}

func (o *GetSoftwareImageDetailsConflict) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/image/importation][%d] getSoftwareImageDetailsConflict ", 409)
}

func (o *GetSoftwareImageDetailsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSoftwareImageDetailsUnsupportedMediaType creates a GetSoftwareImageDetailsUnsupportedMediaType with default headers values
func NewGetSoftwareImageDetailsUnsupportedMediaType() *GetSoftwareImageDetailsUnsupportedMediaType {
	return &GetSoftwareImageDetailsUnsupportedMediaType{}
}

/*GetSoftwareImageDetailsUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type GetSoftwareImageDetailsUnsupportedMediaType struct {
}

func (o *GetSoftwareImageDetailsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/image/importation][%d] getSoftwareImageDetailsUnsupportedMediaType ", 415)
}

func (o *GetSoftwareImageDetailsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSoftwareImageDetailsInternalServerError creates a GetSoftwareImageDetailsInternalServerError with default headers values
func NewGetSoftwareImageDetailsInternalServerError() *GetSoftwareImageDetailsInternalServerError {
	return &GetSoftwareImageDetailsInternalServerError{}
}

/*GetSoftwareImageDetailsInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type GetSoftwareImageDetailsInternalServerError struct {
}

func (o *GetSoftwareImageDetailsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/image/importation][%d] getSoftwareImageDetailsInternalServerError ", 500)
}

func (o *GetSoftwareImageDetailsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSoftwareImageDetailsNotImplemented creates a GetSoftwareImageDetailsNotImplemented with default headers values
func NewGetSoftwareImageDetailsNotImplemented() *GetSoftwareImageDetailsNotImplemented {
	return &GetSoftwareImageDetailsNotImplemented{}
}

/*GetSoftwareImageDetailsNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type GetSoftwareImageDetailsNotImplemented struct {
}

func (o *GetSoftwareImageDetailsNotImplemented) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/image/importation][%d] getSoftwareImageDetailsNotImplemented ", 501)
}

func (o *GetSoftwareImageDetailsNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSoftwareImageDetailsServiceUnavailable creates a GetSoftwareImageDetailsServiceUnavailable with default headers values
func NewGetSoftwareImageDetailsServiceUnavailable() *GetSoftwareImageDetailsServiceUnavailable {
	return &GetSoftwareImageDetailsServiceUnavailable{}
}

/*GetSoftwareImageDetailsServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type GetSoftwareImageDetailsServiceUnavailable struct {
}

func (o *GetSoftwareImageDetailsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/image/importation][%d] getSoftwareImageDetailsServiceUnavailable ", 503)
}

func (o *GetSoftwareImageDetailsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSoftwareImageDetailsGatewayTimeout creates a GetSoftwareImageDetailsGatewayTimeout with default headers values
func NewGetSoftwareImageDetailsGatewayTimeout() *GetSoftwareImageDetailsGatewayTimeout {
	return &GetSoftwareImageDetailsGatewayTimeout{}
}

/*GetSoftwareImageDetailsGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type GetSoftwareImageDetailsGatewayTimeout struct {
}

func (o *GetSoftwareImageDetailsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/image/importation][%d] getSoftwareImageDetailsGatewayTimeout ", 504)
}

func (o *GetSoftwareImageDetailsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
