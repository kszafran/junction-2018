// Code generated by go-swagger; DO NOT EDIT.

package s_w_i_m

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// ImportLocalSoftwareImageReader is a Reader for the ImportLocalSoftwareImage structure.
type ImportLocalSoftwareImageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ImportLocalSoftwareImageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewImportLocalSoftwareImageOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 201:
		result := NewImportLocalSoftwareImageCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 202:
		result := NewImportLocalSoftwareImageAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewImportLocalSoftwareImageNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewImportLocalSoftwareImagePartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewImportLocalSoftwareImageBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewImportLocalSoftwareImageUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewImportLocalSoftwareImageForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewImportLocalSoftwareImageNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewImportLocalSoftwareImageConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewImportLocalSoftwareImageUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewImportLocalSoftwareImageInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewImportLocalSoftwareImageNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewImportLocalSoftwareImageServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewImportLocalSoftwareImageGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewImportLocalSoftwareImageOK creates a ImportLocalSoftwareImageOK with default headers values
func NewImportLocalSoftwareImageOK() *ImportLocalSoftwareImageOK {
	return &ImportLocalSoftwareImageOK{}
}

/*ImportLocalSoftwareImageOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type ImportLocalSoftwareImageOK struct {
	Payload *models.TaskIDResult
}

func (o *ImportLocalSoftwareImageOK) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/image/importation/source/file][%d] importLocalSoftwareImageOK  %+v", 200, o.Payload)
}

func (o *ImportLocalSoftwareImageOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TaskIDResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImportLocalSoftwareImageCreated creates a ImportLocalSoftwareImageCreated with default headers values
func NewImportLocalSoftwareImageCreated() *ImportLocalSoftwareImageCreated {
	return &ImportLocalSoftwareImageCreated{}
}

/*ImportLocalSoftwareImageCreated handles this case with default header values.

The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body.
*/
type ImportLocalSoftwareImageCreated struct {
}

func (o *ImportLocalSoftwareImageCreated) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/image/importation/source/file][%d] importLocalSoftwareImageCreated ", 201)
}

func (o *ImportLocalSoftwareImageCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewImportLocalSoftwareImageAccepted creates a ImportLocalSoftwareImageAccepted with default headers values
func NewImportLocalSoftwareImageAccepted() *ImportLocalSoftwareImageAccepted {
	return &ImportLocalSoftwareImageAccepted{}
}

/*ImportLocalSoftwareImageAccepted handles this case with default header values.

The request was accepted for processing, but the processing has not been completed.
*/
type ImportLocalSoftwareImageAccepted struct {
}

func (o *ImportLocalSoftwareImageAccepted) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/image/importation/source/file][%d] importLocalSoftwareImageAccepted ", 202)
}

func (o *ImportLocalSoftwareImageAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewImportLocalSoftwareImageNoContent creates a ImportLocalSoftwareImageNoContent with default headers values
func NewImportLocalSoftwareImageNoContent() *ImportLocalSoftwareImageNoContent {
	return &ImportLocalSoftwareImageNoContent{}
}

/*ImportLocalSoftwareImageNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type ImportLocalSoftwareImageNoContent struct {
}

func (o *ImportLocalSoftwareImageNoContent) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/image/importation/source/file][%d] importLocalSoftwareImageNoContent ", 204)
}

func (o *ImportLocalSoftwareImageNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewImportLocalSoftwareImagePartialContent creates a ImportLocalSoftwareImagePartialContent with default headers values
func NewImportLocalSoftwareImagePartialContent() *ImportLocalSoftwareImagePartialContent {
	return &ImportLocalSoftwareImagePartialContent{}
}

/*ImportLocalSoftwareImagePartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type ImportLocalSoftwareImagePartialContent struct {
}

func (o *ImportLocalSoftwareImagePartialContent) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/image/importation/source/file][%d] importLocalSoftwareImagePartialContent ", 206)
}

func (o *ImportLocalSoftwareImagePartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewImportLocalSoftwareImageBadRequest creates a ImportLocalSoftwareImageBadRequest with default headers values
func NewImportLocalSoftwareImageBadRequest() *ImportLocalSoftwareImageBadRequest {
	return &ImportLocalSoftwareImageBadRequest{}
}

/*ImportLocalSoftwareImageBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type ImportLocalSoftwareImageBadRequest struct {
}

func (o *ImportLocalSoftwareImageBadRequest) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/image/importation/source/file][%d] importLocalSoftwareImageBadRequest ", 400)
}

func (o *ImportLocalSoftwareImageBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewImportLocalSoftwareImageUnauthorized creates a ImportLocalSoftwareImageUnauthorized with default headers values
func NewImportLocalSoftwareImageUnauthorized() *ImportLocalSoftwareImageUnauthorized {
	return &ImportLocalSoftwareImageUnauthorized{}
}

/*ImportLocalSoftwareImageUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type ImportLocalSoftwareImageUnauthorized struct {
}

func (o *ImportLocalSoftwareImageUnauthorized) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/image/importation/source/file][%d] importLocalSoftwareImageUnauthorized ", 401)
}

func (o *ImportLocalSoftwareImageUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewImportLocalSoftwareImageForbidden creates a ImportLocalSoftwareImageForbidden with default headers values
func NewImportLocalSoftwareImageForbidden() *ImportLocalSoftwareImageForbidden {
	return &ImportLocalSoftwareImageForbidden{}
}

/*ImportLocalSoftwareImageForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type ImportLocalSoftwareImageForbidden struct {
}

func (o *ImportLocalSoftwareImageForbidden) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/image/importation/source/file][%d] importLocalSoftwareImageForbidden ", 403)
}

func (o *ImportLocalSoftwareImageForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewImportLocalSoftwareImageNotFound creates a ImportLocalSoftwareImageNotFound with default headers values
func NewImportLocalSoftwareImageNotFound() *ImportLocalSoftwareImageNotFound {
	return &ImportLocalSoftwareImageNotFound{}
}

/*ImportLocalSoftwareImageNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type ImportLocalSoftwareImageNotFound struct {
}

func (o *ImportLocalSoftwareImageNotFound) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/image/importation/source/file][%d] importLocalSoftwareImageNotFound ", 404)
}

func (o *ImportLocalSoftwareImageNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewImportLocalSoftwareImageConflict creates a ImportLocalSoftwareImageConflict with default headers values
func NewImportLocalSoftwareImageConflict() *ImportLocalSoftwareImageConflict {
	return &ImportLocalSoftwareImageConflict{}
}

/*ImportLocalSoftwareImageConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type ImportLocalSoftwareImageConflict struct {
}

func (o *ImportLocalSoftwareImageConflict) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/image/importation/source/file][%d] importLocalSoftwareImageConflict ", 409)
}

func (o *ImportLocalSoftwareImageConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewImportLocalSoftwareImageUnsupportedMediaType creates a ImportLocalSoftwareImageUnsupportedMediaType with default headers values
func NewImportLocalSoftwareImageUnsupportedMediaType() *ImportLocalSoftwareImageUnsupportedMediaType {
	return &ImportLocalSoftwareImageUnsupportedMediaType{}
}

/*ImportLocalSoftwareImageUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type ImportLocalSoftwareImageUnsupportedMediaType struct {
}

func (o *ImportLocalSoftwareImageUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/image/importation/source/file][%d] importLocalSoftwareImageUnsupportedMediaType ", 415)
}

func (o *ImportLocalSoftwareImageUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewImportLocalSoftwareImageInternalServerError creates a ImportLocalSoftwareImageInternalServerError with default headers values
func NewImportLocalSoftwareImageInternalServerError() *ImportLocalSoftwareImageInternalServerError {
	return &ImportLocalSoftwareImageInternalServerError{}
}

/*ImportLocalSoftwareImageInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type ImportLocalSoftwareImageInternalServerError struct {
}

func (o *ImportLocalSoftwareImageInternalServerError) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/image/importation/source/file][%d] importLocalSoftwareImageInternalServerError ", 500)
}

func (o *ImportLocalSoftwareImageInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewImportLocalSoftwareImageNotImplemented creates a ImportLocalSoftwareImageNotImplemented with default headers values
func NewImportLocalSoftwareImageNotImplemented() *ImportLocalSoftwareImageNotImplemented {
	return &ImportLocalSoftwareImageNotImplemented{}
}

/*ImportLocalSoftwareImageNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type ImportLocalSoftwareImageNotImplemented struct {
}

func (o *ImportLocalSoftwareImageNotImplemented) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/image/importation/source/file][%d] importLocalSoftwareImageNotImplemented ", 501)
}

func (o *ImportLocalSoftwareImageNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewImportLocalSoftwareImageServiceUnavailable creates a ImportLocalSoftwareImageServiceUnavailable with default headers values
func NewImportLocalSoftwareImageServiceUnavailable() *ImportLocalSoftwareImageServiceUnavailable {
	return &ImportLocalSoftwareImageServiceUnavailable{}
}

/*ImportLocalSoftwareImageServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type ImportLocalSoftwareImageServiceUnavailable struct {
}

func (o *ImportLocalSoftwareImageServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/image/importation/source/file][%d] importLocalSoftwareImageServiceUnavailable ", 503)
}

func (o *ImportLocalSoftwareImageServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewImportLocalSoftwareImageGatewayTimeout creates a ImportLocalSoftwareImageGatewayTimeout with default headers values
func NewImportLocalSoftwareImageGatewayTimeout() *ImportLocalSoftwareImageGatewayTimeout {
	return &ImportLocalSoftwareImageGatewayTimeout{}
}

/*ImportLocalSoftwareImageGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type ImportLocalSoftwareImageGatewayTimeout struct {
}

func (o *ImportLocalSoftwareImageGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /dna/intent/api/v1/image/importation/source/file][%d] importLocalSoftwareImageGatewayTimeout ", 504)
}

func (o *ImportLocalSoftwareImageGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
