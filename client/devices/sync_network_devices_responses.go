// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// SyncNetworkDevicesReader is a Reader for the SyncNetworkDevices structure.
type SyncNetworkDevicesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SyncNetworkDevicesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewSyncNetworkDevicesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 201:
		result := NewSyncNetworkDevicesCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 202:
		result := NewSyncNetworkDevicesAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewSyncNetworkDevicesNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewSyncNetworkDevicesPartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewSyncNetworkDevicesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewSyncNetworkDevicesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewSyncNetworkDevicesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewSyncNetworkDevicesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewSyncNetworkDevicesConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewSyncNetworkDevicesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewSyncNetworkDevicesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewSyncNetworkDevicesNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewSyncNetworkDevicesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewSyncNetworkDevicesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSyncNetworkDevicesOK creates a SyncNetworkDevicesOK with default headers values
func NewSyncNetworkDevicesOK() *SyncNetworkDevicesOK {
	return &SyncNetworkDevicesOK{}
}

/*SyncNetworkDevicesOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type SyncNetworkDevicesOK struct {
	Payload *models.TaskIDResult
}

func (o *SyncNetworkDevicesOK) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/network-device/sync][%d] syncNetworkDevicesOK  %+v", 200, o.Payload)
}

func (o *SyncNetworkDevicesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TaskIDResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSyncNetworkDevicesCreated creates a SyncNetworkDevicesCreated with default headers values
func NewSyncNetworkDevicesCreated() *SyncNetworkDevicesCreated {
	return &SyncNetworkDevicesCreated{}
}

/*SyncNetworkDevicesCreated handles this case with default header values.

The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body.
*/
type SyncNetworkDevicesCreated struct {
}

func (o *SyncNetworkDevicesCreated) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/network-device/sync][%d] syncNetworkDevicesCreated ", 201)
}

func (o *SyncNetworkDevicesCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSyncNetworkDevicesAccepted creates a SyncNetworkDevicesAccepted with default headers values
func NewSyncNetworkDevicesAccepted() *SyncNetworkDevicesAccepted {
	return &SyncNetworkDevicesAccepted{}
}

/*SyncNetworkDevicesAccepted handles this case with default header values.

The request was accepted for processing, but the processing has not been completed.
*/
type SyncNetworkDevicesAccepted struct {
}

func (o *SyncNetworkDevicesAccepted) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/network-device/sync][%d] syncNetworkDevicesAccepted ", 202)
}

func (o *SyncNetworkDevicesAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSyncNetworkDevicesNoContent creates a SyncNetworkDevicesNoContent with default headers values
func NewSyncNetworkDevicesNoContent() *SyncNetworkDevicesNoContent {
	return &SyncNetworkDevicesNoContent{}
}

/*SyncNetworkDevicesNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type SyncNetworkDevicesNoContent struct {
}

func (o *SyncNetworkDevicesNoContent) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/network-device/sync][%d] syncNetworkDevicesNoContent ", 204)
}

func (o *SyncNetworkDevicesNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSyncNetworkDevicesPartialContent creates a SyncNetworkDevicesPartialContent with default headers values
func NewSyncNetworkDevicesPartialContent() *SyncNetworkDevicesPartialContent {
	return &SyncNetworkDevicesPartialContent{}
}

/*SyncNetworkDevicesPartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type SyncNetworkDevicesPartialContent struct {
}

func (o *SyncNetworkDevicesPartialContent) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/network-device/sync][%d] syncNetworkDevicesPartialContent ", 206)
}

func (o *SyncNetworkDevicesPartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSyncNetworkDevicesBadRequest creates a SyncNetworkDevicesBadRequest with default headers values
func NewSyncNetworkDevicesBadRequest() *SyncNetworkDevicesBadRequest {
	return &SyncNetworkDevicesBadRequest{}
}

/*SyncNetworkDevicesBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type SyncNetworkDevicesBadRequest struct {
}

func (o *SyncNetworkDevicesBadRequest) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/network-device/sync][%d] syncNetworkDevicesBadRequest ", 400)
}

func (o *SyncNetworkDevicesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSyncNetworkDevicesUnauthorized creates a SyncNetworkDevicesUnauthorized with default headers values
func NewSyncNetworkDevicesUnauthorized() *SyncNetworkDevicesUnauthorized {
	return &SyncNetworkDevicesUnauthorized{}
}

/*SyncNetworkDevicesUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type SyncNetworkDevicesUnauthorized struct {
}

func (o *SyncNetworkDevicesUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/network-device/sync][%d] syncNetworkDevicesUnauthorized ", 401)
}

func (o *SyncNetworkDevicesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSyncNetworkDevicesForbidden creates a SyncNetworkDevicesForbidden with default headers values
func NewSyncNetworkDevicesForbidden() *SyncNetworkDevicesForbidden {
	return &SyncNetworkDevicesForbidden{}
}

/*SyncNetworkDevicesForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type SyncNetworkDevicesForbidden struct {
}

func (o *SyncNetworkDevicesForbidden) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/network-device/sync][%d] syncNetworkDevicesForbidden ", 403)
}

func (o *SyncNetworkDevicesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSyncNetworkDevicesNotFound creates a SyncNetworkDevicesNotFound with default headers values
func NewSyncNetworkDevicesNotFound() *SyncNetworkDevicesNotFound {
	return &SyncNetworkDevicesNotFound{}
}

/*SyncNetworkDevicesNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type SyncNetworkDevicesNotFound struct {
}

func (o *SyncNetworkDevicesNotFound) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/network-device/sync][%d] syncNetworkDevicesNotFound ", 404)
}

func (o *SyncNetworkDevicesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSyncNetworkDevicesConflict creates a SyncNetworkDevicesConflict with default headers values
func NewSyncNetworkDevicesConflict() *SyncNetworkDevicesConflict {
	return &SyncNetworkDevicesConflict{}
}

/*SyncNetworkDevicesConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type SyncNetworkDevicesConflict struct {
}

func (o *SyncNetworkDevicesConflict) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/network-device/sync][%d] syncNetworkDevicesConflict ", 409)
}

func (o *SyncNetworkDevicesConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSyncNetworkDevicesUnsupportedMediaType creates a SyncNetworkDevicesUnsupportedMediaType with default headers values
func NewSyncNetworkDevicesUnsupportedMediaType() *SyncNetworkDevicesUnsupportedMediaType {
	return &SyncNetworkDevicesUnsupportedMediaType{}
}

/*SyncNetworkDevicesUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type SyncNetworkDevicesUnsupportedMediaType struct {
}

func (o *SyncNetworkDevicesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/network-device/sync][%d] syncNetworkDevicesUnsupportedMediaType ", 415)
}

func (o *SyncNetworkDevicesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSyncNetworkDevicesInternalServerError creates a SyncNetworkDevicesInternalServerError with default headers values
func NewSyncNetworkDevicesInternalServerError() *SyncNetworkDevicesInternalServerError {
	return &SyncNetworkDevicesInternalServerError{}
}

/*SyncNetworkDevicesInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type SyncNetworkDevicesInternalServerError struct {
}

func (o *SyncNetworkDevicesInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/network-device/sync][%d] syncNetworkDevicesInternalServerError ", 500)
}

func (o *SyncNetworkDevicesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSyncNetworkDevicesNotImplemented creates a SyncNetworkDevicesNotImplemented with default headers values
func NewSyncNetworkDevicesNotImplemented() *SyncNetworkDevicesNotImplemented {
	return &SyncNetworkDevicesNotImplemented{}
}

/*SyncNetworkDevicesNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type SyncNetworkDevicesNotImplemented struct {
}

func (o *SyncNetworkDevicesNotImplemented) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/network-device/sync][%d] syncNetworkDevicesNotImplemented ", 501)
}

func (o *SyncNetworkDevicesNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSyncNetworkDevicesServiceUnavailable creates a SyncNetworkDevicesServiceUnavailable with default headers values
func NewSyncNetworkDevicesServiceUnavailable() *SyncNetworkDevicesServiceUnavailable {
	return &SyncNetworkDevicesServiceUnavailable{}
}

/*SyncNetworkDevicesServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type SyncNetworkDevicesServiceUnavailable struct {
}

func (o *SyncNetworkDevicesServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/network-device/sync][%d] syncNetworkDevicesServiceUnavailable ", 503)
}

func (o *SyncNetworkDevicesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSyncNetworkDevicesGatewayTimeout creates a SyncNetworkDevicesGatewayTimeout with default headers values
func NewSyncNetworkDevicesGatewayTimeout() *SyncNetworkDevicesGatewayTimeout {
	return &SyncNetworkDevicesGatewayTimeout{}
}

/*SyncNetworkDevicesGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type SyncNetworkDevicesGatewayTimeout struct {
}

func (o *SyncNetworkDevicesGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/network-device/sync][%d] syncNetworkDevicesGatewayTimeout ", 504)
}

func (o *SyncNetworkDevicesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
