// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// GetDeviceListReader is a Reader for the GetDeviceList structure.
type GetDeviceListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDeviceListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetDeviceListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewGetDeviceListNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewGetDeviceListPartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetDeviceListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetDeviceListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetDeviceListForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetDeviceListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewGetDeviceListConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewGetDeviceListUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetDeviceListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewGetDeviceListNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetDeviceListServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetDeviceListGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDeviceListOK creates a GetDeviceListOK with default headers values
func NewGetDeviceListOK() *GetDeviceListOK {
	return &GetDeviceListOK{}
}

/*GetDeviceListOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type GetDeviceListOK struct {
	Payload *models.NetworkDeviceListResult
}

func (o *GetDeviceListOK) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device][%d] getDeviceListOK  %+v", 200, o.Payload)
}

func (o *GetDeviceListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NetworkDeviceListResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeviceListNoContent creates a GetDeviceListNoContent with default headers values
func NewGetDeviceListNoContent() *GetDeviceListNoContent {
	return &GetDeviceListNoContent{}
}

/*GetDeviceListNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type GetDeviceListNoContent struct {
}

func (o *GetDeviceListNoContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device][%d] getDeviceListNoContent ", 204)
}

func (o *GetDeviceListNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceListPartialContent creates a GetDeviceListPartialContent with default headers values
func NewGetDeviceListPartialContent() *GetDeviceListPartialContent {
	return &GetDeviceListPartialContent{}
}

/*GetDeviceListPartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type GetDeviceListPartialContent struct {
}

func (o *GetDeviceListPartialContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device][%d] getDeviceListPartialContent ", 206)
}

func (o *GetDeviceListPartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceListBadRequest creates a GetDeviceListBadRequest with default headers values
func NewGetDeviceListBadRequest() *GetDeviceListBadRequest {
	return &GetDeviceListBadRequest{}
}

/*GetDeviceListBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type GetDeviceListBadRequest struct {
}

func (o *GetDeviceListBadRequest) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device][%d] getDeviceListBadRequest ", 400)
}

func (o *GetDeviceListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceListUnauthorized creates a GetDeviceListUnauthorized with default headers values
func NewGetDeviceListUnauthorized() *GetDeviceListUnauthorized {
	return &GetDeviceListUnauthorized{}
}

/*GetDeviceListUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type GetDeviceListUnauthorized struct {
}

func (o *GetDeviceListUnauthorized) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device][%d] getDeviceListUnauthorized ", 401)
}

func (o *GetDeviceListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceListForbidden creates a GetDeviceListForbidden with default headers values
func NewGetDeviceListForbidden() *GetDeviceListForbidden {
	return &GetDeviceListForbidden{}
}

/*GetDeviceListForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type GetDeviceListForbidden struct {
}

func (o *GetDeviceListForbidden) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device][%d] getDeviceListForbidden ", 403)
}

func (o *GetDeviceListForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceListNotFound creates a GetDeviceListNotFound with default headers values
func NewGetDeviceListNotFound() *GetDeviceListNotFound {
	return &GetDeviceListNotFound{}
}

/*GetDeviceListNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type GetDeviceListNotFound struct {
}

func (o *GetDeviceListNotFound) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device][%d] getDeviceListNotFound ", 404)
}

func (o *GetDeviceListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceListConflict creates a GetDeviceListConflict with default headers values
func NewGetDeviceListConflict() *GetDeviceListConflict {
	return &GetDeviceListConflict{}
}

/*GetDeviceListConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type GetDeviceListConflict struct {
}

func (o *GetDeviceListConflict) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device][%d] getDeviceListConflict ", 409)
}

func (o *GetDeviceListConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceListUnsupportedMediaType creates a GetDeviceListUnsupportedMediaType with default headers values
func NewGetDeviceListUnsupportedMediaType() *GetDeviceListUnsupportedMediaType {
	return &GetDeviceListUnsupportedMediaType{}
}

/*GetDeviceListUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type GetDeviceListUnsupportedMediaType struct {
}

func (o *GetDeviceListUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device][%d] getDeviceListUnsupportedMediaType ", 415)
}

func (o *GetDeviceListUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceListInternalServerError creates a GetDeviceListInternalServerError with default headers values
func NewGetDeviceListInternalServerError() *GetDeviceListInternalServerError {
	return &GetDeviceListInternalServerError{}
}

/*GetDeviceListInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type GetDeviceListInternalServerError struct {
}

func (o *GetDeviceListInternalServerError) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device][%d] getDeviceListInternalServerError ", 500)
}

func (o *GetDeviceListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceListNotImplemented creates a GetDeviceListNotImplemented with default headers values
func NewGetDeviceListNotImplemented() *GetDeviceListNotImplemented {
	return &GetDeviceListNotImplemented{}
}

/*GetDeviceListNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type GetDeviceListNotImplemented struct {
}

func (o *GetDeviceListNotImplemented) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device][%d] getDeviceListNotImplemented ", 501)
}

func (o *GetDeviceListNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceListServiceUnavailable creates a GetDeviceListServiceUnavailable with default headers values
func NewGetDeviceListServiceUnavailable() *GetDeviceListServiceUnavailable {
	return &GetDeviceListServiceUnavailable{}
}

/*GetDeviceListServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type GetDeviceListServiceUnavailable struct {
}

func (o *GetDeviceListServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device][%d] getDeviceListServiceUnavailable ", 503)
}

func (o *GetDeviceListServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceListGatewayTimeout creates a GetDeviceListGatewayTimeout with default headers values
func NewGetDeviceListGatewayTimeout() *GetDeviceListGatewayTimeout {
	return &GetDeviceListGatewayTimeout{}
}

/*GetDeviceListGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type GetDeviceListGatewayTimeout struct {
}

func (o *GetDeviceListGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device][%d] getDeviceListGatewayTimeout ", 504)
}

func (o *GetDeviceListGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
