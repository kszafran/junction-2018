// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// GetDeviceConfigByIDReader is a Reader for the GetDeviceConfigByID structure.
type GetDeviceConfigByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDeviceConfigByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetDeviceConfigByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewGetDeviceConfigByIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewGetDeviceConfigByIDPartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetDeviceConfigByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetDeviceConfigByIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetDeviceConfigByIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetDeviceConfigByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewGetDeviceConfigByIDConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewGetDeviceConfigByIDUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetDeviceConfigByIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewGetDeviceConfigByIDNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetDeviceConfigByIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetDeviceConfigByIDGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDeviceConfigByIDOK creates a GetDeviceConfigByIDOK with default headers values
func NewGetDeviceConfigByIDOK() *GetDeviceConfigByIDOK {
	return &GetDeviceConfigByIDOK{}
}

/*GetDeviceConfigByIDOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type GetDeviceConfigByIDOK struct {
	Payload *models.SuccessResult
}

func (o *GetDeviceConfigByIDOK) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/{networkDeviceId}/config][%d] getDeviceConfigByIdOK  %+v", 200, o.Payload)
}

func (o *GetDeviceConfigByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SuccessResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeviceConfigByIDNoContent creates a GetDeviceConfigByIDNoContent with default headers values
func NewGetDeviceConfigByIDNoContent() *GetDeviceConfigByIDNoContent {
	return &GetDeviceConfigByIDNoContent{}
}

/*GetDeviceConfigByIDNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type GetDeviceConfigByIDNoContent struct {
}

func (o *GetDeviceConfigByIDNoContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/{networkDeviceId}/config][%d] getDeviceConfigByIdNoContent ", 204)
}

func (o *GetDeviceConfigByIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceConfigByIDPartialContent creates a GetDeviceConfigByIDPartialContent with default headers values
func NewGetDeviceConfigByIDPartialContent() *GetDeviceConfigByIDPartialContent {
	return &GetDeviceConfigByIDPartialContent{}
}

/*GetDeviceConfigByIDPartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type GetDeviceConfigByIDPartialContent struct {
}

func (o *GetDeviceConfigByIDPartialContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/{networkDeviceId}/config][%d] getDeviceConfigByIdPartialContent ", 206)
}

func (o *GetDeviceConfigByIDPartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceConfigByIDBadRequest creates a GetDeviceConfigByIDBadRequest with default headers values
func NewGetDeviceConfigByIDBadRequest() *GetDeviceConfigByIDBadRequest {
	return &GetDeviceConfigByIDBadRequest{}
}

/*GetDeviceConfigByIDBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type GetDeviceConfigByIDBadRequest struct {
}

func (o *GetDeviceConfigByIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/{networkDeviceId}/config][%d] getDeviceConfigByIdBadRequest ", 400)
}

func (o *GetDeviceConfigByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceConfigByIDUnauthorized creates a GetDeviceConfigByIDUnauthorized with default headers values
func NewGetDeviceConfigByIDUnauthorized() *GetDeviceConfigByIDUnauthorized {
	return &GetDeviceConfigByIDUnauthorized{}
}

/*GetDeviceConfigByIDUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type GetDeviceConfigByIDUnauthorized struct {
}

func (o *GetDeviceConfigByIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/{networkDeviceId}/config][%d] getDeviceConfigByIdUnauthorized ", 401)
}

func (o *GetDeviceConfigByIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceConfigByIDForbidden creates a GetDeviceConfigByIDForbidden with default headers values
func NewGetDeviceConfigByIDForbidden() *GetDeviceConfigByIDForbidden {
	return &GetDeviceConfigByIDForbidden{}
}

/*GetDeviceConfigByIDForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type GetDeviceConfigByIDForbidden struct {
}

func (o *GetDeviceConfigByIDForbidden) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/{networkDeviceId}/config][%d] getDeviceConfigByIdForbidden ", 403)
}

func (o *GetDeviceConfigByIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceConfigByIDNotFound creates a GetDeviceConfigByIDNotFound with default headers values
func NewGetDeviceConfigByIDNotFound() *GetDeviceConfigByIDNotFound {
	return &GetDeviceConfigByIDNotFound{}
}

/*GetDeviceConfigByIDNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type GetDeviceConfigByIDNotFound struct {
}

func (o *GetDeviceConfigByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/{networkDeviceId}/config][%d] getDeviceConfigByIdNotFound ", 404)
}

func (o *GetDeviceConfigByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceConfigByIDConflict creates a GetDeviceConfigByIDConflict with default headers values
func NewGetDeviceConfigByIDConflict() *GetDeviceConfigByIDConflict {
	return &GetDeviceConfigByIDConflict{}
}

/*GetDeviceConfigByIDConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type GetDeviceConfigByIDConflict struct {
}

func (o *GetDeviceConfigByIDConflict) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/{networkDeviceId}/config][%d] getDeviceConfigByIdConflict ", 409)
}

func (o *GetDeviceConfigByIDConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceConfigByIDUnsupportedMediaType creates a GetDeviceConfigByIDUnsupportedMediaType with default headers values
func NewGetDeviceConfigByIDUnsupportedMediaType() *GetDeviceConfigByIDUnsupportedMediaType {
	return &GetDeviceConfigByIDUnsupportedMediaType{}
}

/*GetDeviceConfigByIDUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type GetDeviceConfigByIDUnsupportedMediaType struct {
}

func (o *GetDeviceConfigByIDUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/{networkDeviceId}/config][%d] getDeviceConfigByIdUnsupportedMediaType ", 415)
}

func (o *GetDeviceConfigByIDUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceConfigByIDInternalServerError creates a GetDeviceConfigByIDInternalServerError with default headers values
func NewGetDeviceConfigByIDInternalServerError() *GetDeviceConfigByIDInternalServerError {
	return &GetDeviceConfigByIDInternalServerError{}
}

/*GetDeviceConfigByIDInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type GetDeviceConfigByIDInternalServerError struct {
}

func (o *GetDeviceConfigByIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/{networkDeviceId}/config][%d] getDeviceConfigByIdInternalServerError ", 500)
}

func (o *GetDeviceConfigByIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceConfigByIDNotImplemented creates a GetDeviceConfigByIDNotImplemented with default headers values
func NewGetDeviceConfigByIDNotImplemented() *GetDeviceConfigByIDNotImplemented {
	return &GetDeviceConfigByIDNotImplemented{}
}

/*GetDeviceConfigByIDNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type GetDeviceConfigByIDNotImplemented struct {
}

func (o *GetDeviceConfigByIDNotImplemented) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/{networkDeviceId}/config][%d] getDeviceConfigByIdNotImplemented ", 501)
}

func (o *GetDeviceConfigByIDNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceConfigByIDServiceUnavailable creates a GetDeviceConfigByIDServiceUnavailable with default headers values
func NewGetDeviceConfigByIDServiceUnavailable() *GetDeviceConfigByIDServiceUnavailable {
	return &GetDeviceConfigByIDServiceUnavailable{}
}

/*GetDeviceConfigByIDServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type GetDeviceConfigByIDServiceUnavailable struct {
}

func (o *GetDeviceConfigByIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/{networkDeviceId}/config][%d] getDeviceConfigByIdServiceUnavailable ", 503)
}

func (o *GetDeviceConfigByIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceConfigByIDGatewayTimeout creates a GetDeviceConfigByIDGatewayTimeout with default headers values
func NewGetDeviceConfigByIDGatewayTimeout() *GetDeviceConfigByIDGatewayTimeout {
	return &GetDeviceConfigByIDGatewayTimeout{}
}

/*GetDeviceConfigByIDGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type GetDeviceConfigByIDGatewayTimeout struct {
}

func (o *GetDeviceConfigByIDGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/{networkDeviceId}/config][%d] getDeviceConfigByIdGatewayTimeout ", 504)
}

func (o *GetDeviceConfigByIDGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
