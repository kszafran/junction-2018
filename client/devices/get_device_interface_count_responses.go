// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// GetDeviceInterfaceCountReader is a Reader for the GetDeviceInterfaceCount structure.
type GetDeviceInterfaceCountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDeviceInterfaceCountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetDeviceInterfaceCountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewGetDeviceInterfaceCountNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewGetDeviceInterfaceCountPartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetDeviceInterfaceCountBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetDeviceInterfaceCountUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetDeviceInterfaceCountForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetDeviceInterfaceCountNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewGetDeviceInterfaceCountConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewGetDeviceInterfaceCountUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetDeviceInterfaceCountInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewGetDeviceInterfaceCountNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetDeviceInterfaceCountServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetDeviceInterfaceCountGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDeviceInterfaceCountOK creates a GetDeviceInterfaceCountOK with default headers values
func NewGetDeviceInterfaceCountOK() *GetDeviceInterfaceCountOK {
	return &GetDeviceInterfaceCountOK{}
}

/*GetDeviceInterfaceCountOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type GetDeviceInterfaceCountOK struct {
	Payload *models.CountResult
}

func (o *GetDeviceInterfaceCountOK) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/count][%d] getDeviceInterfaceCountOK  %+v", 200, o.Payload)
}

func (o *GetDeviceInterfaceCountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CountResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeviceInterfaceCountNoContent creates a GetDeviceInterfaceCountNoContent with default headers values
func NewGetDeviceInterfaceCountNoContent() *GetDeviceInterfaceCountNoContent {
	return &GetDeviceInterfaceCountNoContent{}
}

/*GetDeviceInterfaceCountNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type GetDeviceInterfaceCountNoContent struct {
}

func (o *GetDeviceInterfaceCountNoContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/count][%d] getDeviceInterfaceCountNoContent ", 204)
}

func (o *GetDeviceInterfaceCountNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceInterfaceCountPartialContent creates a GetDeviceInterfaceCountPartialContent with default headers values
func NewGetDeviceInterfaceCountPartialContent() *GetDeviceInterfaceCountPartialContent {
	return &GetDeviceInterfaceCountPartialContent{}
}

/*GetDeviceInterfaceCountPartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type GetDeviceInterfaceCountPartialContent struct {
}

func (o *GetDeviceInterfaceCountPartialContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/count][%d] getDeviceInterfaceCountPartialContent ", 206)
}

func (o *GetDeviceInterfaceCountPartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceInterfaceCountBadRequest creates a GetDeviceInterfaceCountBadRequest with default headers values
func NewGetDeviceInterfaceCountBadRequest() *GetDeviceInterfaceCountBadRequest {
	return &GetDeviceInterfaceCountBadRequest{}
}

/*GetDeviceInterfaceCountBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type GetDeviceInterfaceCountBadRequest struct {
}

func (o *GetDeviceInterfaceCountBadRequest) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/count][%d] getDeviceInterfaceCountBadRequest ", 400)
}

func (o *GetDeviceInterfaceCountBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceInterfaceCountUnauthorized creates a GetDeviceInterfaceCountUnauthorized with default headers values
func NewGetDeviceInterfaceCountUnauthorized() *GetDeviceInterfaceCountUnauthorized {
	return &GetDeviceInterfaceCountUnauthorized{}
}

/*GetDeviceInterfaceCountUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type GetDeviceInterfaceCountUnauthorized struct {
}

func (o *GetDeviceInterfaceCountUnauthorized) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/count][%d] getDeviceInterfaceCountUnauthorized ", 401)
}

func (o *GetDeviceInterfaceCountUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceInterfaceCountForbidden creates a GetDeviceInterfaceCountForbidden with default headers values
func NewGetDeviceInterfaceCountForbidden() *GetDeviceInterfaceCountForbidden {
	return &GetDeviceInterfaceCountForbidden{}
}

/*GetDeviceInterfaceCountForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type GetDeviceInterfaceCountForbidden struct {
}

func (o *GetDeviceInterfaceCountForbidden) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/count][%d] getDeviceInterfaceCountForbidden ", 403)
}

func (o *GetDeviceInterfaceCountForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceInterfaceCountNotFound creates a GetDeviceInterfaceCountNotFound with default headers values
func NewGetDeviceInterfaceCountNotFound() *GetDeviceInterfaceCountNotFound {
	return &GetDeviceInterfaceCountNotFound{}
}

/*GetDeviceInterfaceCountNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type GetDeviceInterfaceCountNotFound struct {
}

func (o *GetDeviceInterfaceCountNotFound) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/count][%d] getDeviceInterfaceCountNotFound ", 404)
}

func (o *GetDeviceInterfaceCountNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceInterfaceCountConflict creates a GetDeviceInterfaceCountConflict with default headers values
func NewGetDeviceInterfaceCountConflict() *GetDeviceInterfaceCountConflict {
	return &GetDeviceInterfaceCountConflict{}
}

/*GetDeviceInterfaceCountConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type GetDeviceInterfaceCountConflict struct {
}

func (o *GetDeviceInterfaceCountConflict) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/count][%d] getDeviceInterfaceCountConflict ", 409)
}

func (o *GetDeviceInterfaceCountConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceInterfaceCountUnsupportedMediaType creates a GetDeviceInterfaceCountUnsupportedMediaType with default headers values
func NewGetDeviceInterfaceCountUnsupportedMediaType() *GetDeviceInterfaceCountUnsupportedMediaType {
	return &GetDeviceInterfaceCountUnsupportedMediaType{}
}

/*GetDeviceInterfaceCountUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type GetDeviceInterfaceCountUnsupportedMediaType struct {
}

func (o *GetDeviceInterfaceCountUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/count][%d] getDeviceInterfaceCountUnsupportedMediaType ", 415)
}

func (o *GetDeviceInterfaceCountUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceInterfaceCountInternalServerError creates a GetDeviceInterfaceCountInternalServerError with default headers values
func NewGetDeviceInterfaceCountInternalServerError() *GetDeviceInterfaceCountInternalServerError {
	return &GetDeviceInterfaceCountInternalServerError{}
}

/*GetDeviceInterfaceCountInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type GetDeviceInterfaceCountInternalServerError struct {
}

func (o *GetDeviceInterfaceCountInternalServerError) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/count][%d] getDeviceInterfaceCountInternalServerError ", 500)
}

func (o *GetDeviceInterfaceCountInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceInterfaceCountNotImplemented creates a GetDeviceInterfaceCountNotImplemented with default headers values
func NewGetDeviceInterfaceCountNotImplemented() *GetDeviceInterfaceCountNotImplemented {
	return &GetDeviceInterfaceCountNotImplemented{}
}

/*GetDeviceInterfaceCountNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type GetDeviceInterfaceCountNotImplemented struct {
}

func (o *GetDeviceInterfaceCountNotImplemented) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/count][%d] getDeviceInterfaceCountNotImplemented ", 501)
}

func (o *GetDeviceInterfaceCountNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceInterfaceCountServiceUnavailable creates a GetDeviceInterfaceCountServiceUnavailable with default headers values
func NewGetDeviceInterfaceCountServiceUnavailable() *GetDeviceInterfaceCountServiceUnavailable {
	return &GetDeviceInterfaceCountServiceUnavailable{}
}

/*GetDeviceInterfaceCountServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type GetDeviceInterfaceCountServiceUnavailable struct {
}

func (o *GetDeviceInterfaceCountServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/count][%d] getDeviceInterfaceCountServiceUnavailable ", 503)
}

func (o *GetDeviceInterfaceCountServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceInterfaceCountGatewayTimeout creates a GetDeviceInterfaceCountGatewayTimeout with default headers values
func NewGetDeviceInterfaceCountGatewayTimeout() *GetDeviceInterfaceCountGatewayTimeout {
	return &GetDeviceInterfaceCountGatewayTimeout{}
}

/*GetDeviceInterfaceCountGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type GetDeviceInterfaceCountGatewayTimeout struct {
}

func (o *GetDeviceInterfaceCountGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/count][%d] getDeviceInterfaceCountGatewayTimeout ", 504)
}

func (o *GetDeviceInterfaceCountGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
