// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// GetDeviceInterfaceVLANsReader is a Reader for the GetDeviceInterfaceVLANs structure.
type GetDeviceInterfaceVLANsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDeviceInterfaceVLANsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetDeviceInterfaceVLANsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewGetDeviceInterfaceVLANsNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewGetDeviceInterfaceVLANsPartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetDeviceInterfaceVLANsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetDeviceInterfaceVLANsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetDeviceInterfaceVLANsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetDeviceInterfaceVLANsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewGetDeviceInterfaceVLANsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewGetDeviceInterfaceVLANsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetDeviceInterfaceVLANsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewGetDeviceInterfaceVLANsNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetDeviceInterfaceVLANsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetDeviceInterfaceVLANsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDeviceInterfaceVLANsOK creates a GetDeviceInterfaceVLANsOK with default headers values
func NewGetDeviceInterfaceVLANsOK() *GetDeviceInterfaceVLANsOK {
	return &GetDeviceInterfaceVLANsOK{}
}

/*GetDeviceInterfaceVLANsOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type GetDeviceInterfaceVLANsOK struct {
	Payload *models.VlanListResult
}

func (o *GetDeviceInterfaceVLANsOK) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/{id}/vlan][%d] getDeviceInterfaceVLANsOK  %+v", 200, o.Payload)
}

func (o *GetDeviceInterfaceVLANsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VlanListResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeviceInterfaceVLANsNoContent creates a GetDeviceInterfaceVLANsNoContent with default headers values
func NewGetDeviceInterfaceVLANsNoContent() *GetDeviceInterfaceVLANsNoContent {
	return &GetDeviceInterfaceVLANsNoContent{}
}

/*GetDeviceInterfaceVLANsNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type GetDeviceInterfaceVLANsNoContent struct {
}

func (o *GetDeviceInterfaceVLANsNoContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/{id}/vlan][%d] getDeviceInterfaceVLANsNoContent ", 204)
}

func (o *GetDeviceInterfaceVLANsNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceInterfaceVLANsPartialContent creates a GetDeviceInterfaceVLANsPartialContent with default headers values
func NewGetDeviceInterfaceVLANsPartialContent() *GetDeviceInterfaceVLANsPartialContent {
	return &GetDeviceInterfaceVLANsPartialContent{}
}

/*GetDeviceInterfaceVLANsPartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type GetDeviceInterfaceVLANsPartialContent struct {
}

func (o *GetDeviceInterfaceVLANsPartialContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/{id}/vlan][%d] getDeviceInterfaceVLANsPartialContent ", 206)
}

func (o *GetDeviceInterfaceVLANsPartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceInterfaceVLANsBadRequest creates a GetDeviceInterfaceVLANsBadRequest with default headers values
func NewGetDeviceInterfaceVLANsBadRequest() *GetDeviceInterfaceVLANsBadRequest {
	return &GetDeviceInterfaceVLANsBadRequest{}
}

/*GetDeviceInterfaceVLANsBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type GetDeviceInterfaceVLANsBadRequest struct {
}

func (o *GetDeviceInterfaceVLANsBadRequest) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/{id}/vlan][%d] getDeviceInterfaceVLANsBadRequest ", 400)
}

func (o *GetDeviceInterfaceVLANsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceInterfaceVLANsUnauthorized creates a GetDeviceInterfaceVLANsUnauthorized with default headers values
func NewGetDeviceInterfaceVLANsUnauthorized() *GetDeviceInterfaceVLANsUnauthorized {
	return &GetDeviceInterfaceVLANsUnauthorized{}
}

/*GetDeviceInterfaceVLANsUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type GetDeviceInterfaceVLANsUnauthorized struct {
}

func (o *GetDeviceInterfaceVLANsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/{id}/vlan][%d] getDeviceInterfaceVLANsUnauthorized ", 401)
}

func (o *GetDeviceInterfaceVLANsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceInterfaceVLANsForbidden creates a GetDeviceInterfaceVLANsForbidden with default headers values
func NewGetDeviceInterfaceVLANsForbidden() *GetDeviceInterfaceVLANsForbidden {
	return &GetDeviceInterfaceVLANsForbidden{}
}

/*GetDeviceInterfaceVLANsForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type GetDeviceInterfaceVLANsForbidden struct {
}

func (o *GetDeviceInterfaceVLANsForbidden) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/{id}/vlan][%d] getDeviceInterfaceVLANsForbidden ", 403)
}

func (o *GetDeviceInterfaceVLANsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceInterfaceVLANsNotFound creates a GetDeviceInterfaceVLANsNotFound with default headers values
func NewGetDeviceInterfaceVLANsNotFound() *GetDeviceInterfaceVLANsNotFound {
	return &GetDeviceInterfaceVLANsNotFound{}
}

/*GetDeviceInterfaceVLANsNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type GetDeviceInterfaceVLANsNotFound struct {
}

func (o *GetDeviceInterfaceVLANsNotFound) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/{id}/vlan][%d] getDeviceInterfaceVLANsNotFound ", 404)
}

func (o *GetDeviceInterfaceVLANsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceInterfaceVLANsConflict creates a GetDeviceInterfaceVLANsConflict with default headers values
func NewGetDeviceInterfaceVLANsConflict() *GetDeviceInterfaceVLANsConflict {
	return &GetDeviceInterfaceVLANsConflict{}
}

/*GetDeviceInterfaceVLANsConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type GetDeviceInterfaceVLANsConflict struct {
}

func (o *GetDeviceInterfaceVLANsConflict) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/{id}/vlan][%d] getDeviceInterfaceVLANsConflict ", 409)
}

func (o *GetDeviceInterfaceVLANsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceInterfaceVLANsUnsupportedMediaType creates a GetDeviceInterfaceVLANsUnsupportedMediaType with default headers values
func NewGetDeviceInterfaceVLANsUnsupportedMediaType() *GetDeviceInterfaceVLANsUnsupportedMediaType {
	return &GetDeviceInterfaceVLANsUnsupportedMediaType{}
}

/*GetDeviceInterfaceVLANsUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type GetDeviceInterfaceVLANsUnsupportedMediaType struct {
}

func (o *GetDeviceInterfaceVLANsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/{id}/vlan][%d] getDeviceInterfaceVLANsUnsupportedMediaType ", 415)
}

func (o *GetDeviceInterfaceVLANsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceInterfaceVLANsInternalServerError creates a GetDeviceInterfaceVLANsInternalServerError with default headers values
func NewGetDeviceInterfaceVLANsInternalServerError() *GetDeviceInterfaceVLANsInternalServerError {
	return &GetDeviceInterfaceVLANsInternalServerError{}
}

/*GetDeviceInterfaceVLANsInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type GetDeviceInterfaceVLANsInternalServerError struct {
}

func (o *GetDeviceInterfaceVLANsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/{id}/vlan][%d] getDeviceInterfaceVLANsInternalServerError ", 500)
}

func (o *GetDeviceInterfaceVLANsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceInterfaceVLANsNotImplemented creates a GetDeviceInterfaceVLANsNotImplemented with default headers values
func NewGetDeviceInterfaceVLANsNotImplemented() *GetDeviceInterfaceVLANsNotImplemented {
	return &GetDeviceInterfaceVLANsNotImplemented{}
}

/*GetDeviceInterfaceVLANsNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type GetDeviceInterfaceVLANsNotImplemented struct {
}

func (o *GetDeviceInterfaceVLANsNotImplemented) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/{id}/vlan][%d] getDeviceInterfaceVLANsNotImplemented ", 501)
}

func (o *GetDeviceInterfaceVLANsNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceInterfaceVLANsServiceUnavailable creates a GetDeviceInterfaceVLANsServiceUnavailable with default headers values
func NewGetDeviceInterfaceVLANsServiceUnavailable() *GetDeviceInterfaceVLANsServiceUnavailable {
	return &GetDeviceInterfaceVLANsServiceUnavailable{}
}

/*GetDeviceInterfaceVLANsServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type GetDeviceInterfaceVLANsServiceUnavailable struct {
}

func (o *GetDeviceInterfaceVLANsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/{id}/vlan][%d] getDeviceInterfaceVLANsServiceUnavailable ", 503)
}

func (o *GetDeviceInterfaceVLANsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceInterfaceVLANsGatewayTimeout creates a GetDeviceInterfaceVLANsGatewayTimeout with default headers values
func NewGetDeviceInterfaceVLANsGatewayTimeout() *GetDeviceInterfaceVLANsGatewayTimeout {
	return &GetDeviceInterfaceVLANsGatewayTimeout{}
}

/*GetDeviceInterfaceVLANsGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type GetDeviceInterfaceVLANsGatewayTimeout struct {
}

func (o *GetDeviceInterfaceVLANsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/{id}/vlan][%d] getDeviceInterfaceVLANsGatewayTimeout ", 504)
}

func (o *GetDeviceInterfaceVLANsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
