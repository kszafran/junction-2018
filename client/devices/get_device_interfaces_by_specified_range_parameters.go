// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetDeviceInterfacesBySpecifiedRangeParams creates a new GetDeviceInterfacesBySpecifiedRangeParams object
// with the default values initialized.
func NewGetDeviceInterfacesBySpecifiedRangeParams() *GetDeviceInterfacesBySpecifiedRangeParams {
	var ()
	return &GetDeviceInterfacesBySpecifiedRangeParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetDeviceInterfacesBySpecifiedRangeParamsWithTimeout creates a new GetDeviceInterfacesBySpecifiedRangeParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetDeviceInterfacesBySpecifiedRangeParamsWithTimeout(timeout time.Duration) *GetDeviceInterfacesBySpecifiedRangeParams {
	var ()
	return &GetDeviceInterfacesBySpecifiedRangeParams{

		timeout: timeout,
	}
}

// NewGetDeviceInterfacesBySpecifiedRangeParamsWithContext creates a new GetDeviceInterfacesBySpecifiedRangeParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetDeviceInterfacesBySpecifiedRangeParamsWithContext(ctx context.Context) *GetDeviceInterfacesBySpecifiedRangeParams {
	var ()
	return &GetDeviceInterfacesBySpecifiedRangeParams{

		Context: ctx,
	}
}

// NewGetDeviceInterfacesBySpecifiedRangeParamsWithHTTPClient creates a new GetDeviceInterfacesBySpecifiedRangeParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetDeviceInterfacesBySpecifiedRangeParamsWithHTTPClient(client *http.Client) *GetDeviceInterfacesBySpecifiedRangeParams {
	var ()
	return &GetDeviceInterfacesBySpecifiedRangeParams{
		HTTPClient: client,
	}
}

/*GetDeviceInterfacesBySpecifiedRangeParams contains all the parameters to send to the API endpoint
for the get device interfaces by specified range operation typically these are written to a http.Request
*/
type GetDeviceInterfacesBySpecifiedRangeParams struct {

	/*DeviceID
	  Device ID

	*/
	DeviceID string
	/*RecordsToReturn
	  Number of records to return

	*/
	RecordsToReturn int64
	/*StartIndex
	  Start index

	*/
	StartIndex int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get device interfaces by specified range params
func (o *GetDeviceInterfacesBySpecifiedRangeParams) WithTimeout(timeout time.Duration) *GetDeviceInterfacesBySpecifiedRangeParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get device interfaces by specified range params
func (o *GetDeviceInterfacesBySpecifiedRangeParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get device interfaces by specified range params
func (o *GetDeviceInterfacesBySpecifiedRangeParams) WithContext(ctx context.Context) *GetDeviceInterfacesBySpecifiedRangeParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get device interfaces by specified range params
func (o *GetDeviceInterfacesBySpecifiedRangeParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get device interfaces by specified range params
func (o *GetDeviceInterfacesBySpecifiedRangeParams) WithHTTPClient(client *http.Client) *GetDeviceInterfacesBySpecifiedRangeParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get device interfaces by specified range params
func (o *GetDeviceInterfacesBySpecifiedRangeParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDeviceID adds the deviceID to the get device interfaces by specified range params
func (o *GetDeviceInterfacesBySpecifiedRangeParams) WithDeviceID(deviceID string) *GetDeviceInterfacesBySpecifiedRangeParams {
	o.SetDeviceID(deviceID)
	return o
}

// SetDeviceID adds the deviceId to the get device interfaces by specified range params
func (o *GetDeviceInterfacesBySpecifiedRangeParams) SetDeviceID(deviceID string) {
	o.DeviceID = deviceID
}

// WithRecordsToReturn adds the recordsToReturn to the get device interfaces by specified range params
func (o *GetDeviceInterfacesBySpecifiedRangeParams) WithRecordsToReturn(recordsToReturn int64) *GetDeviceInterfacesBySpecifiedRangeParams {
	o.SetRecordsToReturn(recordsToReturn)
	return o
}

// SetRecordsToReturn adds the recordsToReturn to the get device interfaces by specified range params
func (o *GetDeviceInterfacesBySpecifiedRangeParams) SetRecordsToReturn(recordsToReturn int64) {
	o.RecordsToReturn = recordsToReturn
}

// WithStartIndex adds the startIndex to the get device interfaces by specified range params
func (o *GetDeviceInterfacesBySpecifiedRangeParams) WithStartIndex(startIndex int64) *GetDeviceInterfacesBySpecifiedRangeParams {
	o.SetStartIndex(startIndex)
	return o
}

// SetStartIndex adds the startIndex to the get device interfaces by specified range params
func (o *GetDeviceInterfacesBySpecifiedRangeParams) SetStartIndex(startIndex int64) {
	o.StartIndex = startIndex
}

// WriteToRequest writes these params to a swagger request
func (o *GetDeviceInterfacesBySpecifiedRangeParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param deviceId
	if err := r.SetPathParam("deviceId", o.DeviceID); err != nil {
		return err
	}

	// path param recordsToReturn
	if err := r.SetPathParam("recordsToReturn", swag.FormatInt64(o.RecordsToReturn)); err != nil {
		return err
	}

	// path param startIndex
	if err := r.SetPathParam("startIndex", swag.FormatInt64(o.StartIndex)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
