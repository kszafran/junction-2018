// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// GetDeviceCountReader is a Reader for the GetDeviceCount structure.
type GetDeviceCountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDeviceCountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetDeviceCountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewGetDeviceCountNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewGetDeviceCountPartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetDeviceCountBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetDeviceCountUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetDeviceCountForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetDeviceCountNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewGetDeviceCountConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewGetDeviceCountUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetDeviceCountInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewGetDeviceCountNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetDeviceCountServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetDeviceCountGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDeviceCountOK creates a GetDeviceCountOK with default headers values
func NewGetDeviceCountOK() *GetDeviceCountOK {
	return &GetDeviceCountOK{}
}

/*GetDeviceCountOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type GetDeviceCountOK struct {
	Payload *models.CountResult
}

func (o *GetDeviceCountOK) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/count][%d] getDeviceCountOK  %+v", 200, o.Payload)
}

func (o *GetDeviceCountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CountResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeviceCountNoContent creates a GetDeviceCountNoContent with default headers values
func NewGetDeviceCountNoContent() *GetDeviceCountNoContent {
	return &GetDeviceCountNoContent{}
}

/*GetDeviceCountNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type GetDeviceCountNoContent struct {
}

func (o *GetDeviceCountNoContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/count][%d] getDeviceCountNoContent ", 204)
}

func (o *GetDeviceCountNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceCountPartialContent creates a GetDeviceCountPartialContent with default headers values
func NewGetDeviceCountPartialContent() *GetDeviceCountPartialContent {
	return &GetDeviceCountPartialContent{}
}

/*GetDeviceCountPartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type GetDeviceCountPartialContent struct {
}

func (o *GetDeviceCountPartialContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/count][%d] getDeviceCountPartialContent ", 206)
}

func (o *GetDeviceCountPartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceCountBadRequest creates a GetDeviceCountBadRequest with default headers values
func NewGetDeviceCountBadRequest() *GetDeviceCountBadRequest {
	return &GetDeviceCountBadRequest{}
}

/*GetDeviceCountBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type GetDeviceCountBadRequest struct {
}

func (o *GetDeviceCountBadRequest) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/count][%d] getDeviceCountBadRequest ", 400)
}

func (o *GetDeviceCountBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceCountUnauthorized creates a GetDeviceCountUnauthorized with default headers values
func NewGetDeviceCountUnauthorized() *GetDeviceCountUnauthorized {
	return &GetDeviceCountUnauthorized{}
}

/*GetDeviceCountUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type GetDeviceCountUnauthorized struct {
}

func (o *GetDeviceCountUnauthorized) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/count][%d] getDeviceCountUnauthorized ", 401)
}

func (o *GetDeviceCountUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceCountForbidden creates a GetDeviceCountForbidden with default headers values
func NewGetDeviceCountForbidden() *GetDeviceCountForbidden {
	return &GetDeviceCountForbidden{}
}

/*GetDeviceCountForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type GetDeviceCountForbidden struct {
}

func (o *GetDeviceCountForbidden) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/count][%d] getDeviceCountForbidden ", 403)
}

func (o *GetDeviceCountForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceCountNotFound creates a GetDeviceCountNotFound with default headers values
func NewGetDeviceCountNotFound() *GetDeviceCountNotFound {
	return &GetDeviceCountNotFound{}
}

/*GetDeviceCountNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type GetDeviceCountNotFound struct {
}

func (o *GetDeviceCountNotFound) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/count][%d] getDeviceCountNotFound ", 404)
}

func (o *GetDeviceCountNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceCountConflict creates a GetDeviceCountConflict with default headers values
func NewGetDeviceCountConflict() *GetDeviceCountConflict {
	return &GetDeviceCountConflict{}
}

/*GetDeviceCountConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type GetDeviceCountConflict struct {
}

func (o *GetDeviceCountConflict) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/count][%d] getDeviceCountConflict ", 409)
}

func (o *GetDeviceCountConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceCountUnsupportedMediaType creates a GetDeviceCountUnsupportedMediaType with default headers values
func NewGetDeviceCountUnsupportedMediaType() *GetDeviceCountUnsupportedMediaType {
	return &GetDeviceCountUnsupportedMediaType{}
}

/*GetDeviceCountUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type GetDeviceCountUnsupportedMediaType struct {
}

func (o *GetDeviceCountUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/count][%d] getDeviceCountUnsupportedMediaType ", 415)
}

func (o *GetDeviceCountUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceCountInternalServerError creates a GetDeviceCountInternalServerError with default headers values
func NewGetDeviceCountInternalServerError() *GetDeviceCountInternalServerError {
	return &GetDeviceCountInternalServerError{}
}

/*GetDeviceCountInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type GetDeviceCountInternalServerError struct {
}

func (o *GetDeviceCountInternalServerError) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/count][%d] getDeviceCountInternalServerError ", 500)
}

func (o *GetDeviceCountInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceCountNotImplemented creates a GetDeviceCountNotImplemented with default headers values
func NewGetDeviceCountNotImplemented() *GetDeviceCountNotImplemented {
	return &GetDeviceCountNotImplemented{}
}

/*GetDeviceCountNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type GetDeviceCountNotImplemented struct {
}

func (o *GetDeviceCountNotImplemented) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/count][%d] getDeviceCountNotImplemented ", 501)
}

func (o *GetDeviceCountNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceCountServiceUnavailable creates a GetDeviceCountServiceUnavailable with default headers values
func NewGetDeviceCountServiceUnavailable() *GetDeviceCountServiceUnavailable {
	return &GetDeviceCountServiceUnavailable{}
}

/*GetDeviceCountServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type GetDeviceCountServiceUnavailable struct {
}

func (o *GetDeviceCountServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/count][%d] getDeviceCountServiceUnavailable ", 503)
}

func (o *GetDeviceCountServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceCountGatewayTimeout creates a GetDeviceCountGatewayTimeout with default headers values
func NewGetDeviceCountGatewayTimeout() *GetDeviceCountGatewayTimeout {
	return &GetDeviceCountGatewayTimeout{}
}

/*GetDeviceCountGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type GetDeviceCountGatewayTimeout struct {
}

func (o *GetDeviceCountGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/count][%d] getDeviceCountGatewayTimeout ", 504)
}

func (o *GetDeviceCountGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
