// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// GetDeviceConfigCountReader is a Reader for the GetDeviceConfigCount structure.
type GetDeviceConfigCountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDeviceConfigCountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetDeviceConfigCountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewGetDeviceConfigCountNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewGetDeviceConfigCountPartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetDeviceConfigCountBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetDeviceConfigCountUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetDeviceConfigCountForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetDeviceConfigCountNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewGetDeviceConfigCountConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewGetDeviceConfigCountUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetDeviceConfigCountInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewGetDeviceConfigCountNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetDeviceConfigCountServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetDeviceConfigCountGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDeviceConfigCountOK creates a GetDeviceConfigCountOK with default headers values
func NewGetDeviceConfigCountOK() *GetDeviceConfigCountOK {
	return &GetDeviceConfigCountOK{}
}

/*GetDeviceConfigCountOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type GetDeviceConfigCountOK struct {
	Payload *models.CountResult
}

func (o *GetDeviceConfigCountOK) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/config/count][%d] getDeviceConfigCountOK  %+v", 200, o.Payload)
}

func (o *GetDeviceConfigCountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CountResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeviceConfigCountNoContent creates a GetDeviceConfigCountNoContent with default headers values
func NewGetDeviceConfigCountNoContent() *GetDeviceConfigCountNoContent {
	return &GetDeviceConfigCountNoContent{}
}

/*GetDeviceConfigCountNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type GetDeviceConfigCountNoContent struct {
}

func (o *GetDeviceConfigCountNoContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/config/count][%d] getDeviceConfigCountNoContent ", 204)
}

func (o *GetDeviceConfigCountNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceConfigCountPartialContent creates a GetDeviceConfigCountPartialContent with default headers values
func NewGetDeviceConfigCountPartialContent() *GetDeviceConfigCountPartialContent {
	return &GetDeviceConfigCountPartialContent{}
}

/*GetDeviceConfigCountPartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type GetDeviceConfigCountPartialContent struct {
}

func (o *GetDeviceConfigCountPartialContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/config/count][%d] getDeviceConfigCountPartialContent ", 206)
}

func (o *GetDeviceConfigCountPartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceConfigCountBadRequest creates a GetDeviceConfigCountBadRequest with default headers values
func NewGetDeviceConfigCountBadRequest() *GetDeviceConfigCountBadRequest {
	return &GetDeviceConfigCountBadRequest{}
}

/*GetDeviceConfigCountBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type GetDeviceConfigCountBadRequest struct {
}

func (o *GetDeviceConfigCountBadRequest) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/config/count][%d] getDeviceConfigCountBadRequest ", 400)
}

func (o *GetDeviceConfigCountBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceConfigCountUnauthorized creates a GetDeviceConfigCountUnauthorized with default headers values
func NewGetDeviceConfigCountUnauthorized() *GetDeviceConfigCountUnauthorized {
	return &GetDeviceConfigCountUnauthorized{}
}

/*GetDeviceConfigCountUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type GetDeviceConfigCountUnauthorized struct {
}

func (o *GetDeviceConfigCountUnauthorized) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/config/count][%d] getDeviceConfigCountUnauthorized ", 401)
}

func (o *GetDeviceConfigCountUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceConfigCountForbidden creates a GetDeviceConfigCountForbidden with default headers values
func NewGetDeviceConfigCountForbidden() *GetDeviceConfigCountForbidden {
	return &GetDeviceConfigCountForbidden{}
}

/*GetDeviceConfigCountForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type GetDeviceConfigCountForbidden struct {
}

func (o *GetDeviceConfigCountForbidden) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/config/count][%d] getDeviceConfigCountForbidden ", 403)
}

func (o *GetDeviceConfigCountForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceConfigCountNotFound creates a GetDeviceConfigCountNotFound with default headers values
func NewGetDeviceConfigCountNotFound() *GetDeviceConfigCountNotFound {
	return &GetDeviceConfigCountNotFound{}
}

/*GetDeviceConfigCountNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type GetDeviceConfigCountNotFound struct {
}

func (o *GetDeviceConfigCountNotFound) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/config/count][%d] getDeviceConfigCountNotFound ", 404)
}

func (o *GetDeviceConfigCountNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceConfigCountConflict creates a GetDeviceConfigCountConflict with default headers values
func NewGetDeviceConfigCountConflict() *GetDeviceConfigCountConflict {
	return &GetDeviceConfigCountConflict{}
}

/*GetDeviceConfigCountConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type GetDeviceConfigCountConflict struct {
}

func (o *GetDeviceConfigCountConflict) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/config/count][%d] getDeviceConfigCountConflict ", 409)
}

func (o *GetDeviceConfigCountConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceConfigCountUnsupportedMediaType creates a GetDeviceConfigCountUnsupportedMediaType with default headers values
func NewGetDeviceConfigCountUnsupportedMediaType() *GetDeviceConfigCountUnsupportedMediaType {
	return &GetDeviceConfigCountUnsupportedMediaType{}
}

/*GetDeviceConfigCountUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type GetDeviceConfigCountUnsupportedMediaType struct {
}

func (o *GetDeviceConfigCountUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/config/count][%d] getDeviceConfigCountUnsupportedMediaType ", 415)
}

func (o *GetDeviceConfigCountUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceConfigCountInternalServerError creates a GetDeviceConfigCountInternalServerError with default headers values
func NewGetDeviceConfigCountInternalServerError() *GetDeviceConfigCountInternalServerError {
	return &GetDeviceConfigCountInternalServerError{}
}

/*GetDeviceConfigCountInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type GetDeviceConfigCountInternalServerError struct {
}

func (o *GetDeviceConfigCountInternalServerError) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/config/count][%d] getDeviceConfigCountInternalServerError ", 500)
}

func (o *GetDeviceConfigCountInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceConfigCountNotImplemented creates a GetDeviceConfigCountNotImplemented with default headers values
func NewGetDeviceConfigCountNotImplemented() *GetDeviceConfigCountNotImplemented {
	return &GetDeviceConfigCountNotImplemented{}
}

/*GetDeviceConfigCountNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type GetDeviceConfigCountNotImplemented struct {
}

func (o *GetDeviceConfigCountNotImplemented) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/config/count][%d] getDeviceConfigCountNotImplemented ", 501)
}

func (o *GetDeviceConfigCountNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceConfigCountServiceUnavailable creates a GetDeviceConfigCountServiceUnavailable with default headers values
func NewGetDeviceConfigCountServiceUnavailable() *GetDeviceConfigCountServiceUnavailable {
	return &GetDeviceConfigCountServiceUnavailable{}
}

/*GetDeviceConfigCountServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type GetDeviceConfigCountServiceUnavailable struct {
}

func (o *GetDeviceConfigCountServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/config/count][%d] getDeviceConfigCountServiceUnavailable ", 503)
}

func (o *GetDeviceConfigCountServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceConfigCountGatewayTimeout creates a GetDeviceConfigCountGatewayTimeout with default headers values
func NewGetDeviceConfigCountGatewayTimeout() *GetDeviceConfigCountGatewayTimeout {
	return &GetDeviceConfigCountGatewayTimeout{}
}

/*GetDeviceConfigCountGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type GetDeviceConfigCountGatewayTimeout struct {
}

func (o *GetDeviceConfigCountGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/config/count][%d] getDeviceConfigCountGatewayTimeout ", 504)
}

func (o *GetDeviceConfigCountGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
