// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// GetInterfaceInfoByIDReader is a Reader for the GetInterfaceInfoByID structure.
type GetInterfaceInfoByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInterfaceInfoByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetInterfaceInfoByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewGetInterfaceInfoByIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewGetInterfaceInfoByIDPartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetInterfaceInfoByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetInterfaceInfoByIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetInterfaceInfoByIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetInterfaceInfoByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewGetInterfaceInfoByIDConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewGetInterfaceInfoByIDUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetInterfaceInfoByIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewGetInterfaceInfoByIDNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetInterfaceInfoByIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetInterfaceInfoByIDGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetInterfaceInfoByIDOK creates a GetInterfaceInfoByIDOK with default headers values
func NewGetInterfaceInfoByIDOK() *GetInterfaceInfoByIDOK {
	return &GetInterfaceInfoByIDOK{}
}

/*GetInterfaceInfoByIDOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type GetInterfaceInfoByIDOK struct {
	Payload *models.DeviceIfListResult
}

func (o *GetInterfaceInfoByIDOK) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/network-device/{deviceId}][%d] getInterfaceInfoByIdOK  %+v", 200, o.Payload)
}

func (o *GetInterfaceInfoByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeviceIfListResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInterfaceInfoByIDNoContent creates a GetInterfaceInfoByIDNoContent with default headers values
func NewGetInterfaceInfoByIDNoContent() *GetInterfaceInfoByIDNoContent {
	return &GetInterfaceInfoByIDNoContent{}
}

/*GetInterfaceInfoByIDNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type GetInterfaceInfoByIDNoContent struct {
}

func (o *GetInterfaceInfoByIDNoContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/network-device/{deviceId}][%d] getInterfaceInfoByIdNoContent ", 204)
}

func (o *GetInterfaceInfoByIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInterfaceInfoByIDPartialContent creates a GetInterfaceInfoByIDPartialContent with default headers values
func NewGetInterfaceInfoByIDPartialContent() *GetInterfaceInfoByIDPartialContent {
	return &GetInterfaceInfoByIDPartialContent{}
}

/*GetInterfaceInfoByIDPartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type GetInterfaceInfoByIDPartialContent struct {
}

func (o *GetInterfaceInfoByIDPartialContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/network-device/{deviceId}][%d] getInterfaceInfoByIdPartialContent ", 206)
}

func (o *GetInterfaceInfoByIDPartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInterfaceInfoByIDBadRequest creates a GetInterfaceInfoByIDBadRequest with default headers values
func NewGetInterfaceInfoByIDBadRequest() *GetInterfaceInfoByIDBadRequest {
	return &GetInterfaceInfoByIDBadRequest{}
}

/*GetInterfaceInfoByIDBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type GetInterfaceInfoByIDBadRequest struct {
}

func (o *GetInterfaceInfoByIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/network-device/{deviceId}][%d] getInterfaceInfoByIdBadRequest ", 400)
}

func (o *GetInterfaceInfoByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInterfaceInfoByIDUnauthorized creates a GetInterfaceInfoByIDUnauthorized with default headers values
func NewGetInterfaceInfoByIDUnauthorized() *GetInterfaceInfoByIDUnauthorized {
	return &GetInterfaceInfoByIDUnauthorized{}
}

/*GetInterfaceInfoByIDUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type GetInterfaceInfoByIDUnauthorized struct {
}

func (o *GetInterfaceInfoByIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/network-device/{deviceId}][%d] getInterfaceInfoByIdUnauthorized ", 401)
}

func (o *GetInterfaceInfoByIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInterfaceInfoByIDForbidden creates a GetInterfaceInfoByIDForbidden with default headers values
func NewGetInterfaceInfoByIDForbidden() *GetInterfaceInfoByIDForbidden {
	return &GetInterfaceInfoByIDForbidden{}
}

/*GetInterfaceInfoByIDForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type GetInterfaceInfoByIDForbidden struct {
}

func (o *GetInterfaceInfoByIDForbidden) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/network-device/{deviceId}][%d] getInterfaceInfoByIdForbidden ", 403)
}

func (o *GetInterfaceInfoByIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInterfaceInfoByIDNotFound creates a GetInterfaceInfoByIDNotFound with default headers values
func NewGetInterfaceInfoByIDNotFound() *GetInterfaceInfoByIDNotFound {
	return &GetInterfaceInfoByIDNotFound{}
}

/*GetInterfaceInfoByIDNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type GetInterfaceInfoByIDNotFound struct {
}

func (o *GetInterfaceInfoByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/network-device/{deviceId}][%d] getInterfaceInfoByIdNotFound ", 404)
}

func (o *GetInterfaceInfoByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInterfaceInfoByIDConflict creates a GetInterfaceInfoByIDConflict with default headers values
func NewGetInterfaceInfoByIDConflict() *GetInterfaceInfoByIDConflict {
	return &GetInterfaceInfoByIDConflict{}
}

/*GetInterfaceInfoByIDConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type GetInterfaceInfoByIDConflict struct {
}

func (o *GetInterfaceInfoByIDConflict) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/network-device/{deviceId}][%d] getInterfaceInfoByIdConflict ", 409)
}

func (o *GetInterfaceInfoByIDConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInterfaceInfoByIDUnsupportedMediaType creates a GetInterfaceInfoByIDUnsupportedMediaType with default headers values
func NewGetInterfaceInfoByIDUnsupportedMediaType() *GetInterfaceInfoByIDUnsupportedMediaType {
	return &GetInterfaceInfoByIDUnsupportedMediaType{}
}

/*GetInterfaceInfoByIDUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type GetInterfaceInfoByIDUnsupportedMediaType struct {
}

func (o *GetInterfaceInfoByIDUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/network-device/{deviceId}][%d] getInterfaceInfoByIdUnsupportedMediaType ", 415)
}

func (o *GetInterfaceInfoByIDUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInterfaceInfoByIDInternalServerError creates a GetInterfaceInfoByIDInternalServerError with default headers values
func NewGetInterfaceInfoByIDInternalServerError() *GetInterfaceInfoByIDInternalServerError {
	return &GetInterfaceInfoByIDInternalServerError{}
}

/*GetInterfaceInfoByIDInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type GetInterfaceInfoByIDInternalServerError struct {
}

func (o *GetInterfaceInfoByIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/network-device/{deviceId}][%d] getInterfaceInfoByIdInternalServerError ", 500)
}

func (o *GetInterfaceInfoByIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInterfaceInfoByIDNotImplemented creates a GetInterfaceInfoByIDNotImplemented with default headers values
func NewGetInterfaceInfoByIDNotImplemented() *GetInterfaceInfoByIDNotImplemented {
	return &GetInterfaceInfoByIDNotImplemented{}
}

/*GetInterfaceInfoByIDNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type GetInterfaceInfoByIDNotImplemented struct {
}

func (o *GetInterfaceInfoByIDNotImplemented) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/network-device/{deviceId}][%d] getInterfaceInfoByIdNotImplemented ", 501)
}

func (o *GetInterfaceInfoByIDNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInterfaceInfoByIDServiceUnavailable creates a GetInterfaceInfoByIDServiceUnavailable with default headers values
func NewGetInterfaceInfoByIDServiceUnavailable() *GetInterfaceInfoByIDServiceUnavailable {
	return &GetInterfaceInfoByIDServiceUnavailable{}
}

/*GetInterfaceInfoByIDServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type GetInterfaceInfoByIDServiceUnavailable struct {
}

func (o *GetInterfaceInfoByIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/network-device/{deviceId}][%d] getInterfaceInfoByIdServiceUnavailable ", 503)
}

func (o *GetInterfaceInfoByIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInterfaceInfoByIDGatewayTimeout creates a GetInterfaceInfoByIDGatewayTimeout with default headers values
func NewGetInterfaceInfoByIDGatewayTimeout() *GetInterfaceInfoByIDGatewayTimeout {
	return &GetInterfaceInfoByIDGatewayTimeout{}
}

/*GetInterfaceInfoByIDGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type GetInterfaceInfoByIDGatewayTimeout struct {
}

func (o *GetInterfaceInfoByIDGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/network-device/{deviceId}][%d] getInterfaceInfoByIdGatewayTimeout ", 504)
}

func (o *GetInterfaceInfoByIDGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
