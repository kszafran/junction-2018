// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// GetModuleCountReader is a Reader for the GetModuleCount structure.
type GetModuleCountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetModuleCountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetModuleCountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewGetModuleCountNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewGetModuleCountPartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetModuleCountBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetModuleCountUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetModuleCountForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetModuleCountNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewGetModuleCountConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewGetModuleCountUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetModuleCountInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewGetModuleCountNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetModuleCountServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetModuleCountGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetModuleCountOK creates a GetModuleCountOK with default headers values
func NewGetModuleCountOK() *GetModuleCountOK {
	return &GetModuleCountOK{}
}

/*GetModuleCountOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type GetModuleCountOK struct {
	Payload *models.CountResult
}

func (o *GetModuleCountOK) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/module/count][%d] getModuleCountOK  %+v", 200, o.Payload)
}

func (o *GetModuleCountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CountResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetModuleCountNoContent creates a GetModuleCountNoContent with default headers values
func NewGetModuleCountNoContent() *GetModuleCountNoContent {
	return &GetModuleCountNoContent{}
}

/*GetModuleCountNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type GetModuleCountNoContent struct {
}

func (o *GetModuleCountNoContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/module/count][%d] getModuleCountNoContent ", 204)
}

func (o *GetModuleCountNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetModuleCountPartialContent creates a GetModuleCountPartialContent with default headers values
func NewGetModuleCountPartialContent() *GetModuleCountPartialContent {
	return &GetModuleCountPartialContent{}
}

/*GetModuleCountPartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type GetModuleCountPartialContent struct {
}

func (o *GetModuleCountPartialContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/module/count][%d] getModuleCountPartialContent ", 206)
}

func (o *GetModuleCountPartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetModuleCountBadRequest creates a GetModuleCountBadRequest with default headers values
func NewGetModuleCountBadRequest() *GetModuleCountBadRequest {
	return &GetModuleCountBadRequest{}
}

/*GetModuleCountBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type GetModuleCountBadRequest struct {
}

func (o *GetModuleCountBadRequest) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/module/count][%d] getModuleCountBadRequest ", 400)
}

func (o *GetModuleCountBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetModuleCountUnauthorized creates a GetModuleCountUnauthorized with default headers values
func NewGetModuleCountUnauthorized() *GetModuleCountUnauthorized {
	return &GetModuleCountUnauthorized{}
}

/*GetModuleCountUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type GetModuleCountUnauthorized struct {
}

func (o *GetModuleCountUnauthorized) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/module/count][%d] getModuleCountUnauthorized ", 401)
}

func (o *GetModuleCountUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetModuleCountForbidden creates a GetModuleCountForbidden with default headers values
func NewGetModuleCountForbidden() *GetModuleCountForbidden {
	return &GetModuleCountForbidden{}
}

/*GetModuleCountForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type GetModuleCountForbidden struct {
}

func (o *GetModuleCountForbidden) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/module/count][%d] getModuleCountForbidden ", 403)
}

func (o *GetModuleCountForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetModuleCountNotFound creates a GetModuleCountNotFound with default headers values
func NewGetModuleCountNotFound() *GetModuleCountNotFound {
	return &GetModuleCountNotFound{}
}

/*GetModuleCountNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type GetModuleCountNotFound struct {
}

func (o *GetModuleCountNotFound) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/module/count][%d] getModuleCountNotFound ", 404)
}

func (o *GetModuleCountNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetModuleCountConflict creates a GetModuleCountConflict with default headers values
func NewGetModuleCountConflict() *GetModuleCountConflict {
	return &GetModuleCountConflict{}
}

/*GetModuleCountConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type GetModuleCountConflict struct {
}

func (o *GetModuleCountConflict) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/module/count][%d] getModuleCountConflict ", 409)
}

func (o *GetModuleCountConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetModuleCountUnsupportedMediaType creates a GetModuleCountUnsupportedMediaType with default headers values
func NewGetModuleCountUnsupportedMediaType() *GetModuleCountUnsupportedMediaType {
	return &GetModuleCountUnsupportedMediaType{}
}

/*GetModuleCountUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type GetModuleCountUnsupportedMediaType struct {
}

func (o *GetModuleCountUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/module/count][%d] getModuleCountUnsupportedMediaType ", 415)
}

func (o *GetModuleCountUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetModuleCountInternalServerError creates a GetModuleCountInternalServerError with default headers values
func NewGetModuleCountInternalServerError() *GetModuleCountInternalServerError {
	return &GetModuleCountInternalServerError{}
}

/*GetModuleCountInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type GetModuleCountInternalServerError struct {
}

func (o *GetModuleCountInternalServerError) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/module/count][%d] getModuleCountInternalServerError ", 500)
}

func (o *GetModuleCountInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetModuleCountNotImplemented creates a GetModuleCountNotImplemented with default headers values
func NewGetModuleCountNotImplemented() *GetModuleCountNotImplemented {
	return &GetModuleCountNotImplemented{}
}

/*GetModuleCountNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type GetModuleCountNotImplemented struct {
}

func (o *GetModuleCountNotImplemented) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/module/count][%d] getModuleCountNotImplemented ", 501)
}

func (o *GetModuleCountNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetModuleCountServiceUnavailable creates a GetModuleCountServiceUnavailable with default headers values
func NewGetModuleCountServiceUnavailable() *GetModuleCountServiceUnavailable {
	return &GetModuleCountServiceUnavailable{}
}

/*GetModuleCountServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type GetModuleCountServiceUnavailable struct {
}

func (o *GetModuleCountServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/module/count][%d] getModuleCountServiceUnavailable ", 503)
}

func (o *GetModuleCountServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetModuleCountGatewayTimeout creates a GetModuleCountGatewayTimeout with default headers values
func NewGetModuleCountGatewayTimeout() *GetModuleCountGatewayTimeout {
	return &GetModuleCountGatewayTimeout{}
}

/*GetModuleCountGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type GetModuleCountGatewayTimeout struct {
}

func (o *GetModuleCountGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/module/count][%d] getModuleCountGatewayTimeout ", 504)
}

func (o *GetModuleCountGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
