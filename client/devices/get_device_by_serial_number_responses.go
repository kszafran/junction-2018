// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// GetDeviceBySerialNumberReader is a Reader for the GetDeviceBySerialNumber structure.
type GetDeviceBySerialNumberReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDeviceBySerialNumberReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetDeviceBySerialNumberOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewGetDeviceBySerialNumberNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewGetDeviceBySerialNumberPartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetDeviceBySerialNumberBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetDeviceBySerialNumberUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetDeviceBySerialNumberForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetDeviceBySerialNumberNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewGetDeviceBySerialNumberConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewGetDeviceBySerialNumberUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetDeviceBySerialNumberInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewGetDeviceBySerialNumberNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetDeviceBySerialNumberServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetDeviceBySerialNumberGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDeviceBySerialNumberOK creates a GetDeviceBySerialNumberOK with default headers values
func NewGetDeviceBySerialNumberOK() *GetDeviceBySerialNumberOK {
	return &GetDeviceBySerialNumberOK{}
}

/*GetDeviceBySerialNumberOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type GetDeviceBySerialNumberOK struct {
	Payload *models.NetworkDeviceResult
}

func (o *GetDeviceBySerialNumberOK) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/serial-number/{serialNumber}][%d] getDeviceBySerialNumberOK  %+v", 200, o.Payload)
}

func (o *GetDeviceBySerialNumberOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NetworkDeviceResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeviceBySerialNumberNoContent creates a GetDeviceBySerialNumberNoContent with default headers values
func NewGetDeviceBySerialNumberNoContent() *GetDeviceBySerialNumberNoContent {
	return &GetDeviceBySerialNumberNoContent{}
}

/*GetDeviceBySerialNumberNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type GetDeviceBySerialNumberNoContent struct {
}

func (o *GetDeviceBySerialNumberNoContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/serial-number/{serialNumber}][%d] getDeviceBySerialNumberNoContent ", 204)
}

func (o *GetDeviceBySerialNumberNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceBySerialNumberPartialContent creates a GetDeviceBySerialNumberPartialContent with default headers values
func NewGetDeviceBySerialNumberPartialContent() *GetDeviceBySerialNumberPartialContent {
	return &GetDeviceBySerialNumberPartialContent{}
}

/*GetDeviceBySerialNumberPartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type GetDeviceBySerialNumberPartialContent struct {
}

func (o *GetDeviceBySerialNumberPartialContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/serial-number/{serialNumber}][%d] getDeviceBySerialNumberPartialContent ", 206)
}

func (o *GetDeviceBySerialNumberPartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceBySerialNumberBadRequest creates a GetDeviceBySerialNumberBadRequest with default headers values
func NewGetDeviceBySerialNumberBadRequest() *GetDeviceBySerialNumberBadRequest {
	return &GetDeviceBySerialNumberBadRequest{}
}

/*GetDeviceBySerialNumberBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type GetDeviceBySerialNumberBadRequest struct {
}

func (o *GetDeviceBySerialNumberBadRequest) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/serial-number/{serialNumber}][%d] getDeviceBySerialNumberBadRequest ", 400)
}

func (o *GetDeviceBySerialNumberBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceBySerialNumberUnauthorized creates a GetDeviceBySerialNumberUnauthorized with default headers values
func NewGetDeviceBySerialNumberUnauthorized() *GetDeviceBySerialNumberUnauthorized {
	return &GetDeviceBySerialNumberUnauthorized{}
}

/*GetDeviceBySerialNumberUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type GetDeviceBySerialNumberUnauthorized struct {
}

func (o *GetDeviceBySerialNumberUnauthorized) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/serial-number/{serialNumber}][%d] getDeviceBySerialNumberUnauthorized ", 401)
}

func (o *GetDeviceBySerialNumberUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceBySerialNumberForbidden creates a GetDeviceBySerialNumberForbidden with default headers values
func NewGetDeviceBySerialNumberForbidden() *GetDeviceBySerialNumberForbidden {
	return &GetDeviceBySerialNumberForbidden{}
}

/*GetDeviceBySerialNumberForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type GetDeviceBySerialNumberForbidden struct {
}

func (o *GetDeviceBySerialNumberForbidden) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/serial-number/{serialNumber}][%d] getDeviceBySerialNumberForbidden ", 403)
}

func (o *GetDeviceBySerialNumberForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceBySerialNumberNotFound creates a GetDeviceBySerialNumberNotFound with default headers values
func NewGetDeviceBySerialNumberNotFound() *GetDeviceBySerialNumberNotFound {
	return &GetDeviceBySerialNumberNotFound{}
}

/*GetDeviceBySerialNumberNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type GetDeviceBySerialNumberNotFound struct {
}

func (o *GetDeviceBySerialNumberNotFound) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/serial-number/{serialNumber}][%d] getDeviceBySerialNumberNotFound ", 404)
}

func (o *GetDeviceBySerialNumberNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceBySerialNumberConflict creates a GetDeviceBySerialNumberConflict with default headers values
func NewGetDeviceBySerialNumberConflict() *GetDeviceBySerialNumberConflict {
	return &GetDeviceBySerialNumberConflict{}
}

/*GetDeviceBySerialNumberConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type GetDeviceBySerialNumberConflict struct {
}

func (o *GetDeviceBySerialNumberConflict) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/serial-number/{serialNumber}][%d] getDeviceBySerialNumberConflict ", 409)
}

func (o *GetDeviceBySerialNumberConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceBySerialNumberUnsupportedMediaType creates a GetDeviceBySerialNumberUnsupportedMediaType with default headers values
func NewGetDeviceBySerialNumberUnsupportedMediaType() *GetDeviceBySerialNumberUnsupportedMediaType {
	return &GetDeviceBySerialNumberUnsupportedMediaType{}
}

/*GetDeviceBySerialNumberUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type GetDeviceBySerialNumberUnsupportedMediaType struct {
}

func (o *GetDeviceBySerialNumberUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/serial-number/{serialNumber}][%d] getDeviceBySerialNumberUnsupportedMediaType ", 415)
}

func (o *GetDeviceBySerialNumberUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceBySerialNumberInternalServerError creates a GetDeviceBySerialNumberInternalServerError with default headers values
func NewGetDeviceBySerialNumberInternalServerError() *GetDeviceBySerialNumberInternalServerError {
	return &GetDeviceBySerialNumberInternalServerError{}
}

/*GetDeviceBySerialNumberInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type GetDeviceBySerialNumberInternalServerError struct {
}

func (o *GetDeviceBySerialNumberInternalServerError) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/serial-number/{serialNumber}][%d] getDeviceBySerialNumberInternalServerError ", 500)
}

func (o *GetDeviceBySerialNumberInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceBySerialNumberNotImplemented creates a GetDeviceBySerialNumberNotImplemented with default headers values
func NewGetDeviceBySerialNumberNotImplemented() *GetDeviceBySerialNumberNotImplemented {
	return &GetDeviceBySerialNumberNotImplemented{}
}

/*GetDeviceBySerialNumberNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type GetDeviceBySerialNumberNotImplemented struct {
}

func (o *GetDeviceBySerialNumberNotImplemented) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/serial-number/{serialNumber}][%d] getDeviceBySerialNumberNotImplemented ", 501)
}

func (o *GetDeviceBySerialNumberNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceBySerialNumberServiceUnavailable creates a GetDeviceBySerialNumberServiceUnavailable with default headers values
func NewGetDeviceBySerialNumberServiceUnavailable() *GetDeviceBySerialNumberServiceUnavailable {
	return &GetDeviceBySerialNumberServiceUnavailable{}
}

/*GetDeviceBySerialNumberServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type GetDeviceBySerialNumberServiceUnavailable struct {
}

func (o *GetDeviceBySerialNumberServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/serial-number/{serialNumber}][%d] getDeviceBySerialNumberServiceUnavailable ", 503)
}

func (o *GetDeviceBySerialNumberServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceBySerialNumberGatewayTimeout creates a GetDeviceBySerialNumberGatewayTimeout with default headers values
func NewGetDeviceBySerialNumberGatewayTimeout() *GetDeviceBySerialNumberGatewayTimeout {
	return &GetDeviceBySerialNumberGatewayTimeout{}
}

/*GetDeviceBySerialNumberGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type GetDeviceBySerialNumberGatewayTimeout struct {
}

func (o *GetDeviceBySerialNumberGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/serial-number/{serialNumber}][%d] getDeviceBySerialNumberGatewayTimeout ", 504)
}

func (o *GetDeviceBySerialNumberGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
