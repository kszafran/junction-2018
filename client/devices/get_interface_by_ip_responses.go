// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// GetInterfaceByIPReader is a Reader for the GetInterfaceByIP structure.
type GetInterfaceByIPReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInterfaceByIPReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetInterfaceByIPOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewGetInterfaceByIPNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewGetInterfaceByIPPartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetInterfaceByIPBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetInterfaceByIPUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetInterfaceByIPForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetInterfaceByIPNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewGetInterfaceByIPConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewGetInterfaceByIPUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetInterfaceByIPInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewGetInterfaceByIPNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetInterfaceByIPServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetInterfaceByIPGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetInterfaceByIPOK creates a GetInterfaceByIPOK with default headers values
func NewGetInterfaceByIPOK() *GetInterfaceByIPOK {
	return &GetInterfaceByIPOK{}
}

/*GetInterfaceByIPOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type GetInterfaceByIPOK struct {
	Payload *models.DeviceIfListResult
}

func (o *GetInterfaceByIPOK) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/ip-address/{ipAddress}][%d] getInterfaceByIpOK  %+v", 200, o.Payload)
}

func (o *GetInterfaceByIPOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeviceIfListResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInterfaceByIPNoContent creates a GetInterfaceByIPNoContent with default headers values
func NewGetInterfaceByIPNoContent() *GetInterfaceByIPNoContent {
	return &GetInterfaceByIPNoContent{}
}

/*GetInterfaceByIPNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type GetInterfaceByIPNoContent struct {
}

func (o *GetInterfaceByIPNoContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/ip-address/{ipAddress}][%d] getInterfaceByIpNoContent ", 204)
}

func (o *GetInterfaceByIPNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInterfaceByIPPartialContent creates a GetInterfaceByIPPartialContent with default headers values
func NewGetInterfaceByIPPartialContent() *GetInterfaceByIPPartialContent {
	return &GetInterfaceByIPPartialContent{}
}

/*GetInterfaceByIPPartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type GetInterfaceByIPPartialContent struct {
}

func (o *GetInterfaceByIPPartialContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/ip-address/{ipAddress}][%d] getInterfaceByIpPartialContent ", 206)
}

func (o *GetInterfaceByIPPartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInterfaceByIPBadRequest creates a GetInterfaceByIPBadRequest with default headers values
func NewGetInterfaceByIPBadRequest() *GetInterfaceByIPBadRequest {
	return &GetInterfaceByIPBadRequest{}
}

/*GetInterfaceByIPBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type GetInterfaceByIPBadRequest struct {
}

func (o *GetInterfaceByIPBadRequest) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/ip-address/{ipAddress}][%d] getInterfaceByIpBadRequest ", 400)
}

func (o *GetInterfaceByIPBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInterfaceByIPUnauthorized creates a GetInterfaceByIPUnauthorized with default headers values
func NewGetInterfaceByIPUnauthorized() *GetInterfaceByIPUnauthorized {
	return &GetInterfaceByIPUnauthorized{}
}

/*GetInterfaceByIPUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type GetInterfaceByIPUnauthorized struct {
}

func (o *GetInterfaceByIPUnauthorized) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/ip-address/{ipAddress}][%d] getInterfaceByIpUnauthorized ", 401)
}

func (o *GetInterfaceByIPUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInterfaceByIPForbidden creates a GetInterfaceByIPForbidden with default headers values
func NewGetInterfaceByIPForbidden() *GetInterfaceByIPForbidden {
	return &GetInterfaceByIPForbidden{}
}

/*GetInterfaceByIPForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type GetInterfaceByIPForbidden struct {
}

func (o *GetInterfaceByIPForbidden) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/ip-address/{ipAddress}][%d] getInterfaceByIpForbidden ", 403)
}

func (o *GetInterfaceByIPForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInterfaceByIPNotFound creates a GetInterfaceByIPNotFound with default headers values
func NewGetInterfaceByIPNotFound() *GetInterfaceByIPNotFound {
	return &GetInterfaceByIPNotFound{}
}

/*GetInterfaceByIPNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type GetInterfaceByIPNotFound struct {
}

func (o *GetInterfaceByIPNotFound) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/ip-address/{ipAddress}][%d] getInterfaceByIpNotFound ", 404)
}

func (o *GetInterfaceByIPNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInterfaceByIPConflict creates a GetInterfaceByIPConflict with default headers values
func NewGetInterfaceByIPConflict() *GetInterfaceByIPConflict {
	return &GetInterfaceByIPConflict{}
}

/*GetInterfaceByIPConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type GetInterfaceByIPConflict struct {
}

func (o *GetInterfaceByIPConflict) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/ip-address/{ipAddress}][%d] getInterfaceByIpConflict ", 409)
}

func (o *GetInterfaceByIPConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInterfaceByIPUnsupportedMediaType creates a GetInterfaceByIPUnsupportedMediaType with default headers values
func NewGetInterfaceByIPUnsupportedMediaType() *GetInterfaceByIPUnsupportedMediaType {
	return &GetInterfaceByIPUnsupportedMediaType{}
}

/*GetInterfaceByIPUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type GetInterfaceByIPUnsupportedMediaType struct {
}

func (o *GetInterfaceByIPUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/ip-address/{ipAddress}][%d] getInterfaceByIpUnsupportedMediaType ", 415)
}

func (o *GetInterfaceByIPUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInterfaceByIPInternalServerError creates a GetInterfaceByIPInternalServerError with default headers values
func NewGetInterfaceByIPInternalServerError() *GetInterfaceByIPInternalServerError {
	return &GetInterfaceByIPInternalServerError{}
}

/*GetInterfaceByIPInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type GetInterfaceByIPInternalServerError struct {
}

func (o *GetInterfaceByIPInternalServerError) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/ip-address/{ipAddress}][%d] getInterfaceByIpInternalServerError ", 500)
}

func (o *GetInterfaceByIPInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInterfaceByIPNotImplemented creates a GetInterfaceByIPNotImplemented with default headers values
func NewGetInterfaceByIPNotImplemented() *GetInterfaceByIPNotImplemented {
	return &GetInterfaceByIPNotImplemented{}
}

/*GetInterfaceByIPNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type GetInterfaceByIPNotImplemented struct {
}

func (o *GetInterfaceByIPNotImplemented) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/ip-address/{ipAddress}][%d] getInterfaceByIpNotImplemented ", 501)
}

func (o *GetInterfaceByIPNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInterfaceByIPServiceUnavailable creates a GetInterfaceByIPServiceUnavailable with default headers values
func NewGetInterfaceByIPServiceUnavailable() *GetInterfaceByIPServiceUnavailable {
	return &GetInterfaceByIPServiceUnavailable{}
}

/*GetInterfaceByIPServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type GetInterfaceByIPServiceUnavailable struct {
}

func (o *GetInterfaceByIPServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/ip-address/{ipAddress}][%d] getInterfaceByIpServiceUnavailable ", 503)
}

func (o *GetInterfaceByIPServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInterfaceByIPGatewayTimeout creates a GetInterfaceByIPGatewayTimeout with default headers values
func NewGetInterfaceByIPGatewayTimeout() *GetInterfaceByIPGatewayTimeout {
	return &GetInterfaceByIPGatewayTimeout{}
}

/*GetInterfaceByIPGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type GetInterfaceByIPGatewayTimeout struct {
}

func (o *GetInterfaceByIPGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/ip-address/{ipAddress}][%d] getInterfaceByIpGatewayTimeout ", 504)
}

func (o *GetInterfaceByIPGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
