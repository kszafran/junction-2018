// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// UpdateDeviceRoleReader is a Reader for the UpdateDeviceRole structure.
type UpdateDeviceRoleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateDeviceRoleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUpdateDeviceRoleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 201:
		result := NewUpdateDeviceRoleCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 202:
		result := NewUpdateDeviceRoleAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewUpdateDeviceRoleNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewUpdateDeviceRolePartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewUpdateDeviceRoleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewUpdateDeviceRoleUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewUpdateDeviceRoleForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewUpdateDeviceRoleNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewUpdateDeviceRoleConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewUpdateDeviceRoleUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewUpdateDeviceRoleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewUpdateDeviceRoleNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewUpdateDeviceRoleServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewUpdateDeviceRoleGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateDeviceRoleOK creates a UpdateDeviceRoleOK with default headers values
func NewUpdateDeviceRoleOK() *UpdateDeviceRoleOK {
	return &UpdateDeviceRoleOK{}
}

/*UpdateDeviceRoleOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type UpdateDeviceRoleOK struct {
	Payload *models.TaskIDResult
}

func (o *UpdateDeviceRoleOK) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/network-device/brief][%d] updateDeviceRoleOK  %+v", 200, o.Payload)
}

func (o *UpdateDeviceRoleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TaskIDResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateDeviceRoleCreated creates a UpdateDeviceRoleCreated with default headers values
func NewUpdateDeviceRoleCreated() *UpdateDeviceRoleCreated {
	return &UpdateDeviceRoleCreated{}
}

/*UpdateDeviceRoleCreated handles this case with default header values.

The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body.
*/
type UpdateDeviceRoleCreated struct {
}

func (o *UpdateDeviceRoleCreated) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/network-device/brief][%d] updateDeviceRoleCreated ", 201)
}

func (o *UpdateDeviceRoleCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateDeviceRoleAccepted creates a UpdateDeviceRoleAccepted with default headers values
func NewUpdateDeviceRoleAccepted() *UpdateDeviceRoleAccepted {
	return &UpdateDeviceRoleAccepted{}
}

/*UpdateDeviceRoleAccepted handles this case with default header values.

The request was accepted for processing, but the processing has not been completed.
*/
type UpdateDeviceRoleAccepted struct {
}

func (o *UpdateDeviceRoleAccepted) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/network-device/brief][%d] updateDeviceRoleAccepted ", 202)
}

func (o *UpdateDeviceRoleAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateDeviceRoleNoContent creates a UpdateDeviceRoleNoContent with default headers values
func NewUpdateDeviceRoleNoContent() *UpdateDeviceRoleNoContent {
	return &UpdateDeviceRoleNoContent{}
}

/*UpdateDeviceRoleNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type UpdateDeviceRoleNoContent struct {
}

func (o *UpdateDeviceRoleNoContent) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/network-device/brief][%d] updateDeviceRoleNoContent ", 204)
}

func (o *UpdateDeviceRoleNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateDeviceRolePartialContent creates a UpdateDeviceRolePartialContent with default headers values
func NewUpdateDeviceRolePartialContent() *UpdateDeviceRolePartialContent {
	return &UpdateDeviceRolePartialContent{}
}

/*UpdateDeviceRolePartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type UpdateDeviceRolePartialContent struct {
}

func (o *UpdateDeviceRolePartialContent) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/network-device/brief][%d] updateDeviceRolePartialContent ", 206)
}

func (o *UpdateDeviceRolePartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateDeviceRoleBadRequest creates a UpdateDeviceRoleBadRequest with default headers values
func NewUpdateDeviceRoleBadRequest() *UpdateDeviceRoleBadRequest {
	return &UpdateDeviceRoleBadRequest{}
}

/*UpdateDeviceRoleBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type UpdateDeviceRoleBadRequest struct {
}

func (o *UpdateDeviceRoleBadRequest) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/network-device/brief][%d] updateDeviceRoleBadRequest ", 400)
}

func (o *UpdateDeviceRoleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateDeviceRoleUnauthorized creates a UpdateDeviceRoleUnauthorized with default headers values
func NewUpdateDeviceRoleUnauthorized() *UpdateDeviceRoleUnauthorized {
	return &UpdateDeviceRoleUnauthorized{}
}

/*UpdateDeviceRoleUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type UpdateDeviceRoleUnauthorized struct {
}

func (o *UpdateDeviceRoleUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/network-device/brief][%d] updateDeviceRoleUnauthorized ", 401)
}

func (o *UpdateDeviceRoleUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateDeviceRoleForbidden creates a UpdateDeviceRoleForbidden with default headers values
func NewUpdateDeviceRoleForbidden() *UpdateDeviceRoleForbidden {
	return &UpdateDeviceRoleForbidden{}
}

/*UpdateDeviceRoleForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type UpdateDeviceRoleForbidden struct {
}

func (o *UpdateDeviceRoleForbidden) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/network-device/brief][%d] updateDeviceRoleForbidden ", 403)
}

func (o *UpdateDeviceRoleForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateDeviceRoleNotFound creates a UpdateDeviceRoleNotFound with default headers values
func NewUpdateDeviceRoleNotFound() *UpdateDeviceRoleNotFound {
	return &UpdateDeviceRoleNotFound{}
}

/*UpdateDeviceRoleNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type UpdateDeviceRoleNotFound struct {
}

func (o *UpdateDeviceRoleNotFound) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/network-device/brief][%d] updateDeviceRoleNotFound ", 404)
}

func (o *UpdateDeviceRoleNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateDeviceRoleConflict creates a UpdateDeviceRoleConflict with default headers values
func NewUpdateDeviceRoleConflict() *UpdateDeviceRoleConflict {
	return &UpdateDeviceRoleConflict{}
}

/*UpdateDeviceRoleConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type UpdateDeviceRoleConflict struct {
}

func (o *UpdateDeviceRoleConflict) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/network-device/brief][%d] updateDeviceRoleConflict ", 409)
}

func (o *UpdateDeviceRoleConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateDeviceRoleUnsupportedMediaType creates a UpdateDeviceRoleUnsupportedMediaType with default headers values
func NewUpdateDeviceRoleUnsupportedMediaType() *UpdateDeviceRoleUnsupportedMediaType {
	return &UpdateDeviceRoleUnsupportedMediaType{}
}

/*UpdateDeviceRoleUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type UpdateDeviceRoleUnsupportedMediaType struct {
}

func (o *UpdateDeviceRoleUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/network-device/brief][%d] updateDeviceRoleUnsupportedMediaType ", 415)
}

func (o *UpdateDeviceRoleUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateDeviceRoleInternalServerError creates a UpdateDeviceRoleInternalServerError with default headers values
func NewUpdateDeviceRoleInternalServerError() *UpdateDeviceRoleInternalServerError {
	return &UpdateDeviceRoleInternalServerError{}
}

/*UpdateDeviceRoleInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type UpdateDeviceRoleInternalServerError struct {
}

func (o *UpdateDeviceRoleInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/network-device/brief][%d] updateDeviceRoleInternalServerError ", 500)
}

func (o *UpdateDeviceRoleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateDeviceRoleNotImplemented creates a UpdateDeviceRoleNotImplemented with default headers values
func NewUpdateDeviceRoleNotImplemented() *UpdateDeviceRoleNotImplemented {
	return &UpdateDeviceRoleNotImplemented{}
}

/*UpdateDeviceRoleNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type UpdateDeviceRoleNotImplemented struct {
}

func (o *UpdateDeviceRoleNotImplemented) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/network-device/brief][%d] updateDeviceRoleNotImplemented ", 501)
}

func (o *UpdateDeviceRoleNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateDeviceRoleServiceUnavailable creates a UpdateDeviceRoleServiceUnavailable with default headers values
func NewUpdateDeviceRoleServiceUnavailable() *UpdateDeviceRoleServiceUnavailable {
	return &UpdateDeviceRoleServiceUnavailable{}
}

/*UpdateDeviceRoleServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type UpdateDeviceRoleServiceUnavailable struct {
}

func (o *UpdateDeviceRoleServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/network-device/brief][%d] updateDeviceRoleServiceUnavailable ", 503)
}

func (o *UpdateDeviceRoleServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateDeviceRoleGatewayTimeout creates a UpdateDeviceRoleGatewayTimeout with default headers values
func NewUpdateDeviceRoleGatewayTimeout() *UpdateDeviceRoleGatewayTimeout {
	return &UpdateDeviceRoleGatewayTimeout{}
}

/*UpdateDeviceRoleGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type UpdateDeviceRoleGatewayTimeout struct {
}

func (o *UpdateDeviceRoleGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/network-device/brief][%d] updateDeviceRoleGatewayTimeout ", 504)
}

func (o *UpdateDeviceRoleGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
