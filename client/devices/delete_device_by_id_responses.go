// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// DeleteDeviceByIDReader is a Reader for the DeleteDeviceByID structure.
type DeleteDeviceByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteDeviceByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeleteDeviceByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewDeleteDeviceByIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewDeleteDeviceByIDPartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDeleteDeviceByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewDeleteDeviceByIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewDeleteDeviceByIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteDeviceByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewDeleteDeviceByIDConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewDeleteDeviceByIDUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewDeleteDeviceByIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewDeleteDeviceByIDNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewDeleteDeviceByIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewDeleteDeviceByIDGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteDeviceByIDOK creates a DeleteDeviceByIDOK with default headers values
func NewDeleteDeviceByIDOK() *DeleteDeviceByIDOK {
	return &DeleteDeviceByIDOK{}
}

/*DeleteDeviceByIDOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type DeleteDeviceByIDOK struct {
	Payload *models.TaskIDResult
}

func (o *DeleteDeviceByIDOK) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/network-device/{id}][%d] deleteDeviceByIdOK  %+v", 200, o.Payload)
}

func (o *DeleteDeviceByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TaskIDResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDeviceByIDNoContent creates a DeleteDeviceByIDNoContent with default headers values
func NewDeleteDeviceByIDNoContent() *DeleteDeviceByIDNoContent {
	return &DeleteDeviceByIDNoContent{}
}

/*DeleteDeviceByIDNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type DeleteDeviceByIDNoContent struct {
}

func (o *DeleteDeviceByIDNoContent) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/network-device/{id}][%d] deleteDeviceByIdNoContent ", 204)
}

func (o *DeleteDeviceByIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDeviceByIDPartialContent creates a DeleteDeviceByIDPartialContent with default headers values
func NewDeleteDeviceByIDPartialContent() *DeleteDeviceByIDPartialContent {
	return &DeleteDeviceByIDPartialContent{}
}

/*DeleteDeviceByIDPartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type DeleteDeviceByIDPartialContent struct {
}

func (o *DeleteDeviceByIDPartialContent) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/network-device/{id}][%d] deleteDeviceByIdPartialContent ", 206)
}

func (o *DeleteDeviceByIDPartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDeviceByIDBadRequest creates a DeleteDeviceByIDBadRequest with default headers values
func NewDeleteDeviceByIDBadRequest() *DeleteDeviceByIDBadRequest {
	return &DeleteDeviceByIDBadRequest{}
}

/*DeleteDeviceByIDBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type DeleteDeviceByIDBadRequest struct {
}

func (o *DeleteDeviceByIDBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/network-device/{id}][%d] deleteDeviceByIdBadRequest ", 400)
}

func (o *DeleteDeviceByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDeviceByIDUnauthorized creates a DeleteDeviceByIDUnauthorized with default headers values
func NewDeleteDeviceByIDUnauthorized() *DeleteDeviceByIDUnauthorized {
	return &DeleteDeviceByIDUnauthorized{}
}

/*DeleteDeviceByIDUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type DeleteDeviceByIDUnauthorized struct {
}

func (o *DeleteDeviceByIDUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/network-device/{id}][%d] deleteDeviceByIdUnauthorized ", 401)
}

func (o *DeleteDeviceByIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDeviceByIDForbidden creates a DeleteDeviceByIDForbidden with default headers values
func NewDeleteDeviceByIDForbidden() *DeleteDeviceByIDForbidden {
	return &DeleteDeviceByIDForbidden{}
}

/*DeleteDeviceByIDForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type DeleteDeviceByIDForbidden struct {
}

func (o *DeleteDeviceByIDForbidden) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/network-device/{id}][%d] deleteDeviceByIdForbidden ", 403)
}

func (o *DeleteDeviceByIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDeviceByIDNotFound creates a DeleteDeviceByIDNotFound with default headers values
func NewDeleteDeviceByIDNotFound() *DeleteDeviceByIDNotFound {
	return &DeleteDeviceByIDNotFound{}
}

/*DeleteDeviceByIDNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type DeleteDeviceByIDNotFound struct {
}

func (o *DeleteDeviceByIDNotFound) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/network-device/{id}][%d] deleteDeviceByIdNotFound ", 404)
}

func (o *DeleteDeviceByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDeviceByIDConflict creates a DeleteDeviceByIDConflict with default headers values
func NewDeleteDeviceByIDConflict() *DeleteDeviceByIDConflict {
	return &DeleteDeviceByIDConflict{}
}

/*DeleteDeviceByIDConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type DeleteDeviceByIDConflict struct {
}

func (o *DeleteDeviceByIDConflict) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/network-device/{id}][%d] deleteDeviceByIdConflict ", 409)
}

func (o *DeleteDeviceByIDConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDeviceByIDUnsupportedMediaType creates a DeleteDeviceByIDUnsupportedMediaType with default headers values
func NewDeleteDeviceByIDUnsupportedMediaType() *DeleteDeviceByIDUnsupportedMediaType {
	return &DeleteDeviceByIDUnsupportedMediaType{}
}

/*DeleteDeviceByIDUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type DeleteDeviceByIDUnsupportedMediaType struct {
}

func (o *DeleteDeviceByIDUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/network-device/{id}][%d] deleteDeviceByIdUnsupportedMediaType ", 415)
}

func (o *DeleteDeviceByIDUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDeviceByIDInternalServerError creates a DeleteDeviceByIDInternalServerError with default headers values
func NewDeleteDeviceByIDInternalServerError() *DeleteDeviceByIDInternalServerError {
	return &DeleteDeviceByIDInternalServerError{}
}

/*DeleteDeviceByIDInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type DeleteDeviceByIDInternalServerError struct {
}

func (o *DeleteDeviceByIDInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/network-device/{id}][%d] deleteDeviceByIdInternalServerError ", 500)
}

func (o *DeleteDeviceByIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDeviceByIDNotImplemented creates a DeleteDeviceByIDNotImplemented with default headers values
func NewDeleteDeviceByIDNotImplemented() *DeleteDeviceByIDNotImplemented {
	return &DeleteDeviceByIDNotImplemented{}
}

/*DeleteDeviceByIDNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type DeleteDeviceByIDNotImplemented struct {
}

func (o *DeleteDeviceByIDNotImplemented) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/network-device/{id}][%d] deleteDeviceByIdNotImplemented ", 501)
}

func (o *DeleteDeviceByIDNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDeviceByIDServiceUnavailable creates a DeleteDeviceByIDServiceUnavailable with default headers values
func NewDeleteDeviceByIDServiceUnavailable() *DeleteDeviceByIDServiceUnavailable {
	return &DeleteDeviceByIDServiceUnavailable{}
}

/*DeleteDeviceByIDServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type DeleteDeviceByIDServiceUnavailable struct {
}

func (o *DeleteDeviceByIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/network-device/{id}][%d] deleteDeviceByIdServiceUnavailable ", 503)
}

func (o *DeleteDeviceByIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDeviceByIDGatewayTimeout creates a DeleteDeviceByIDGatewayTimeout with default headers values
func NewDeleteDeviceByIDGatewayTimeout() *DeleteDeviceByIDGatewayTimeout {
	return &DeleteDeviceByIDGatewayTimeout{}
}

/*DeleteDeviceByIDGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type DeleteDeviceByIDGatewayTimeout struct {
}

func (o *DeleteDeviceByIDGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /dna/intent/api/v1/network-device/{id}][%d] deleteDeviceByIdGatewayTimeout ", 504)
}

func (o *DeleteDeviceByIDGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
