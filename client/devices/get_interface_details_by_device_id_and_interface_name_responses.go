// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// GetInterfaceDetailsByDeviceIDAndInterfaceNameReader is a Reader for the GetInterfaceDetailsByDeviceIDAndInterfaceName structure.
type GetInterfaceDetailsByDeviceIDAndInterfaceNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInterfaceDetailsByDeviceIDAndInterfaceNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetInterfaceDetailsByDeviceIDAndInterfaceNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewGetInterfaceDetailsByDeviceIDAndInterfaceNameNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewGetInterfaceDetailsByDeviceIDAndInterfaceNamePartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetInterfaceDetailsByDeviceIDAndInterfaceNameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetInterfaceDetailsByDeviceIDAndInterfaceNameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetInterfaceDetailsByDeviceIDAndInterfaceNameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetInterfaceDetailsByDeviceIDAndInterfaceNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewGetInterfaceDetailsByDeviceIDAndInterfaceNameConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewGetInterfaceDetailsByDeviceIDAndInterfaceNameUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetInterfaceDetailsByDeviceIDAndInterfaceNameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewGetInterfaceDetailsByDeviceIDAndInterfaceNameNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetInterfaceDetailsByDeviceIDAndInterfaceNameServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetInterfaceDetailsByDeviceIDAndInterfaceNameGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetInterfaceDetailsByDeviceIDAndInterfaceNameOK creates a GetInterfaceDetailsByDeviceIDAndInterfaceNameOK with default headers values
func NewGetInterfaceDetailsByDeviceIDAndInterfaceNameOK() *GetInterfaceDetailsByDeviceIDAndInterfaceNameOK {
	return &GetInterfaceDetailsByDeviceIDAndInterfaceNameOK{}
}

/*GetInterfaceDetailsByDeviceIDAndInterfaceNameOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type GetInterfaceDetailsByDeviceIDAndInterfaceNameOK struct {
	Payload *models.DeviceIfResult
}

func (o *GetInterfaceDetailsByDeviceIDAndInterfaceNameOK) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/network-device/{deviceId}/interface-name][%d] getInterfaceDetailsByDeviceIdAndInterfaceNameOK  %+v", 200, o.Payload)
}

func (o *GetInterfaceDetailsByDeviceIDAndInterfaceNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeviceIfResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInterfaceDetailsByDeviceIDAndInterfaceNameNoContent creates a GetInterfaceDetailsByDeviceIDAndInterfaceNameNoContent with default headers values
func NewGetInterfaceDetailsByDeviceIDAndInterfaceNameNoContent() *GetInterfaceDetailsByDeviceIDAndInterfaceNameNoContent {
	return &GetInterfaceDetailsByDeviceIDAndInterfaceNameNoContent{}
}

/*GetInterfaceDetailsByDeviceIDAndInterfaceNameNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type GetInterfaceDetailsByDeviceIDAndInterfaceNameNoContent struct {
}

func (o *GetInterfaceDetailsByDeviceIDAndInterfaceNameNoContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/network-device/{deviceId}/interface-name][%d] getInterfaceDetailsByDeviceIdAndInterfaceNameNoContent ", 204)
}

func (o *GetInterfaceDetailsByDeviceIDAndInterfaceNameNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInterfaceDetailsByDeviceIDAndInterfaceNamePartialContent creates a GetInterfaceDetailsByDeviceIDAndInterfaceNamePartialContent with default headers values
func NewGetInterfaceDetailsByDeviceIDAndInterfaceNamePartialContent() *GetInterfaceDetailsByDeviceIDAndInterfaceNamePartialContent {
	return &GetInterfaceDetailsByDeviceIDAndInterfaceNamePartialContent{}
}

/*GetInterfaceDetailsByDeviceIDAndInterfaceNamePartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type GetInterfaceDetailsByDeviceIDAndInterfaceNamePartialContent struct {
}

func (o *GetInterfaceDetailsByDeviceIDAndInterfaceNamePartialContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/network-device/{deviceId}/interface-name][%d] getInterfaceDetailsByDeviceIdAndInterfaceNamePartialContent ", 206)
}

func (o *GetInterfaceDetailsByDeviceIDAndInterfaceNamePartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInterfaceDetailsByDeviceIDAndInterfaceNameBadRequest creates a GetInterfaceDetailsByDeviceIDAndInterfaceNameBadRequest with default headers values
func NewGetInterfaceDetailsByDeviceIDAndInterfaceNameBadRequest() *GetInterfaceDetailsByDeviceIDAndInterfaceNameBadRequest {
	return &GetInterfaceDetailsByDeviceIDAndInterfaceNameBadRequest{}
}

/*GetInterfaceDetailsByDeviceIDAndInterfaceNameBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type GetInterfaceDetailsByDeviceIDAndInterfaceNameBadRequest struct {
}

func (o *GetInterfaceDetailsByDeviceIDAndInterfaceNameBadRequest) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/network-device/{deviceId}/interface-name][%d] getInterfaceDetailsByDeviceIdAndInterfaceNameBadRequest ", 400)
}

func (o *GetInterfaceDetailsByDeviceIDAndInterfaceNameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInterfaceDetailsByDeviceIDAndInterfaceNameUnauthorized creates a GetInterfaceDetailsByDeviceIDAndInterfaceNameUnauthorized with default headers values
func NewGetInterfaceDetailsByDeviceIDAndInterfaceNameUnauthorized() *GetInterfaceDetailsByDeviceIDAndInterfaceNameUnauthorized {
	return &GetInterfaceDetailsByDeviceIDAndInterfaceNameUnauthorized{}
}

/*GetInterfaceDetailsByDeviceIDAndInterfaceNameUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type GetInterfaceDetailsByDeviceIDAndInterfaceNameUnauthorized struct {
}

func (o *GetInterfaceDetailsByDeviceIDAndInterfaceNameUnauthorized) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/network-device/{deviceId}/interface-name][%d] getInterfaceDetailsByDeviceIdAndInterfaceNameUnauthorized ", 401)
}

func (o *GetInterfaceDetailsByDeviceIDAndInterfaceNameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInterfaceDetailsByDeviceIDAndInterfaceNameForbidden creates a GetInterfaceDetailsByDeviceIDAndInterfaceNameForbidden with default headers values
func NewGetInterfaceDetailsByDeviceIDAndInterfaceNameForbidden() *GetInterfaceDetailsByDeviceIDAndInterfaceNameForbidden {
	return &GetInterfaceDetailsByDeviceIDAndInterfaceNameForbidden{}
}

/*GetInterfaceDetailsByDeviceIDAndInterfaceNameForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type GetInterfaceDetailsByDeviceIDAndInterfaceNameForbidden struct {
}

func (o *GetInterfaceDetailsByDeviceIDAndInterfaceNameForbidden) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/network-device/{deviceId}/interface-name][%d] getInterfaceDetailsByDeviceIdAndInterfaceNameForbidden ", 403)
}

func (o *GetInterfaceDetailsByDeviceIDAndInterfaceNameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInterfaceDetailsByDeviceIDAndInterfaceNameNotFound creates a GetInterfaceDetailsByDeviceIDAndInterfaceNameNotFound with default headers values
func NewGetInterfaceDetailsByDeviceIDAndInterfaceNameNotFound() *GetInterfaceDetailsByDeviceIDAndInterfaceNameNotFound {
	return &GetInterfaceDetailsByDeviceIDAndInterfaceNameNotFound{}
}

/*GetInterfaceDetailsByDeviceIDAndInterfaceNameNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type GetInterfaceDetailsByDeviceIDAndInterfaceNameNotFound struct {
}

func (o *GetInterfaceDetailsByDeviceIDAndInterfaceNameNotFound) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/network-device/{deviceId}/interface-name][%d] getInterfaceDetailsByDeviceIdAndInterfaceNameNotFound ", 404)
}

func (o *GetInterfaceDetailsByDeviceIDAndInterfaceNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInterfaceDetailsByDeviceIDAndInterfaceNameConflict creates a GetInterfaceDetailsByDeviceIDAndInterfaceNameConflict with default headers values
func NewGetInterfaceDetailsByDeviceIDAndInterfaceNameConflict() *GetInterfaceDetailsByDeviceIDAndInterfaceNameConflict {
	return &GetInterfaceDetailsByDeviceIDAndInterfaceNameConflict{}
}

/*GetInterfaceDetailsByDeviceIDAndInterfaceNameConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type GetInterfaceDetailsByDeviceIDAndInterfaceNameConflict struct {
}

func (o *GetInterfaceDetailsByDeviceIDAndInterfaceNameConflict) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/network-device/{deviceId}/interface-name][%d] getInterfaceDetailsByDeviceIdAndInterfaceNameConflict ", 409)
}

func (o *GetInterfaceDetailsByDeviceIDAndInterfaceNameConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInterfaceDetailsByDeviceIDAndInterfaceNameUnsupportedMediaType creates a GetInterfaceDetailsByDeviceIDAndInterfaceNameUnsupportedMediaType with default headers values
func NewGetInterfaceDetailsByDeviceIDAndInterfaceNameUnsupportedMediaType() *GetInterfaceDetailsByDeviceIDAndInterfaceNameUnsupportedMediaType {
	return &GetInterfaceDetailsByDeviceIDAndInterfaceNameUnsupportedMediaType{}
}

/*GetInterfaceDetailsByDeviceIDAndInterfaceNameUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type GetInterfaceDetailsByDeviceIDAndInterfaceNameUnsupportedMediaType struct {
}

func (o *GetInterfaceDetailsByDeviceIDAndInterfaceNameUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/network-device/{deviceId}/interface-name][%d] getInterfaceDetailsByDeviceIdAndInterfaceNameUnsupportedMediaType ", 415)
}

func (o *GetInterfaceDetailsByDeviceIDAndInterfaceNameUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInterfaceDetailsByDeviceIDAndInterfaceNameInternalServerError creates a GetInterfaceDetailsByDeviceIDAndInterfaceNameInternalServerError with default headers values
func NewGetInterfaceDetailsByDeviceIDAndInterfaceNameInternalServerError() *GetInterfaceDetailsByDeviceIDAndInterfaceNameInternalServerError {
	return &GetInterfaceDetailsByDeviceIDAndInterfaceNameInternalServerError{}
}

/*GetInterfaceDetailsByDeviceIDAndInterfaceNameInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type GetInterfaceDetailsByDeviceIDAndInterfaceNameInternalServerError struct {
}

func (o *GetInterfaceDetailsByDeviceIDAndInterfaceNameInternalServerError) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/network-device/{deviceId}/interface-name][%d] getInterfaceDetailsByDeviceIdAndInterfaceNameInternalServerError ", 500)
}

func (o *GetInterfaceDetailsByDeviceIDAndInterfaceNameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInterfaceDetailsByDeviceIDAndInterfaceNameNotImplemented creates a GetInterfaceDetailsByDeviceIDAndInterfaceNameNotImplemented with default headers values
func NewGetInterfaceDetailsByDeviceIDAndInterfaceNameNotImplemented() *GetInterfaceDetailsByDeviceIDAndInterfaceNameNotImplemented {
	return &GetInterfaceDetailsByDeviceIDAndInterfaceNameNotImplemented{}
}

/*GetInterfaceDetailsByDeviceIDAndInterfaceNameNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type GetInterfaceDetailsByDeviceIDAndInterfaceNameNotImplemented struct {
}

func (o *GetInterfaceDetailsByDeviceIDAndInterfaceNameNotImplemented) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/network-device/{deviceId}/interface-name][%d] getInterfaceDetailsByDeviceIdAndInterfaceNameNotImplemented ", 501)
}

func (o *GetInterfaceDetailsByDeviceIDAndInterfaceNameNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInterfaceDetailsByDeviceIDAndInterfaceNameServiceUnavailable creates a GetInterfaceDetailsByDeviceIDAndInterfaceNameServiceUnavailable with default headers values
func NewGetInterfaceDetailsByDeviceIDAndInterfaceNameServiceUnavailable() *GetInterfaceDetailsByDeviceIDAndInterfaceNameServiceUnavailable {
	return &GetInterfaceDetailsByDeviceIDAndInterfaceNameServiceUnavailable{}
}

/*GetInterfaceDetailsByDeviceIDAndInterfaceNameServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type GetInterfaceDetailsByDeviceIDAndInterfaceNameServiceUnavailable struct {
}

func (o *GetInterfaceDetailsByDeviceIDAndInterfaceNameServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/network-device/{deviceId}/interface-name][%d] getInterfaceDetailsByDeviceIdAndInterfaceNameServiceUnavailable ", 503)
}

func (o *GetInterfaceDetailsByDeviceIDAndInterfaceNameServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInterfaceDetailsByDeviceIDAndInterfaceNameGatewayTimeout creates a GetInterfaceDetailsByDeviceIDAndInterfaceNameGatewayTimeout with default headers values
func NewGetInterfaceDetailsByDeviceIDAndInterfaceNameGatewayTimeout() *GetInterfaceDetailsByDeviceIDAndInterfaceNameGatewayTimeout {
	return &GetInterfaceDetailsByDeviceIDAndInterfaceNameGatewayTimeout{}
}

/*GetInterfaceDetailsByDeviceIDAndInterfaceNameGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type GetInterfaceDetailsByDeviceIDAndInterfaceNameGatewayTimeout struct {
}

func (o *GetInterfaceDetailsByDeviceIDAndInterfaceNameGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/network-device/{deviceId}/interface-name][%d] getInterfaceDetailsByDeviceIdAndInterfaceNameGatewayTimeout ", 504)
}

func (o *GetInterfaceDetailsByDeviceIDAndInterfaceNameGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
