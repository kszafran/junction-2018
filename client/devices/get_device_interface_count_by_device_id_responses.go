// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// GetDeviceInterfaceCountByDeviceIDReader is a Reader for the GetDeviceInterfaceCountByDeviceID structure.
type GetDeviceInterfaceCountByDeviceIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDeviceInterfaceCountByDeviceIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetDeviceInterfaceCountByDeviceIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewGetDeviceInterfaceCountByDeviceIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewGetDeviceInterfaceCountByDeviceIDPartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetDeviceInterfaceCountByDeviceIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetDeviceInterfaceCountByDeviceIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetDeviceInterfaceCountByDeviceIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetDeviceInterfaceCountByDeviceIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewGetDeviceInterfaceCountByDeviceIDConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewGetDeviceInterfaceCountByDeviceIDUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetDeviceInterfaceCountByDeviceIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewGetDeviceInterfaceCountByDeviceIDNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetDeviceInterfaceCountByDeviceIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetDeviceInterfaceCountByDeviceIDGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDeviceInterfaceCountByDeviceIDOK creates a GetDeviceInterfaceCountByDeviceIDOK with default headers values
func NewGetDeviceInterfaceCountByDeviceIDOK() *GetDeviceInterfaceCountByDeviceIDOK {
	return &GetDeviceInterfaceCountByDeviceIDOK{}
}

/*GetDeviceInterfaceCountByDeviceIDOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type GetDeviceInterfaceCountByDeviceIDOK struct {
	Payload *models.CountResult
}

func (o *GetDeviceInterfaceCountByDeviceIDOK) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/network-device/{deviceId}/count][%d] getDeviceInterfaceCountByDeviceIdOK  %+v", 200, o.Payload)
}

func (o *GetDeviceInterfaceCountByDeviceIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CountResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeviceInterfaceCountByDeviceIDNoContent creates a GetDeviceInterfaceCountByDeviceIDNoContent with default headers values
func NewGetDeviceInterfaceCountByDeviceIDNoContent() *GetDeviceInterfaceCountByDeviceIDNoContent {
	return &GetDeviceInterfaceCountByDeviceIDNoContent{}
}

/*GetDeviceInterfaceCountByDeviceIDNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type GetDeviceInterfaceCountByDeviceIDNoContent struct {
}

func (o *GetDeviceInterfaceCountByDeviceIDNoContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/network-device/{deviceId}/count][%d] getDeviceInterfaceCountByDeviceIdNoContent ", 204)
}

func (o *GetDeviceInterfaceCountByDeviceIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceInterfaceCountByDeviceIDPartialContent creates a GetDeviceInterfaceCountByDeviceIDPartialContent with default headers values
func NewGetDeviceInterfaceCountByDeviceIDPartialContent() *GetDeviceInterfaceCountByDeviceIDPartialContent {
	return &GetDeviceInterfaceCountByDeviceIDPartialContent{}
}

/*GetDeviceInterfaceCountByDeviceIDPartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type GetDeviceInterfaceCountByDeviceIDPartialContent struct {
}

func (o *GetDeviceInterfaceCountByDeviceIDPartialContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/network-device/{deviceId}/count][%d] getDeviceInterfaceCountByDeviceIdPartialContent ", 206)
}

func (o *GetDeviceInterfaceCountByDeviceIDPartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceInterfaceCountByDeviceIDBadRequest creates a GetDeviceInterfaceCountByDeviceIDBadRequest with default headers values
func NewGetDeviceInterfaceCountByDeviceIDBadRequest() *GetDeviceInterfaceCountByDeviceIDBadRequest {
	return &GetDeviceInterfaceCountByDeviceIDBadRequest{}
}

/*GetDeviceInterfaceCountByDeviceIDBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type GetDeviceInterfaceCountByDeviceIDBadRequest struct {
}

func (o *GetDeviceInterfaceCountByDeviceIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/network-device/{deviceId}/count][%d] getDeviceInterfaceCountByDeviceIdBadRequest ", 400)
}

func (o *GetDeviceInterfaceCountByDeviceIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceInterfaceCountByDeviceIDUnauthorized creates a GetDeviceInterfaceCountByDeviceIDUnauthorized with default headers values
func NewGetDeviceInterfaceCountByDeviceIDUnauthorized() *GetDeviceInterfaceCountByDeviceIDUnauthorized {
	return &GetDeviceInterfaceCountByDeviceIDUnauthorized{}
}

/*GetDeviceInterfaceCountByDeviceIDUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type GetDeviceInterfaceCountByDeviceIDUnauthorized struct {
}

func (o *GetDeviceInterfaceCountByDeviceIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/network-device/{deviceId}/count][%d] getDeviceInterfaceCountByDeviceIdUnauthorized ", 401)
}

func (o *GetDeviceInterfaceCountByDeviceIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceInterfaceCountByDeviceIDForbidden creates a GetDeviceInterfaceCountByDeviceIDForbidden with default headers values
func NewGetDeviceInterfaceCountByDeviceIDForbidden() *GetDeviceInterfaceCountByDeviceIDForbidden {
	return &GetDeviceInterfaceCountByDeviceIDForbidden{}
}

/*GetDeviceInterfaceCountByDeviceIDForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type GetDeviceInterfaceCountByDeviceIDForbidden struct {
}

func (o *GetDeviceInterfaceCountByDeviceIDForbidden) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/network-device/{deviceId}/count][%d] getDeviceInterfaceCountByDeviceIdForbidden ", 403)
}

func (o *GetDeviceInterfaceCountByDeviceIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceInterfaceCountByDeviceIDNotFound creates a GetDeviceInterfaceCountByDeviceIDNotFound with default headers values
func NewGetDeviceInterfaceCountByDeviceIDNotFound() *GetDeviceInterfaceCountByDeviceIDNotFound {
	return &GetDeviceInterfaceCountByDeviceIDNotFound{}
}

/*GetDeviceInterfaceCountByDeviceIDNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type GetDeviceInterfaceCountByDeviceIDNotFound struct {
}

func (o *GetDeviceInterfaceCountByDeviceIDNotFound) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/network-device/{deviceId}/count][%d] getDeviceInterfaceCountByDeviceIdNotFound ", 404)
}

func (o *GetDeviceInterfaceCountByDeviceIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceInterfaceCountByDeviceIDConflict creates a GetDeviceInterfaceCountByDeviceIDConflict with default headers values
func NewGetDeviceInterfaceCountByDeviceIDConflict() *GetDeviceInterfaceCountByDeviceIDConflict {
	return &GetDeviceInterfaceCountByDeviceIDConflict{}
}

/*GetDeviceInterfaceCountByDeviceIDConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type GetDeviceInterfaceCountByDeviceIDConflict struct {
}

func (o *GetDeviceInterfaceCountByDeviceIDConflict) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/network-device/{deviceId}/count][%d] getDeviceInterfaceCountByDeviceIdConflict ", 409)
}

func (o *GetDeviceInterfaceCountByDeviceIDConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceInterfaceCountByDeviceIDUnsupportedMediaType creates a GetDeviceInterfaceCountByDeviceIDUnsupportedMediaType with default headers values
func NewGetDeviceInterfaceCountByDeviceIDUnsupportedMediaType() *GetDeviceInterfaceCountByDeviceIDUnsupportedMediaType {
	return &GetDeviceInterfaceCountByDeviceIDUnsupportedMediaType{}
}

/*GetDeviceInterfaceCountByDeviceIDUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type GetDeviceInterfaceCountByDeviceIDUnsupportedMediaType struct {
}

func (o *GetDeviceInterfaceCountByDeviceIDUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/network-device/{deviceId}/count][%d] getDeviceInterfaceCountByDeviceIdUnsupportedMediaType ", 415)
}

func (o *GetDeviceInterfaceCountByDeviceIDUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceInterfaceCountByDeviceIDInternalServerError creates a GetDeviceInterfaceCountByDeviceIDInternalServerError with default headers values
func NewGetDeviceInterfaceCountByDeviceIDInternalServerError() *GetDeviceInterfaceCountByDeviceIDInternalServerError {
	return &GetDeviceInterfaceCountByDeviceIDInternalServerError{}
}

/*GetDeviceInterfaceCountByDeviceIDInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type GetDeviceInterfaceCountByDeviceIDInternalServerError struct {
}

func (o *GetDeviceInterfaceCountByDeviceIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/network-device/{deviceId}/count][%d] getDeviceInterfaceCountByDeviceIdInternalServerError ", 500)
}

func (o *GetDeviceInterfaceCountByDeviceIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceInterfaceCountByDeviceIDNotImplemented creates a GetDeviceInterfaceCountByDeviceIDNotImplemented with default headers values
func NewGetDeviceInterfaceCountByDeviceIDNotImplemented() *GetDeviceInterfaceCountByDeviceIDNotImplemented {
	return &GetDeviceInterfaceCountByDeviceIDNotImplemented{}
}

/*GetDeviceInterfaceCountByDeviceIDNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type GetDeviceInterfaceCountByDeviceIDNotImplemented struct {
}

func (o *GetDeviceInterfaceCountByDeviceIDNotImplemented) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/network-device/{deviceId}/count][%d] getDeviceInterfaceCountByDeviceIdNotImplemented ", 501)
}

func (o *GetDeviceInterfaceCountByDeviceIDNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceInterfaceCountByDeviceIDServiceUnavailable creates a GetDeviceInterfaceCountByDeviceIDServiceUnavailable with default headers values
func NewGetDeviceInterfaceCountByDeviceIDServiceUnavailable() *GetDeviceInterfaceCountByDeviceIDServiceUnavailable {
	return &GetDeviceInterfaceCountByDeviceIDServiceUnavailable{}
}

/*GetDeviceInterfaceCountByDeviceIDServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type GetDeviceInterfaceCountByDeviceIDServiceUnavailable struct {
}

func (o *GetDeviceInterfaceCountByDeviceIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/network-device/{deviceId}/count][%d] getDeviceInterfaceCountByDeviceIdServiceUnavailable ", 503)
}

func (o *GetDeviceInterfaceCountByDeviceIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceInterfaceCountByDeviceIDGatewayTimeout creates a GetDeviceInterfaceCountByDeviceIDGatewayTimeout with default headers values
func NewGetDeviceInterfaceCountByDeviceIDGatewayTimeout() *GetDeviceInterfaceCountByDeviceIDGatewayTimeout {
	return &GetDeviceInterfaceCountByDeviceIDGatewayTimeout{}
}

/*GetDeviceInterfaceCountByDeviceIDGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type GetDeviceInterfaceCountByDeviceIDGatewayTimeout struct {
}

func (o *GetDeviceInterfaceCountByDeviceIDGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/network-device/{deviceId}/count][%d] getDeviceInterfaceCountByDeviceIdGatewayTimeout ", 504)
}

func (o *GetDeviceInterfaceCountByDeviceIDGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
