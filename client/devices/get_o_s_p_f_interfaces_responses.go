// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// GetOSPFInterfacesReader is a Reader for the GetOSPFInterfaces structure.
type GetOSPFInterfacesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOSPFInterfacesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetOSPFInterfacesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewGetOSPFInterfacesNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewGetOSPFInterfacesPartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetOSPFInterfacesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetOSPFInterfacesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetOSPFInterfacesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetOSPFInterfacesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewGetOSPFInterfacesConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewGetOSPFInterfacesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetOSPFInterfacesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewGetOSPFInterfacesNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetOSPFInterfacesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetOSPFInterfacesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetOSPFInterfacesOK creates a GetOSPFInterfacesOK with default headers values
func NewGetOSPFInterfacesOK() *GetOSPFInterfacesOK {
	return &GetOSPFInterfacesOK{}
}

/*GetOSPFInterfacesOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type GetOSPFInterfacesOK struct {
	Payload *models.DeviceIfListResult
}

func (o *GetOSPFInterfacesOK) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/ospf][%d] getOSPFInterfacesOK  %+v", 200, o.Payload)
}

func (o *GetOSPFInterfacesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeviceIfListResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOSPFInterfacesNoContent creates a GetOSPFInterfacesNoContent with default headers values
func NewGetOSPFInterfacesNoContent() *GetOSPFInterfacesNoContent {
	return &GetOSPFInterfacesNoContent{}
}

/*GetOSPFInterfacesNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type GetOSPFInterfacesNoContent struct {
}

func (o *GetOSPFInterfacesNoContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/ospf][%d] getOSPFInterfacesNoContent ", 204)
}

func (o *GetOSPFInterfacesNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOSPFInterfacesPartialContent creates a GetOSPFInterfacesPartialContent with default headers values
func NewGetOSPFInterfacesPartialContent() *GetOSPFInterfacesPartialContent {
	return &GetOSPFInterfacesPartialContent{}
}

/*GetOSPFInterfacesPartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type GetOSPFInterfacesPartialContent struct {
}

func (o *GetOSPFInterfacesPartialContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/ospf][%d] getOSPFInterfacesPartialContent ", 206)
}

func (o *GetOSPFInterfacesPartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOSPFInterfacesBadRequest creates a GetOSPFInterfacesBadRequest with default headers values
func NewGetOSPFInterfacesBadRequest() *GetOSPFInterfacesBadRequest {
	return &GetOSPFInterfacesBadRequest{}
}

/*GetOSPFInterfacesBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type GetOSPFInterfacesBadRequest struct {
}

func (o *GetOSPFInterfacesBadRequest) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/ospf][%d] getOSPFInterfacesBadRequest ", 400)
}

func (o *GetOSPFInterfacesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOSPFInterfacesUnauthorized creates a GetOSPFInterfacesUnauthorized with default headers values
func NewGetOSPFInterfacesUnauthorized() *GetOSPFInterfacesUnauthorized {
	return &GetOSPFInterfacesUnauthorized{}
}

/*GetOSPFInterfacesUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type GetOSPFInterfacesUnauthorized struct {
}

func (o *GetOSPFInterfacesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/ospf][%d] getOSPFInterfacesUnauthorized ", 401)
}

func (o *GetOSPFInterfacesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOSPFInterfacesForbidden creates a GetOSPFInterfacesForbidden with default headers values
func NewGetOSPFInterfacesForbidden() *GetOSPFInterfacesForbidden {
	return &GetOSPFInterfacesForbidden{}
}

/*GetOSPFInterfacesForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type GetOSPFInterfacesForbidden struct {
}

func (o *GetOSPFInterfacesForbidden) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/ospf][%d] getOSPFInterfacesForbidden ", 403)
}

func (o *GetOSPFInterfacesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOSPFInterfacesNotFound creates a GetOSPFInterfacesNotFound with default headers values
func NewGetOSPFInterfacesNotFound() *GetOSPFInterfacesNotFound {
	return &GetOSPFInterfacesNotFound{}
}

/*GetOSPFInterfacesNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type GetOSPFInterfacesNotFound struct {
}

func (o *GetOSPFInterfacesNotFound) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/ospf][%d] getOSPFInterfacesNotFound ", 404)
}

func (o *GetOSPFInterfacesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOSPFInterfacesConflict creates a GetOSPFInterfacesConflict with default headers values
func NewGetOSPFInterfacesConflict() *GetOSPFInterfacesConflict {
	return &GetOSPFInterfacesConflict{}
}

/*GetOSPFInterfacesConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type GetOSPFInterfacesConflict struct {
}

func (o *GetOSPFInterfacesConflict) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/ospf][%d] getOSPFInterfacesConflict ", 409)
}

func (o *GetOSPFInterfacesConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOSPFInterfacesUnsupportedMediaType creates a GetOSPFInterfacesUnsupportedMediaType with default headers values
func NewGetOSPFInterfacesUnsupportedMediaType() *GetOSPFInterfacesUnsupportedMediaType {
	return &GetOSPFInterfacesUnsupportedMediaType{}
}

/*GetOSPFInterfacesUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type GetOSPFInterfacesUnsupportedMediaType struct {
}

func (o *GetOSPFInterfacesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/ospf][%d] getOSPFInterfacesUnsupportedMediaType ", 415)
}

func (o *GetOSPFInterfacesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOSPFInterfacesInternalServerError creates a GetOSPFInterfacesInternalServerError with default headers values
func NewGetOSPFInterfacesInternalServerError() *GetOSPFInterfacesInternalServerError {
	return &GetOSPFInterfacesInternalServerError{}
}

/*GetOSPFInterfacesInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type GetOSPFInterfacesInternalServerError struct {
}

func (o *GetOSPFInterfacesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/ospf][%d] getOSPFInterfacesInternalServerError ", 500)
}

func (o *GetOSPFInterfacesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOSPFInterfacesNotImplemented creates a GetOSPFInterfacesNotImplemented with default headers values
func NewGetOSPFInterfacesNotImplemented() *GetOSPFInterfacesNotImplemented {
	return &GetOSPFInterfacesNotImplemented{}
}

/*GetOSPFInterfacesNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type GetOSPFInterfacesNotImplemented struct {
}

func (o *GetOSPFInterfacesNotImplemented) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/ospf][%d] getOSPFInterfacesNotImplemented ", 501)
}

func (o *GetOSPFInterfacesNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOSPFInterfacesServiceUnavailable creates a GetOSPFInterfacesServiceUnavailable with default headers values
func NewGetOSPFInterfacesServiceUnavailable() *GetOSPFInterfacesServiceUnavailable {
	return &GetOSPFInterfacesServiceUnavailable{}
}

/*GetOSPFInterfacesServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type GetOSPFInterfacesServiceUnavailable struct {
}

func (o *GetOSPFInterfacesServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/ospf][%d] getOSPFInterfacesServiceUnavailable ", 503)
}

func (o *GetOSPFInterfacesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOSPFInterfacesGatewayTimeout creates a GetOSPFInterfacesGatewayTimeout with default headers values
func NewGetOSPFInterfacesGatewayTimeout() *GetOSPFInterfacesGatewayTimeout {
	return &GetOSPFInterfacesGatewayTimeout{}
}

/*GetOSPFInterfacesGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type GetOSPFInterfacesGatewayTimeout struct {
}

func (o *GetOSPFInterfacesGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/interface/ospf][%d] getOSPFInterfacesGatewayTimeout ", 504)
}

func (o *GetOSPFInterfacesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
