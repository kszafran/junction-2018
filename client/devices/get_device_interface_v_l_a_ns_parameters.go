// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetDeviceInterfaceVLANsParams creates a new GetDeviceInterfaceVLANsParams object
// with the default values initialized.
func NewGetDeviceInterfaceVLANsParams() *GetDeviceInterfaceVLANsParams {
	var ()
	return &GetDeviceInterfaceVLANsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetDeviceInterfaceVLANsParamsWithTimeout creates a new GetDeviceInterfaceVLANsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetDeviceInterfaceVLANsParamsWithTimeout(timeout time.Duration) *GetDeviceInterfaceVLANsParams {
	var ()
	return &GetDeviceInterfaceVLANsParams{

		timeout: timeout,
	}
}

// NewGetDeviceInterfaceVLANsParamsWithContext creates a new GetDeviceInterfaceVLANsParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetDeviceInterfaceVLANsParamsWithContext(ctx context.Context) *GetDeviceInterfaceVLANsParams {
	var ()
	return &GetDeviceInterfaceVLANsParams{

		Context: ctx,
	}
}

// NewGetDeviceInterfaceVLANsParamsWithHTTPClient creates a new GetDeviceInterfaceVLANsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetDeviceInterfaceVLANsParamsWithHTTPClient(client *http.Client) *GetDeviceInterfaceVLANsParams {
	var ()
	return &GetDeviceInterfaceVLANsParams{
		HTTPClient: client,
	}
}

/*GetDeviceInterfaceVLANsParams contains all the parameters to send to the API endpoint
for the get device interface v l a ns operation typically these are written to a http.Request
*/
type GetDeviceInterfaceVLANsParams struct {

	/*ID
	  deviceUUID

	*/
	ID string
	/*InterfaceType
	  Vlan assocaited with sub-interface

	*/
	InterfaceType *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get device interface v l a ns params
func (o *GetDeviceInterfaceVLANsParams) WithTimeout(timeout time.Duration) *GetDeviceInterfaceVLANsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get device interface v l a ns params
func (o *GetDeviceInterfaceVLANsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get device interface v l a ns params
func (o *GetDeviceInterfaceVLANsParams) WithContext(ctx context.Context) *GetDeviceInterfaceVLANsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get device interface v l a ns params
func (o *GetDeviceInterfaceVLANsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get device interface v l a ns params
func (o *GetDeviceInterfaceVLANsParams) WithHTTPClient(client *http.Client) *GetDeviceInterfaceVLANsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get device interface v l a ns params
func (o *GetDeviceInterfaceVLANsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithID adds the id to the get device interface v l a ns params
func (o *GetDeviceInterfaceVLANsParams) WithID(id string) *GetDeviceInterfaceVLANsParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the get device interface v l a ns params
func (o *GetDeviceInterfaceVLANsParams) SetID(id string) {
	o.ID = id
}

// WithInterfaceType adds the interfaceType to the get device interface v l a ns params
func (o *GetDeviceInterfaceVLANsParams) WithInterfaceType(interfaceType *string) *GetDeviceInterfaceVLANsParams {
	o.SetInterfaceType(interfaceType)
	return o
}

// SetInterfaceType adds the interfaceType to the get device interface v l a ns params
func (o *GetDeviceInterfaceVLANsParams) SetInterfaceType(interfaceType *string) {
	o.InterfaceType = interfaceType
}

// WriteToRequest writes these params to a swagger request
func (o *GetDeviceInterfaceVLANsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	if o.InterfaceType != nil {

		// query param interfaceType
		var qrInterfaceType string
		if o.InterfaceType != nil {
			qrInterfaceType = *o.InterfaceType
		}
		qInterfaceType := qrInterfaceType
		if qInterfaceType != "" {
			if err := r.SetQueryParam("interfaceType", qInterfaceType); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
