// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// GetDeviceConfigForAllDevicesReader is a Reader for the GetDeviceConfigForAllDevices structure.
type GetDeviceConfigForAllDevicesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDeviceConfigForAllDevicesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetDeviceConfigForAllDevicesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewGetDeviceConfigForAllDevicesNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewGetDeviceConfigForAllDevicesPartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetDeviceConfigForAllDevicesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetDeviceConfigForAllDevicesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetDeviceConfigForAllDevicesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetDeviceConfigForAllDevicesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewGetDeviceConfigForAllDevicesConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewGetDeviceConfigForAllDevicesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetDeviceConfigForAllDevicesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewGetDeviceConfigForAllDevicesNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetDeviceConfigForAllDevicesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetDeviceConfigForAllDevicesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDeviceConfigForAllDevicesOK creates a GetDeviceConfigForAllDevicesOK with default headers values
func NewGetDeviceConfigForAllDevicesOK() *GetDeviceConfigForAllDevicesOK {
	return &GetDeviceConfigForAllDevicesOK{}
}

/*GetDeviceConfigForAllDevicesOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type GetDeviceConfigForAllDevicesOK struct {
	Payload *models.RawCliInfoNIOListResult
}

func (o *GetDeviceConfigForAllDevicesOK) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/config][%d] getDeviceConfigForAllDevicesOK  %+v", 200, o.Payload)
}

func (o *GetDeviceConfigForAllDevicesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RawCliInfoNIOListResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeviceConfigForAllDevicesNoContent creates a GetDeviceConfigForAllDevicesNoContent with default headers values
func NewGetDeviceConfigForAllDevicesNoContent() *GetDeviceConfigForAllDevicesNoContent {
	return &GetDeviceConfigForAllDevicesNoContent{}
}

/*GetDeviceConfigForAllDevicesNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type GetDeviceConfigForAllDevicesNoContent struct {
}

func (o *GetDeviceConfigForAllDevicesNoContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/config][%d] getDeviceConfigForAllDevicesNoContent ", 204)
}

func (o *GetDeviceConfigForAllDevicesNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceConfigForAllDevicesPartialContent creates a GetDeviceConfigForAllDevicesPartialContent with default headers values
func NewGetDeviceConfigForAllDevicesPartialContent() *GetDeviceConfigForAllDevicesPartialContent {
	return &GetDeviceConfigForAllDevicesPartialContent{}
}

/*GetDeviceConfigForAllDevicesPartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type GetDeviceConfigForAllDevicesPartialContent struct {
}

func (o *GetDeviceConfigForAllDevicesPartialContent) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/config][%d] getDeviceConfigForAllDevicesPartialContent ", 206)
}

func (o *GetDeviceConfigForAllDevicesPartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceConfigForAllDevicesBadRequest creates a GetDeviceConfigForAllDevicesBadRequest with default headers values
func NewGetDeviceConfigForAllDevicesBadRequest() *GetDeviceConfigForAllDevicesBadRequest {
	return &GetDeviceConfigForAllDevicesBadRequest{}
}

/*GetDeviceConfigForAllDevicesBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type GetDeviceConfigForAllDevicesBadRequest struct {
}

func (o *GetDeviceConfigForAllDevicesBadRequest) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/config][%d] getDeviceConfigForAllDevicesBadRequest ", 400)
}

func (o *GetDeviceConfigForAllDevicesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceConfigForAllDevicesUnauthorized creates a GetDeviceConfigForAllDevicesUnauthorized with default headers values
func NewGetDeviceConfigForAllDevicesUnauthorized() *GetDeviceConfigForAllDevicesUnauthorized {
	return &GetDeviceConfigForAllDevicesUnauthorized{}
}

/*GetDeviceConfigForAllDevicesUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type GetDeviceConfigForAllDevicesUnauthorized struct {
}

func (o *GetDeviceConfigForAllDevicesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/config][%d] getDeviceConfigForAllDevicesUnauthorized ", 401)
}

func (o *GetDeviceConfigForAllDevicesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceConfigForAllDevicesForbidden creates a GetDeviceConfigForAllDevicesForbidden with default headers values
func NewGetDeviceConfigForAllDevicesForbidden() *GetDeviceConfigForAllDevicesForbidden {
	return &GetDeviceConfigForAllDevicesForbidden{}
}

/*GetDeviceConfigForAllDevicesForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type GetDeviceConfigForAllDevicesForbidden struct {
}

func (o *GetDeviceConfigForAllDevicesForbidden) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/config][%d] getDeviceConfigForAllDevicesForbidden ", 403)
}

func (o *GetDeviceConfigForAllDevicesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceConfigForAllDevicesNotFound creates a GetDeviceConfigForAllDevicesNotFound with default headers values
func NewGetDeviceConfigForAllDevicesNotFound() *GetDeviceConfigForAllDevicesNotFound {
	return &GetDeviceConfigForAllDevicesNotFound{}
}

/*GetDeviceConfigForAllDevicesNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type GetDeviceConfigForAllDevicesNotFound struct {
}

func (o *GetDeviceConfigForAllDevicesNotFound) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/config][%d] getDeviceConfigForAllDevicesNotFound ", 404)
}

func (o *GetDeviceConfigForAllDevicesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceConfigForAllDevicesConflict creates a GetDeviceConfigForAllDevicesConflict with default headers values
func NewGetDeviceConfigForAllDevicesConflict() *GetDeviceConfigForAllDevicesConflict {
	return &GetDeviceConfigForAllDevicesConflict{}
}

/*GetDeviceConfigForAllDevicesConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type GetDeviceConfigForAllDevicesConflict struct {
}

func (o *GetDeviceConfigForAllDevicesConflict) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/config][%d] getDeviceConfigForAllDevicesConflict ", 409)
}

func (o *GetDeviceConfigForAllDevicesConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceConfigForAllDevicesUnsupportedMediaType creates a GetDeviceConfigForAllDevicesUnsupportedMediaType with default headers values
func NewGetDeviceConfigForAllDevicesUnsupportedMediaType() *GetDeviceConfigForAllDevicesUnsupportedMediaType {
	return &GetDeviceConfigForAllDevicesUnsupportedMediaType{}
}

/*GetDeviceConfigForAllDevicesUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type GetDeviceConfigForAllDevicesUnsupportedMediaType struct {
}

func (o *GetDeviceConfigForAllDevicesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/config][%d] getDeviceConfigForAllDevicesUnsupportedMediaType ", 415)
}

func (o *GetDeviceConfigForAllDevicesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceConfigForAllDevicesInternalServerError creates a GetDeviceConfigForAllDevicesInternalServerError with default headers values
func NewGetDeviceConfigForAllDevicesInternalServerError() *GetDeviceConfigForAllDevicesInternalServerError {
	return &GetDeviceConfigForAllDevicesInternalServerError{}
}

/*GetDeviceConfigForAllDevicesInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type GetDeviceConfigForAllDevicesInternalServerError struct {
}

func (o *GetDeviceConfigForAllDevicesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/config][%d] getDeviceConfigForAllDevicesInternalServerError ", 500)
}

func (o *GetDeviceConfigForAllDevicesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceConfigForAllDevicesNotImplemented creates a GetDeviceConfigForAllDevicesNotImplemented with default headers values
func NewGetDeviceConfigForAllDevicesNotImplemented() *GetDeviceConfigForAllDevicesNotImplemented {
	return &GetDeviceConfigForAllDevicesNotImplemented{}
}

/*GetDeviceConfigForAllDevicesNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type GetDeviceConfigForAllDevicesNotImplemented struct {
}

func (o *GetDeviceConfigForAllDevicesNotImplemented) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/config][%d] getDeviceConfigForAllDevicesNotImplemented ", 501)
}

func (o *GetDeviceConfigForAllDevicesNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceConfigForAllDevicesServiceUnavailable creates a GetDeviceConfigForAllDevicesServiceUnavailable with default headers values
func NewGetDeviceConfigForAllDevicesServiceUnavailable() *GetDeviceConfigForAllDevicesServiceUnavailable {
	return &GetDeviceConfigForAllDevicesServiceUnavailable{}
}

/*GetDeviceConfigForAllDevicesServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type GetDeviceConfigForAllDevicesServiceUnavailable struct {
}

func (o *GetDeviceConfigForAllDevicesServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/config][%d] getDeviceConfigForAllDevicesServiceUnavailable ", 503)
}

func (o *GetDeviceConfigForAllDevicesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceConfigForAllDevicesGatewayTimeout creates a GetDeviceConfigForAllDevicesGatewayTimeout with default headers values
func NewGetDeviceConfigForAllDevicesGatewayTimeout() *GetDeviceConfigForAllDevicesGatewayTimeout {
	return &GetDeviceConfigForAllDevicesGatewayTimeout{}
}

/*GetDeviceConfigForAllDevicesGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type GetDeviceConfigForAllDevicesGatewayTimeout struct {
}

func (o *GetDeviceConfigForAllDevicesGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /dna/intent/api/v1/network-device/config][%d] getDeviceConfigForAllDevicesGatewayTimeout ", 504)
}

func (o *GetDeviceConfigForAllDevicesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
