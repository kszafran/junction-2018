// Code generated by go-swagger; DO NOT EDIT.

package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/kszafran/junction-2018/client/authentication"
	"github.com/kszafran/junction-2018/client/clients"
	"github.com/kszafran/junction-2018/client/command_runner"
	"github.com/kszafran/junction-2018/client/devices"
	"github.com/kszafran/junction-2018/client/file"
	"github.com/kszafran/junction-2018/client/network_discovery"
	"github.com/kszafran/junction-2018/client/networks"
	"github.com/kszafran/junction-2018/client/path_trace"
	"github.com/kszafran/junction-2018/client/pn_p"
	"github.com/kszafran/junction-2018/client/s_w_i_m"
	"github.com/kszafran/junction-2018/client/site_profile"
	"github.com/kszafran/junction-2018/client/sites"
	"github.com/kszafran/junction-2018/client/task"
	"github.com/kszafran/junction-2018/client/template_programmer"
)

// Default junction HTTP client.
var Default = NewHTTPClient(nil)

const (
	// DefaultHost is the default Host
	// found in Meta (info) section of spec file
	DefaultHost string = "localhost"
	// DefaultBasePath is the default BasePath
	// found in Meta (info) section of spec file
	DefaultBasePath string = "/"
)

// DefaultSchemes are the default schemes found in Meta (info) section of spec file
var DefaultSchemes = []string{"http"}

// NewHTTPClient creates a new junction HTTP client.
func NewHTTPClient(formats strfmt.Registry) *Junction {
	return NewHTTPClientWithConfig(formats, nil)
}

// NewHTTPClientWithConfig creates a new junction HTTP client,
// using a customizable transport config.
func NewHTTPClientWithConfig(formats strfmt.Registry, cfg *TransportConfig) *Junction {
	// ensure nullable parameters have default
	if cfg == nil {
		cfg = DefaultTransportConfig()
	}

	// create transport and client
	transport := httptransport.New(cfg.Host, cfg.BasePath, cfg.Schemes)
	return New(transport, formats)
}

// New creates a new junction client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Junction {
	// ensure nullable parameters have default
	if formats == nil {
		formats = strfmt.Default
	}

	cli := new(Junction)
	cli.Transport = transport

	cli.Authentication = authentication.New(transport, formats)

	cli.Clients = clients.New(transport, formats)

	cli.CommandRunner = command_runner.New(transport, formats)

	cli.Devices = devices.New(transport, formats)

	cli.File = file.New(transport, formats)

	cli.NetworkDiscovery = network_discovery.New(transport, formats)

	cli.Networks = networks.New(transport, formats)

	cli.PathTrace = path_trace.New(transport, formats)

	cli.PnP = pn_p.New(transport, formats)

	cli.SWIM = s_w_i_m.New(transport, formats)

	cli.SiteProfile = site_profile.New(transport, formats)

	cli.Sites = sites.New(transport, formats)

	cli.Task = task.New(transport, formats)

	cli.TemplateProgrammer = template_programmer.New(transport, formats)

	return cli
}

// DefaultTransportConfig creates a TransportConfig with the
// default settings taken from the meta section of the spec file.
func DefaultTransportConfig() *TransportConfig {
	return &TransportConfig{
		Host:     DefaultHost,
		BasePath: DefaultBasePath,
		Schemes:  DefaultSchemes,
	}
}

// TransportConfig contains the transport related info,
// found in the meta section of the spec file.
type TransportConfig struct {
	Host     string
	BasePath string
	Schemes  []string
}

// WithHost overrides the default host,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithHost(host string) *TransportConfig {
	cfg.Host = host
	return cfg
}

// WithBasePath overrides the default basePath,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithBasePath(basePath string) *TransportConfig {
	cfg.BasePath = basePath
	return cfg
}

// WithSchemes overrides the default schemes,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithSchemes(schemes []string) *TransportConfig {
	cfg.Schemes = schemes
	return cfg
}

// Junction is a client for junction
type Junction struct {
	Authentication *authentication.Client

	Clients *clients.Client

	CommandRunner *command_runner.Client

	Devices *devices.Client

	File *file.Client

	NetworkDiscovery *network_discovery.Client

	Networks *networks.Client

	PathTrace *path_trace.Client

	PnP *pn_p.Client

	SWIM *s_w_i_m.Client

	SiteProfile *site_profile.Client

	Sites *sites.Client

	Task *task.Client

	TemplateProgrammer *template_programmer.Client

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *Junction) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport

	c.Authentication.SetTransport(transport)

	c.Clients.SetTransport(transport)

	c.CommandRunner.SetTransport(transport)

	c.Devices.SetTransport(transport)

	c.File.SetTransport(transport)

	c.NetworkDiscovery.SetTransport(transport)

	c.Networks.SetTransport(transport)

	c.PathTrace.SetTransport(transport)

	c.PnP.SetTransport(transport)

	c.SWIM.SetTransport(transport)

	c.SiteProfile.SetTransport(transport)

	c.Sites.SetTransport(transport)

	c.Task.SetTransport(transport)

	c.TemplateProgrammer.SetTransport(transport)

}
