// Code generated by go-swagger; DO NOT EDIT.

package template_programmer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kszafran/junction-2018/models"
)

// UpdateTemplateReader is a Reader for the UpdateTemplate structure.
type UpdateTemplateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateTemplateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUpdateTemplateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 201:
		result := NewUpdateTemplateCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 202:
		result := NewUpdateTemplateAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewUpdateTemplateNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 206:
		result := NewUpdateTemplatePartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewUpdateTemplateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewUpdateTemplateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewUpdateTemplateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewUpdateTemplateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewUpdateTemplateConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewUpdateTemplateUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewUpdateTemplateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewUpdateTemplateNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewUpdateTemplateServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewUpdateTemplateGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateTemplateOK creates a UpdateTemplateOK with default headers values
func NewUpdateTemplateOK() *UpdateTemplateOK {
	return &UpdateTemplateOK{}
}

/*UpdateTemplateOK handles this case with default header values.

The request was successful. The result is contained in the response body.
*/
type UpdateTemplateOK struct {
	Payload *models.TaskIDResult
}

func (o *UpdateTemplateOK) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/template-programmer/template][%d] updateTemplateOK  %+v", 200, o.Payload)
}

func (o *UpdateTemplateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TaskIDResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateTemplateCreated creates a UpdateTemplateCreated with default headers values
func NewUpdateTemplateCreated() *UpdateTemplateCreated {
	return &UpdateTemplateCreated{}
}

/*UpdateTemplateCreated handles this case with default header values.

The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body.
*/
type UpdateTemplateCreated struct {
}

func (o *UpdateTemplateCreated) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/template-programmer/template][%d] updateTemplateCreated ", 201)
}

func (o *UpdateTemplateCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateTemplateAccepted creates a UpdateTemplateAccepted with default headers values
func NewUpdateTemplateAccepted() *UpdateTemplateAccepted {
	return &UpdateTemplateAccepted{}
}

/*UpdateTemplateAccepted handles this case with default header values.

The request was accepted for processing, but the processing has not been completed.
*/
type UpdateTemplateAccepted struct {
}

func (o *UpdateTemplateAccepted) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/template-programmer/template][%d] updateTemplateAccepted ", 202)
}

func (o *UpdateTemplateAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateTemplateNoContent creates a UpdateTemplateNoContent with default headers values
func NewUpdateTemplateNoContent() *UpdateTemplateNoContent {
	return &UpdateTemplateNoContent{}
}

/*UpdateTemplateNoContent handles this case with default header values.

The request was successful, however no content was returned.
*/
type UpdateTemplateNoContent struct {
}

func (o *UpdateTemplateNoContent) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/template-programmer/template][%d] updateTemplateNoContent ", 204)
}

func (o *UpdateTemplateNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateTemplatePartialContent creates a UpdateTemplatePartialContent with default headers values
func NewUpdateTemplatePartialContent() *UpdateTemplatePartialContent {
	return &UpdateTemplatePartialContent{}
}

/*UpdateTemplatePartialContent handles this case with default header values.

The GET request included a Range Header, and the server responded with the partial content matching the range.
*/
type UpdateTemplatePartialContent struct {
}

func (o *UpdateTemplatePartialContent) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/template-programmer/template][%d] updateTemplatePartialContent ", 206)
}

func (o *UpdateTemplatePartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateTemplateBadRequest creates a UpdateTemplateBadRequest with default headers values
func NewUpdateTemplateBadRequest() *UpdateTemplateBadRequest {
	return &UpdateTemplateBadRequest{}
}

/*UpdateTemplateBadRequest handles this case with default header values.

The client made a request that the server could not understand (for example, the request syntax is incorrect).
*/
type UpdateTemplateBadRequest struct {
}

func (o *UpdateTemplateBadRequest) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/template-programmer/template][%d] updateTemplateBadRequest ", 400)
}

func (o *UpdateTemplateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateTemplateUnauthorized creates a UpdateTemplateUnauthorized with default headers values
func NewUpdateTemplateUnauthorized() *UpdateTemplateUnauthorized {
	return &UpdateTemplateUnauthorized{}
}

/*UpdateTemplateUnauthorized handles this case with default header values.

The client's authentication credentials included with the request are missing or invalid.
*/
type UpdateTemplateUnauthorized struct {
}

func (o *UpdateTemplateUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/template-programmer/template][%d] updateTemplateUnauthorized ", 401)
}

func (o *UpdateTemplateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateTemplateForbidden creates a UpdateTemplateForbidden with default headers values
func NewUpdateTemplateForbidden() *UpdateTemplateForbidden {
	return &UpdateTemplateForbidden{}
}

/*UpdateTemplateForbidden handles this case with default header values.

The server recognizes the authentication credentials, but the client is not authorized to perform this request.
*/
type UpdateTemplateForbidden struct {
}

func (o *UpdateTemplateForbidden) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/template-programmer/template][%d] updateTemplateForbidden ", 403)
}

func (o *UpdateTemplateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateTemplateNotFound creates a UpdateTemplateNotFound with default headers values
func NewUpdateTemplateNotFound() *UpdateTemplateNotFound {
	return &UpdateTemplateNotFound{}
}

/*UpdateTemplateNotFound handles this case with default header values.

The client made a request for a resource that does not exist.
*/
type UpdateTemplateNotFound struct {
}

func (o *UpdateTemplateNotFound) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/template-programmer/template][%d] updateTemplateNotFound ", 404)
}

func (o *UpdateTemplateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateTemplateConflict creates a UpdateTemplateConflict with default headers values
func NewUpdateTemplateConflict() *UpdateTemplateConflict {
	return &UpdateTemplateConflict{}
}

/*UpdateTemplateConflict handles this case with default header values.

The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed.
*/
type UpdateTemplateConflict struct {
}

func (o *UpdateTemplateConflict) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/template-programmer/template][%d] updateTemplateConflict ", 409)
}

func (o *UpdateTemplateConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateTemplateUnsupportedMediaType creates a UpdateTemplateUnsupportedMediaType with default headers values
func NewUpdateTemplateUnsupportedMediaType() *UpdateTemplateUnsupportedMediaType {
	return &UpdateTemplateUnsupportedMediaType{}
}

/*UpdateTemplateUnsupportedMediaType handles this case with default header values.

The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON).
*/
type UpdateTemplateUnsupportedMediaType struct {
}

func (o *UpdateTemplateUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/template-programmer/template][%d] updateTemplateUnsupportedMediaType ", 415)
}

func (o *UpdateTemplateUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateTemplateInternalServerError creates a UpdateTemplateInternalServerError with default headers values
func NewUpdateTemplateInternalServerError() *UpdateTemplateInternalServerError {
	return &UpdateTemplateInternalServerError{}
}

/*UpdateTemplateInternalServerError handles this case with default header values.

The server could not fulfill the request.
*/
type UpdateTemplateInternalServerError struct {
}

func (o *UpdateTemplateInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/template-programmer/template][%d] updateTemplateInternalServerError ", 500)
}

func (o *UpdateTemplateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateTemplateNotImplemented creates a UpdateTemplateNotImplemented with default headers values
func NewUpdateTemplateNotImplemented() *UpdateTemplateNotImplemented {
	return &UpdateTemplateNotImplemented{}
}

/*UpdateTemplateNotImplemented handles this case with default header values.

The server has not implemented the functionality required to fulfill the request.
*/
type UpdateTemplateNotImplemented struct {
}

func (o *UpdateTemplateNotImplemented) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/template-programmer/template][%d] updateTemplateNotImplemented ", 501)
}

func (o *UpdateTemplateNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateTemplateServiceUnavailable creates a UpdateTemplateServiceUnavailable with default headers values
func NewUpdateTemplateServiceUnavailable() *UpdateTemplateServiceUnavailable {
	return &UpdateTemplateServiceUnavailable{}
}

/*UpdateTemplateServiceUnavailable handles this case with default header values.

The server is (temporarily) unavailable.
*/
type UpdateTemplateServiceUnavailable struct {
}

func (o *UpdateTemplateServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/template-programmer/template][%d] updateTemplateServiceUnavailable ", 503)
}

func (o *UpdateTemplateServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateTemplateGatewayTimeout creates a UpdateTemplateGatewayTimeout with default headers values
func NewUpdateTemplateGatewayTimeout() *UpdateTemplateGatewayTimeout {
	return &UpdateTemplateGatewayTimeout{}
}

/*UpdateTemplateGatewayTimeout handles this case with default header values.

The server did not respond inside time restrictions and timed-out.
*/
type UpdateTemplateGatewayTimeout struct {
}

func (o *UpdateTemplateGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /dna/intent/api/v1/template-programmer/template][%d] updateTemplateGatewayTimeout ", 504)
}

func (o *UpdateTemplateGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
